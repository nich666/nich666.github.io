<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>模板整合</title>
      <link href="//OI/%E6%A8%A1%E6%9D%BF%E6%95%B4%E5%90%88/"/>
      <url>//OI/%E6%A8%A1%E6%9D%BF%E6%95%B4%E5%90%88/</url>
      
        <content type="html"><![CDATA[<p>基本和个人码风一致</p><span id="more"></span><h2 id="数据结构"><a href="#数据结构" class="headerlink" title="数据结构"></a>数据结构</h2><h3 id="单调队列"><a href="#单调队列" class="headerlink" title="单调队列"></a>单调队列</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">q[++r]=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;++i)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">while</span>(q[l]&lt;i-m&amp;&amp;l&lt;=r) ++l;</span><br><span class="line">    <span class="comment">// </span></span><br><span class="line">    <span class="keyword">while</span>(v[i]&lt;=v[q[r]]&amp;&amp;l&lt;=r) --r;</span><br><span class="line">    q[++r]=i;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="单调栈"><a href="#单调栈" class="headerlink" title="单调栈"></a>单调栈</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">1e5</span>+<span class="number">5</span>;</span><br><span class="line"><span class="type">int</span> n,w[N],cnt,x,ans,h[N],a[N];</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    cnt=ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(!n) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(re <span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;++i)    cin&gt;&gt;a[i];</span><br><span class="line">    a[n+<span class="number">1</span>]=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n+<span class="number">1</span>;++i)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> res=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span>(h[cnt]&gt;a[i]) res+=w[cnt],ans=<span class="built_in">max</span>(ans,res*h[cnt]),--cnt;</span><br><span class="line">        w[++cnt]=res,h[cnt]=a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;ans&lt;&lt;endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="并查集"><a href="#并查集" class="headerlink" title="并查集"></a>并查集</h3> <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">find</span><span class="params">(<span class="type">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> x==f[x]?x:f[x]=<span class="built_in">find</span>(f[x]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="堆"><a href="#堆" class="headerlink" title="堆"></a>堆</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">priority_queue&lt;<span class="type">int</span>&gt;q;</span><br><span class="line"></span><br><span class="line">priority_queue&lt;<span class="type">int</span>,vector&lt;<span class="type">int</span>&gt;,less&lt;<span class="type">int</span>&gt; &gt;q;</span><br></pre></td></tr></table></figure><h4 id="左偏树"><a href="#左偏树" class="headerlink" title="左偏树"></a>左偏树</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">merge</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(!x||!y) <span class="keyword">return</span> x+y;</span><br><span class="line"><span class="keyword">if</span>(v[y]&lt;v[x]) <span class="built_in">swap</span>(x,y);</span><br><span class="line">rc[x]=<span class="built_in">merge</span>(rc[x],y);</span><br><span class="line"><span class="keyword">if</span>(d[rc[x]]&gt;d[lc[x]]) <span class="built_in">swap</span>(rc[x],lc[x]);</span><br><span class="line">d[x]=d[rc[x]]+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">return</span> x;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="树状数组"><a href="#树状数组" class="headerlink" title="树状数组"></a>树状数组</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> lowbit(x) x&amp;-x</span></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">add</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> v)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(;x&lt;=n;x+=<span class="built_in">lowbit</span>(x)) c[x]+=v;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">int</span> <span class="title">ask</span><span class="params">(<span class="type">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> res=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(;x;x-=<span class="built_in">lowbit</span>(x)) res+=c[x];</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//二维</span></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">add</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> y,<span class="type">int</span> v)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(;x&lt;=n;x+=<span class="built_in">lowbit</span>(x))</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=y;i&lt;=m;i+=<span class="built_in">lowbit</span>(i)) c[x][i]+=v;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">int</span> <span class="title">ask</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> res=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(;x;x-=<span class="built_in">lowbit</span>(x))</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=y;i;i-=<span class="built_in">lowbit</span>(i)) res+=c[x][i];</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//单点修改，区间查询</span></span><br><span class="line"><span class="keyword">while</span>(cin&gt;&gt;opt&gt;&gt;a&gt;&gt;b&gt;&gt;c)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span>(opt==<span class="number">1</span>) <span class="built_in">add</span>(a,b,c);</span><br><span class="line">    <span class="keyword">else</span> cin&gt;&gt;d,cout&lt;&lt;<span class="built_in">ask</span>(c,d)-<span class="built_in">ask</span>(c,b<span class="number">-1</span>)-<span class="built_in">ask</span>(a<span class="number">-1</span>,d)+<span class="built_in">ask</span>(a<span class="number">-1</span>,b<span class="number">-1</span>)&lt;&lt;endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//区间修改，单点查询</span></span><br><span class="line"><span class="keyword">while</span>(cin&gt;&gt;opt&gt;&gt;a&gt;&gt;b)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span>(opt==<span class="number">1</span>) cin&gt;&gt;c&gt;&gt;d&gt;&gt;k,<span class="built_in">add</span>(c+<span class="number">1</span>,d+<span class="number">1</span>,k),<span class="built_in">add</span>(a,b,k),<span class="built_in">add</span>(a,d+<span class="number">1</span>,-k),<span class="built_in">add</span>(c+<span class="number">1</span>,b,-k);</span><br><span class="line">    <span class="keyword">else</span> cout&lt;&lt;<span class="built_in">ask</span>(a,b)&lt;&lt;endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//区间修改，区间查询</span></span><br><span class="line"><span class="type">int</span> n,m,c[<span class="number">4</span>][N][N];</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">add</span><span class="params">(<span class="type">int</span> k,<span class="type">int</span> x,<span class="type">int</span> y,<span class="type">int</span> v)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(;x&lt;=n;x+=<span class="built_in">lowbit</span>(x))</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=y;i&lt;=m;i+=<span class="built_in">lowbit</span>(i)) c[k][x][i]+=v;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">int</span> <span class="title">ask</span><span class="params">(<span class="type">int</span> k,<span class="type">int</span> x,<span class="type">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> res=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(;x;x-=<span class="built_in">lowbit</span>(x))</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=y;i;i-=<span class="built_in">lowbit</span>(i)) res+=c[k][x][i];</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">Add</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> y,<span class="type">int</span> v)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">add</span>(<span class="number">0</span>,x,y,v),<span class="built_in">add</span>(<span class="number">1</span>,x,y,x*v),<span class="built_in">add</span>(<span class="number">2</span>,x,y,y*v),<span class="built_in">add</span>(<span class="number">3</span>,x,y,v*x*y);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">int</span> <span class="title">Ask</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">ask</span>(<span class="number">0</span>,x,y)*(x*y+x+y+<span class="number">1</span>)-<span class="built_in">ask</span>(<span class="number">1</span>,x,y)*(y+<span class="number">1</span>)-<span class="built_in">ask</span>(<span class="number">2</span>,x,y)*(x+<span class="number">1</span>)+<span class="built_in">ask</span>(<span class="number">3</span>,x,y);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(cin&gt;&gt;opt&gt;&gt;a&gt;&gt;b&gt;&gt;cc&gt;&gt;d)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(opt==<span class="number">1</span>) cin&gt;&gt;k,<span class="built_in">Add</span>(a,b,k),<span class="built_in">Add</span>(cc+<span class="number">1</span>,b,-k),<span class="built_in">Add</span>(a,d+<span class="number">1</span>,-k),<span class="built_in">Add</span>(cc+<span class="number">1</span>,d+<span class="number">1</span>,k);</span><br><span class="line"><span class="keyword">else</span> cout&lt;&lt;<span class="built_in">Ask</span>(cc,d)+<span class="built_in">Ask</span>(a<span class="number">-1</span>,b<span class="number">-1</span>)-<span class="built_in">Ask</span>(a<span class="number">-1</span>,d)-<span class="built_in">Ask</span>(cc,b<span class="number">-1</span>)&lt;&lt;endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="ST表"><a href="#ST表" class="headerlink" title="ST表"></a>ST表</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">pre</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    lg[<span class="number">0</span>]=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;++i) lg[i]=lg[i&gt;&gt;<span class="number">1</span>]+<span class="number">1</span>,maxn[i][<span class="number">0</span>]=v[i];</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=lg[n];++i)</span><br><span class="line">       <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j+(<span class="number">1</span>&lt;&lt;i)<span class="number">-1</span>&lt;=n;++j) maxn[j][i]=<span class="built_in">max</span>(maxn[j][i<span class="number">-1</span>],maxn[j+(<span class="number">1</span>&lt;&lt;i<span class="number">-1</span>)][i<span class="number">-1</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">int</span> <span class="title">ask</span><span class="params">(<span class="type">int</span> l,<span class="type">int</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> len=lg[r-l+<span class="number">1</span>];</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">max</span>(maxn[l][len],maxn[r-(<span class="number">1</span>&lt;&lt;len)+<span class="number">1</span>][len]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="线段树"><a href="#线段树" class="headerlink" title="线段树"></a>线段树</h3><h4 id="非动态开点"><a href="#非动态开点" class="headerlink" title="非动态开点"></a>非动态开点</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> k1 (k&lt;&lt;1)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> k2 (k&lt;&lt;1|1)</span></span><br><span class="line"><span class="keyword">struct</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> l,r,v,add;</span><br><span class="line">&#125;t[N];</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">up</span><span class="params">(<span class="type">int</span> k)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    t[k].v=t[k1].v+t[k2].v;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">push</span><span class="params">(<span class="type">int</span> k)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(t[k].add)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> v=t[k].add;t[k].add=<span class="number">0</span>;</span><br><span class="line">        t[k1].add+=v,t[k1].v+=(t[k1].r-t[k1].l+<span class="number">1</span>)*v;</span><br><span class="line">        t[k2].add+=v,t[k2].v+=(t[k2].r-t[k2].l+<span class="number">1</span>)*v;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">build</span><span class="params">(<span class="type">int</span> k,<span class="type">int</span> l,<span class="type">int</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    t[k].l=l,t[k].r=r;</span><br><span class="line">    <span class="keyword">if</span>(l==r)</span><br><span class="line">    &#123;</span><br><span class="line">        cin&gt;&gt;t[k].v;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> mid=l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line">    <span class="built_in">build</span>(k1,l,mid);</span><br><span class="line">    <span class="built_in">build</span>(k2,mid+<span class="number">1</span>,r);</span><br><span class="line">    <span class="built_in">up</span>(k);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">change</span><span class="params">(<span class="type">int</span> k,<span class="type">int</span> l,<span class="type">int</span> r,<span class="type">int</span> v)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(l&lt;=t[k].l&amp;&amp;r&gt;=t[k].r)</span><br><span class="line">    &#123;</span><br><span class="line">        t[k].add+=v,t[k].v+=v*(t[k].r-t[k].l+<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">push</span>(k);</span><br><span class="line">    <span class="keyword">if</span>(l&lt;=t[k1].r) <span class="built_in">change</span>(k1,l,r,v);</span><br><span class="line">    <span class="keyword">if</span>(r&gt;=t[k2].l) <span class="built_in">change</span>(k2,l,r,v);</span><br><span class="line">    <span class="built_in">up</span>(k);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">ask</span><span class="params">(<span class="type">int</span> k,<span class="type">int</span> l,<span class="type">int</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(l&lt;=t[k].l&amp;&amp;r&gt;=t[k].r) <span class="keyword">return</span> t[k].v;</span><br><span class="line">    <span class="built_in">push</span>(k);</span><br><span class="line">    <span class="type">int</span> res=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(l&lt;=t[k1].r) res+=<span class="built_in">ask</span>(k1,l,r);</span><br><span class="line">    <span class="keyword">if</span>(r&gt;=t[k2].l) res+=<span class="built_in">ask</span>(k2,l,r);</span><br><span class="line">    <span class="built_in">up</span>(k);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="动态开点"><a href="#动态开点" class="headerlink" title="动态开点"></a>动态开点</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> k1 t[k].lc</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> k2 t[k].rc</span></span><br><span class="line"><span class="keyword">struct</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> lc,rc,v,add;</span><br><span class="line">&#125;t[N];</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">up</span><span class="params">(<span class="type">int</span> k)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    t[k].v=t[k1].v+t[k2].v;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">push</span><span class="params">(<span class="type">int</span> k)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(t[k].add)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> v=t[k].add;t[k].add=<span class="number">0</span>;</span><br><span class="line">        t[k1].add+=v,t[k1].v+=(t[k1].r-t[k1].l+<span class="number">1</span>)*v;</span><br><span class="line">        t[k2].add+=v,t[k2].v+=(t[k2].r-t[k2].l+<span class="number">1</span>)*v;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">change</span><span class="params">(<span class="type">int</span> &amp;k,<span class="type">int</span> l,<span class="type">int</span> r,<span class="type">int</span> L,<span class="type">int</span> R,<span class="type">int</span> v)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(!k) k=++tot;</span><br><span class="line">    <span class="keyword">if</span>(l&lt;=L&amp;&amp;r&gt;=R)</span><br><span class="line">    &#123;</span><br><span class="line">        t[k].add+=v,t[k].v+=v*(t[k].r-t[k].l+<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">push</span>(k);</span><br><span class="line">    <span class="type">int</span> mid=L+R&gt;&gt;<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>(l&lt;=mid) <span class="built_in">change</span>(k1,l,r,L,mid,v);</span><br><span class="line">    <span class="keyword">if</span>(r&gt;mid) <span class="built_in">change</span>(k2,l,r,mid+<span class="number">1</span>,R,v);</span><br><span class="line">    <span class="built_in">up</span>(k);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">ask</span><span class="params">(<span class="type">int</span> k,<span class="type">int</span> l,<span class="type">int</span> r,<span class="type">int</span> L,<span class="type">int</span> R)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(!k) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(l&lt;=L&amp;&amp;r&gt;=R) <span class="keyword">return</span> t[k].v;</span><br><span class="line">    <span class="built_in">push</span>(k);</span><br><span class="line">    <span class="type">int</span> res=<span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> mid=L+R&gt;&gt;<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>(l&lt;=mid) res+=<span class="built_in">ask</span>(k1,l,r,L,mid);</span><br><span class="line">    <span class="keyword">if</span>(r&gt;mid) res+=<span class="built_in">ask</span>(k2,l,r,mid+<span class="number">1</span>,R);</span><br><span class="line">    <span class="built_in">up</span>(k);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="线段树合并（不回收内存）"><a href="#线段树合并（不回收内存）" class="headerlink" title="线段树合并（不回收内存）"></a>线段树合并（不回收内存）</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">merge</span><span class="params">(<span class="type">int</span> p,<span class="type">int</span> q,<span class="type">int</span> l,<span class="type">int</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(!p||!q) <span class="keyword">return</span> p+q;</span><br><span class="line">    t[p].v+=t[q].v;</span><br><span class="line">    <span class="type">int</span> mid=l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line">    t[p].lc=<span class="built_in">merge</span>(t[p].lc,t[q].lc,l,mid);</span><br><span class="line">    t[p].rc=<span class="built_in">merge</span>(t[p].rc,t[p].rc,mid+<span class="number">1</span>,r);</span><br><span class="line">    <span class="keyword">return</span> p;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="线段树分裂"><a href="#线段树分裂" class="headerlink" title="线段树分裂"></a>线段树分裂</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">split</span><span class="params">(<span class="type">int</span> p,<span class="type">int</span> &amp;q,<span class="type">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(!p) <span class="keyword">return</span>;</span><br><span class="line">    q=++tot;</span><br><span class="line">    <span class="type">int</span> v=t[t[p].lc].v;</span><br><span class="line">    <span class="keyword">if</span>(v&lt;x) <span class="built_in">split</span>(t[p].rc,t[q].rc,x-v);</span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">swap</span>(t[p].rc,t[q].rc);</span><br><span class="line">    <span class="keyword">if</span>(x&lt;v) <span class="built_in">split</span>(t[p].lc,t[q].lc,x);</span><br><span class="line">    t[q].v=t[p].v-x,t[p].v=x;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="李超线段树"><a href="#李超线段树" class="headerlink" title="李超线段树"></a>李超线段树</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">struct</span> <span class="title class_">Line</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">double</span> k,b,l,r;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">double</span> <span class="title">calc</span><span class="params">(<span class="type">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(x&gt;r||x&lt;l) <span class="keyword">return</span> -INF;</span><br><span class="line"><span class="keyword">return</span> k*x+b;</span><br><span class="line">&#125;</span><br><span class="line">&#125;line[N];</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">int</span> <span class="title">cmp</span><span class="params">(<span class="type">double</span> x,<span class="type">double</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">fabs</span>(x-y)&lt;eps?<span class="number">0</span>:x&gt;y?<span class="number">1</span>:<span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">int</span> <span class="title">check</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b,<span class="type">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">double</span> af=line[a].<span class="built_in">calc</span>(x),bf=line[b].<span class="built_in">calc</span>(x);</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">cmp</span>(af,bf)?af&lt;bf:a&gt;b;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> Line <span class="title">get</span><span class="params">(<span class="type">double</span> a,<span class="type">double</span> b,<span class="type">double</span> c,<span class="type">double</span> d)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(!<span class="built_in">cmp</span>(a,c)) <span class="keyword">return</span> (Line)&#123;<span class="number">0</span>,<span class="built_in">max</span>(b,d),a,a&#125;;</span><br><span class="line"><span class="type">double</span> k=(d-b)/(c-a);</span><br><span class="line"><span class="type">double</span> e=b-a*k;</span><br><span class="line"><span class="keyword">return</span> (Line)&#123;k,e,a,c&#125;;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">LC_Segment_Tree</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">tree</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> l,r,id;</span><br><span class="line">&#125;t[N&lt;&lt;<span class="number">2</span>];</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">build</span><span class="params">(<span class="type">int</span> k,<span class="type">int</span> l,<span class="type">int</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">t[k]=(tree)&#123;l,r,<span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">if</span>(l==r) <span class="keyword">return</span>;</span><br><span class="line"><span class="type">int</span> mid=l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="built_in">build</span>(k1,l,mid);<span class="built_in">build</span>(k2,mid+<span class="number">1</span>,r);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">change</span><span class="params">(<span class="type">int</span> k,<span class="type">int</span> l,<span class="type">int</span> r,<span class="type">int</span> p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> mid=t[k].l+t[k].r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(l&lt;=t[k].l&amp;&amp;r&gt;=t[k].r)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">check</span>(t[k].id,p,mid)) <span class="built_in">swap</span>(t[k].id,p);</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">check</span>(t[k].id,p,t[k].l)) <span class="built_in">change</span>(k1,t[k].l,t[k].r,p);</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">check</span>(t[k].id,p,t[k].r)) <span class="built_in">change</span>(k2,t[k].l,t[k].r,p);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(l&lt;=mid) <span class="built_in">change</span>(k1,l,r,p);</span><br><span class="line"><span class="keyword">if</span>(r&gt;mid) <span class="built_in">change</span>(k2,l,r,p);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">ask</span><span class="params">(<span class="type">int</span> k,<span class="type">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(t[k].l==t[k].r) <span class="keyword">return</span> t[k].id;</span><br><span class="line"><span class="type">int</span> mid=t[k].l+t[k].r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="type">int</span> res=<span class="built_in">ask</span>(x&lt;=mid?k1:k2,x);</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">check</span>(res,t[k].id,x)) res=t[k].id;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line">&#125;T;</span><br></pre></td></tr></table></figure><h3 id="平衡树"><a href="#平衡树" class="headerlink" title="平衡树"></a>平衡树</h3><h4 id="Treap"><a href="#Treap" class="headerlink" title="Treap"></a>Treap</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> n,tot,root;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">1e5</span>+<span class="number">5</span>;</span><br><span class="line"><span class="type">int</span> ch[N][<span class="number">2</span>],s[N],c[N],v[N],p[N];</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">up</span><span class="params">(<span class="type">int</span> k)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">s[k]=s[ch[k][<span class="number">0</span>]]+s[ch[k][<span class="number">1</span>]]+c[k];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">int</span> <span class="title">New</span><span class="params">(<span class="type">int</span> val)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">v[++tot]=val,p[tot]=<span class="built_in">rand</span>(),s[tot]=c[tot]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">return</span> tot;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">rote</span><span class="params">(<span class="type">int</span> &amp;k,<span class="type">const</span> <span class="type">int</span> d)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> x=ch[k][d^<span class="number">1</span>];</span><br><span class="line">ch[k][d^<span class="number">1</span>]=ch[x][d],ch[x][d]=k;</span><br><span class="line">k=x;</span><br><span class="line"><span class="built_in">up</span>(ch[k][d]),<span class="built_in">up</span>(k);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">ins</span><span class="params">(<span class="type">int</span> &amp;k,<span class="type">int</span> val)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(!k)</span><br><span class="line">&#123;</span><br><span class="line">k=<span class="built_in">New</span>(val);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(v[k]==val)++c[k];</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> d=v[k]&lt;val?<span class="number">1</span>:<span class="number">0</span>;</span><br><span class="line"><span class="built_in">ins</span>(ch[k][d],val);</span><br><span class="line"><span class="keyword">if</span>(p[ch[k][d]]&gt;p[k]) <span class="built_in">rote</span>(k,d^<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">up</span>(k);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">del</span><span class="params">(<span class="type">int</span> &amp;k,<span class="type">int</span> val)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(!k) <span class="keyword">return</span>;</span><br><span class="line"><span class="keyword">if</span>(v[k]==val)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(c[k]&gt;<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">--c[k],<span class="built_in">up</span>(k);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(ch[k][<span class="number">0</span>]||ch[k][<span class="number">1</span>])</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(!ch[k][<span class="number">1</span>]||p[ch[k][<span class="number">0</span>]]&gt;p[ch[k][<span class="number">1</span>]])<span class="built_in">rote</span>(k,<span class="number">1</span>),<span class="built_in">del</span>(ch[k][<span class="number">1</span>],val);</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">rote</span>(k,<span class="number">0</span>),<span class="built_in">del</span>(ch[k][<span class="number">0</span>],val);</span><br><span class="line"><span class="built_in">up</span>(k);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> k=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">del</span>(ch[k][val&gt;v[k]],val);</span><br><span class="line"><span class="built_in">up</span>(k);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">rk</span><span class="params">(<span class="type">int</span> k,<span class="type">int</span> val)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(!k) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(v[k]==val) <span class="keyword">return</span> s[ch[k][<span class="number">0</span>]]+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(v[k]&gt;val) <span class="keyword">return</span> <span class="built_in">rank1</span>(ch[k][<span class="number">0</span>],val);</span><br><span class="line"><span class="keyword">return</span> s[ch[k][<span class="number">0</span>]]+c[k]+<span class="built_in">rank1</span>(ch[k][<span class="number">1</span>],val);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">find</span><span class="params">(<span class="type">int</span> k,<span class="type">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(!k) <span class="keyword">return</span> <span class="number">1e9</span>;</span><br><span class="line"><span class="keyword">if</span>(s[ch[k][<span class="number">0</span>]]&gt;=x) <span class="keyword">return</span> <span class="built_in">find</span>(ch[k][<span class="number">0</span>],x);</span><br><span class="line"><span class="keyword">if</span>(s[ch[k][<span class="number">0</span>]]+c[k]&gt;=x) <span class="keyword">return</span> v[k];</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">find</span>(ch[k][<span class="number">1</span>],x-s[ch[k][<span class="number">0</span>]]-c[k]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">int</span> <span class="title">pre</span><span class="params">(<span class="type">int</span> val)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> k=root,ans;</span><br><span class="line"><span class="keyword">while</span>(k)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(v[k]&lt;val) ans=v[k],k=ch[k][<span class="number">1</span>];</span><br><span class="line"><span class="keyword">else</span> k=ch[k][<span class="number">0</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">int</span> <span class="title">suc</span><span class="params">(<span class="type">int</span> val)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> k=root,ans;</span><br><span class="line"><span class="keyword">while</span>(k)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(v[k]&gt;val) ans=v[k],k=ch[k][<span class="number">0</span>];</span><br><span class="line"><span class="keyword">else</span> k=ch[k][<span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">srand</span>(<span class="built_in">time</span>(<span class="number">0</span>));</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">cin.<span class="built_in">tie</span>(<span class="number">0</span>);cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">cin&gt;&gt;n;</span><br><span class="line"><span class="type">int</span> x,y;</span><br><span class="line"><span class="keyword">while</span>(n--)</span><br><span class="line">&#123;</span><br><span class="line">cin&gt;&gt;x&gt;&gt;y;</span><br><span class="line"><span class="keyword">if</span>(x==<span class="number">1</span>) <span class="built_in">ins</span>(root,y);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(x==<span class="number">2</span>) <span class="built_in">del</span>(root,y);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(x==<span class="number">3</span>)cout&lt;&lt;<span class="built_in">rk</span>(root,y)&lt;&lt;endl;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(x==<span class="number">4</span>)cout&lt;&lt;<span class="built_in">find</span>(root,y)&lt;&lt;endl;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(x==<span class="number">5</span>)cout&lt;&lt;<span class="built_in">pre</span>(y)&lt;&lt;endl;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(x==<span class="number">6</span>)cout&lt;&lt;<span class="built_in">suc</span>(y)&lt;&lt;endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="Splay"><a href="#Splay" class="headerlink" title="Splay"></a>Splay</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">2e5</span>+<span class="number">5</span>;</span><br><span class="line"><span class="type">int</span> n,m,root,tot;</span><br><span class="line"><span class="type">int</span> s[N],ch[N][<span class="number">2</span>],v[N],cnt[N],f[N],flag[N];</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">up</span><span class="params">(<span class="type">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">s[x]=s[ch[x][<span class="number">0</span>]]+s[ch[x][<span class="number">1</span>]]+cnt[x];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">bool</span> <span class="title">get</span><span class="params">(<span class="type">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> x==ch[f[x]][<span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">reve</span><span class="params">(<span class="type">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">swap</span>(ch[x][<span class="number">0</span>],ch[x][<span class="number">1</span>]);</span><br><span class="line">flag[x]^=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">push</span><span class="params">(<span class="type">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(flag[x])</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">reve</span>(ch[x][<span class="number">0</span>]),<span class="built_in">reve</span>(ch[x][<span class="number">1</span>]);</span><br><span class="line">flag[x]=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">rotate</span><span class="params">(<span class="type">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> y=f[x],z=f[y],d=<span class="built_in">get</span>(x);</span><br><span class="line">ch[y][d]=ch[x][d^<span class="number">1</span>];</span><br><span class="line"><span class="keyword">if</span>(ch[y][d]) f[ch[y][d]]=y;</span><br><span class="line">ch[z][<span class="built_in">get</span>(y)]=x,f[x]=z;</span><br><span class="line">ch[x][d^<span class="number">1</span>]=y,f[y]=x;</span><br><span class="line"><span class="built_in">up</span>(y),<span class="built_in">up</span>(x);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">splay</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> k=<span class="number">0</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">while</span>(f[x]!=k)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> y=f[x],z=f[y];</span><br><span class="line"><span class="keyword">if</span>(z!=k) <span class="built_in">rotate</span>(<span class="built_in">get</span>(x)==<span class="built_in">get</span>(y)?y:x);</span><br><span class="line"><span class="built_in">rotate</span>(x);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(!k) root=x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">ins</span><span class="params">(<span class="type">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> cur=root,fa=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(cur&amp;&amp;v[cur]!=x) fa=cur,cur=ch[cur][x&gt;v[cur]];</span><br><span class="line"><span class="keyword">if</span>(cur) ++cnt[cur],++s[cur];</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">cur=++tot;</span><br><span class="line"><span class="keyword">if</span>(fa) ch[fa][x&gt;v[fa]]=cur;</span><br><span class="line">f[cur]=fa,v[cur]=x,cnt[cur]=s[cur]=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">splay</span>(cur);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">find</span><span class="params">(<span class="type">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> cur=root;</span><br><span class="line"><span class="keyword">while</span>(ch[cur][x&gt;v[cur]]&amp;&amp;x!=v[cur]) cur=ch[cur][x&gt;v[cur]];</span><br><span class="line"><span class="built_in">splay</span>(cur);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">int</span> <span class="title">kth</span><span class="params">(<span class="type">int</span> k)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> cur=root;</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(k&lt;=s[ch[cur][<span class="number">0</span>]]) cur=ch[cur][<span class="number">0</span>];</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(k&gt;s[ch[cur][<span class="number">0</span>]]+cnt[cur]) k-=s[ch[cur][<span class="number">0</span>]]+cnt[cur],cur=ch[cur][<span class="number">1</span>];</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">return</span> <span class="built_in">splay</span>(cur),cur;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">int</span> <span class="title">rk</span><span class="params">(<span class="type">int</span> k)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">find</span>(k);</span><br><span class="line"><span class="keyword">return</span> s[ch[root][<span class="number">0</span>]];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">int</span> <span class="title">pre</span><span class="params">(<span class="type">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">find</span>(x);</span><br><span class="line"><span class="keyword">if</span>(v[root]&lt;x) <span class="keyword">return</span> root;</span><br><span class="line"><span class="type">int</span> cur=ch[root][<span class="number">0</span>];</span><br><span class="line"><span class="keyword">while</span>(ch[cur][<span class="number">1</span>]) cur=ch[cur][<span class="number">1</span>];</span><br><span class="line"><span class="built_in">splay</span>(cur);</span><br><span class="line"><span class="keyword">return</span> cur;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">int</span> <span class="title">suc</span><span class="params">(<span class="type">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">find</span>(x);</span><br><span class="line"><span class="keyword">if</span>(v[root]&gt;x) <span class="keyword">return</span> root;</span><br><span class="line"><span class="type">int</span> cur=ch[root][<span class="number">1</span>];</span><br><span class="line"><span class="keyword">while</span>(ch[cur][<span class="number">0</span>]) cur=ch[cur][<span class="number">0</span>];</span><br><span class="line"><span class="built_in">splay</span>(cur);</span><br><span class="line"><span class="keyword">return</span> cur;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">del</span><span class="params">(<span class="type">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> k1=<span class="built_in">pre</span>(x),k2=<span class="built_in">suc</span>(x);</span><br><span class="line"><span class="built_in">splay</span>(k1);</span><br><span class="line"><span class="built_in">splay</span>(k2,k1);</span><br><span class="line"><span class="type">int</span> del=ch[k2][<span class="number">0</span>];</span><br><span class="line"><span class="keyword">if</span>(--cnt[del]) <span class="built_in">splay</span>(del);</span><br><span class="line"><span class="keyword">else</span> ch[k2][<span class="number">0</span>]=<span class="number">0</span>;</span><br><span class="line"><span class="built_in">up</span>(k2),<span class="built_in">up</span>(root);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">rev</span><span class="params">(<span class="type">int</span> l,<span class="type">int</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> k1=<span class="built_in">kth</span>(l),k2=<span class="built_in">kth</span>(r+<span class="number">2</span>);</span><br><span class="line"><span class="built_in">splay</span>(k1),<span class="built_in">splay</span>(k2,k1);</span><br><span class="line"><span class="built_in">reve</span>(ch[k2][<span class="number">0</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">cin.<span class="built_in">tie</span>(<span class="number">0</span>);cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">cin&gt;&gt;m;</span><br><span class="line"><span class="type">int</span> opt,x,y;</span><br><span class="line"><span class="built_in">ins</span>(<span class="number">-1e9</span>),<span class="built_in">ins</span>(<span class="number">1e9</span>);</span><br><span class="line"><span class="type">int</span> ans=<span class="number">0</span>,res=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(m--)</span><br><span class="line">&#123;</span><br><span class="line">cin&gt;&gt;opt&gt;&gt;x;</span><br><span class="line"><span class="keyword">if</span>(opt==<span class="number">1</span>) <span class="built_in">ins</span>(x);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(opt==<span class="number">2</span>) <span class="built_in">del</span>(x);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(opt==<span class="number">3</span>) res=<span class="built_in">rk</span>(x),cout&lt;&lt;res&lt;&lt;endl;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(opt==<span class="number">4</span>) res=v[<span class="built_in">kth</span>(x+<span class="number">1</span>)],cout&lt;&lt;res&lt;&lt;endl;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(opt==<span class="number">5</span>) res=v[<span class="built_in">pre</span>(x)],cout&lt;&lt;res&lt;&lt;endl;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(opt==<span class="number">6</span>) res=v[<span class="built_in">suc</span>(x)],cout&lt;&lt;res&lt;&lt;endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="FHQ-Treap"><a href="#FHQ-Treap" class="headerlink" title="FHQ-Treap"></a>FHQ-Treap</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">struct</span> <span class="title class_">FHQ_Treap</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> root=<span class="number">0</span>,tot=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">tree</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> lc,rc,s,v,p;</span><br><span class="line">&#125;t[N];</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">int</span> <span class="title">newnode</span><span class="params">(<span class="type">int</span> v)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">t[++tot]=(tree)&#123;<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,v,<span class="built_in">rand</span>()&#125;;</span><br><span class="line"><span class="keyword">return</span> tot;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">up</span><span class="params">(<span class="type">int</span> k)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">t[k].s=t[t[k].lc].s+t[t[k].rc].s+<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">split</span><span class="params">(<span class="type">int</span> k,<span class="type">int</span> v,<span class="type">int</span> &amp;x,<span class="type">int</span> &amp;y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(!k)</span><br><span class="line">&#123;</span><br><span class="line">x=y=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(t[k].v&lt;=v) x=k,<span class="built_in">split</span>(t[k].rc,v,t[k].rc,y);</span><br><span class="line"><span class="keyword">else</span> y=k,<span class="built_in">split</span>(t[k].lc,v,x,t[k].lc);</span><br><span class="line"><span class="built_in">up</span>(k); </span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">int</span> <span class="title">merge</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(!x||!y) <span class="keyword">return</span> x+y;</span><br><span class="line"><span class="keyword">if</span>(t[x].p&lt;t[y].p)</span><br><span class="line">&#123;</span><br><span class="line">t[x].rc=<span class="built_in">merge</span>(t[x].rc,y);</span><br><span class="line"><span class="built_in">up</span>(x);</span><br><span class="line"><span class="keyword">return</span> x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">t[y].lc=<span class="built_in">merge</span>(x,t[y].lc);</span><br><span class="line"><span class="built_in">up</span>(y);</span><br><span class="line"><span class="keyword">return</span> y;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> x,y,z;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">ins</span><span class="params">(<span class="type">int</span> v)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">split</span>(root,v,x,y);</span><br><span class="line">root=<span class="built_in">merge</span>(<span class="built_in">merge</span>(x,<span class="built_in">newnode</span>(v)),y);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">del</span><span class="params">(<span class="type">int</span> v)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">split</span>(root,v<span class="number">-1</span>,x,y),<span class="built_in">split</span>(y,v,y,z);</span><br><span class="line">y=<span class="built_in">merge</span>(t[y].lc,t[y].rc);</span><br><span class="line">root=<span class="built_in">merge</span>(<span class="built_in">merge</span>(x,y),z);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">rk</span><span class="params">(<span class="type">int</span> v)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">split</span>(root,v<span class="number">-1</span>,x,y);</span><br><span class="line">cout&lt;&lt;t[x].s+<span class="number">1</span>&lt;&lt;endl;</span><br><span class="line">root=<span class="built_in">merge</span>(x,y);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">int</span> <span class="title">kth</span><span class="params">(<span class="type">int</span> p,<span class="type">int</span> k)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(k&lt;=t[t[p].lc].s) p=t[p].lc;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(t[t[p].lc].s+<span class="number">1</span>==k) <span class="keyword">return</span> t[p].v;</span><br><span class="line"><span class="keyword">else</span> k-=t[t[p].lc].s+<span class="number">1</span>,p=t[p].rc;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">pre</span><span class="params">(<span class="type">int</span> v)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">split</span>(root,v<span class="number">-1</span>,x,y);</span><br><span class="line">cout&lt;&lt;<span class="built_in">kth</span>(x,t[x].s)&lt;&lt;endl;</span><br><span class="line">root=<span class="built_in">merge</span>(x,y);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">suc</span><span class="params">(<span class="type">int</span> v)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">split</span>(root,v,x,y);</span><br><span class="line">cout&lt;&lt;<span class="built_in">kth</span>(y,<span class="number">1</span>)&lt;&lt;endl;</span><br><span class="line">root=<span class="built_in">merge</span>(x,y); </span><br><span class="line">&#125;</span><br><span class="line">    <span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">rev</span><span class="params">(<span class="type">int</span> l,<span class="type">int</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">x=y=z=<span class="number">0</span>;</span><br><span class="line"><span class="built_in">split</span>(root,r,x,y),<span class="built_in">split</span>(x,l<span class="number">-1</span>,x,z);</span><br><span class="line">t[z].rev^=<span class="number">1</span>;</span><br><span class="line">root=<span class="built_in">merge</span>(<span class="built_in">merge</span>(x,z),y); </span><br><span class="line">&#125;</span><br><span class="line">&#125;T;</span><br></pre></td></tr></table></figure><h3 id="分块"><a href="#分块" class="headerlink" title="分块"></a>分块</h3><p><del>这个就不放了</del></p><p>放个区间带修第K小</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">2e5</span>+<span class="number">5</span>,NN=<span class="number">500</span>;</span><br><span class="line"><span class="type">int</span> s1[N],s2[N];</span><br><span class="line"><span class="type">int</span> v1[NN][NN],v2[NN][N];</span><br><span class="line"><span class="type">int</span> b1[N],b2[N];</span><br><span class="line"><span class="type">int</span> L1[NN],L2[NN],R1[NN],R2[NN];</span><br><span class="line"><span class="type">int</span> block1,block2;</span><br><span class="line"><span class="type">int</span> num1,num2;</span><br><span class="line"><span class="type">int</span> n,m;</span><br><span class="line"><span class="type">int</span> a[N],lsh[N],tot;</span><br><span class="line"><span class="type">int</span> vv1[NN],vv2[N];</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">query</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> l,r,k;</span><br><span class="line">&#125;q[N];</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">change</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=b1[x];i&lt;=num1;++i)</span><br><span class="line">&#123;</span><br><span class="line">--v1[i][b2[a[x]]],--v2[i][a[x]];</span><br><span class="line">++v1[i][b2[y]],++v2[i][y];</span><br><span class="line">&#125;</span><br><span class="line">a[x]=y;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">int</span> <span class="title">ask</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> y,<span class="type">int</span> k)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> p=b1[x],q=b1[y];</span><br><span class="line"><span class="type">int</span> tmp=<span class="number">0</span>,l,r,ans;</span><br><span class="line"><span class="keyword">if</span>(p==q)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=x;i&lt;=y;++i) ++vv1[b2[a[i]]],++vv2[a[i]];</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=num2;++i)</span><br><span class="line">&#123;</span><br><span class="line">tmp+=vv1[i];</span><br><span class="line"><span class="keyword">if</span>(tmp&gt;=k)</span><br><span class="line">&#123;</span><br><span class="line">tmp-=vv1[i];</span><br><span class="line">l=L2[i],r=R2[i];</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=l;i&lt;=r;++i)</span><br><span class="line">&#123;</span><br><span class="line">tmp+=vv2[i];</span><br><span class="line"><span class="keyword">if</span>(tmp&gt;=k)</span><br><span class="line">&#123;</span><br><span class="line">ans=i;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=x;i&lt;=y;++i) vv1[b2[a[i]]]=<span class="number">0</span>,vv2[a[i]]=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=x;i&lt;=R1[p];++i) ++vv1[b2[a[i]]],++vv2[a[i]];</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=L1[q];i&lt;=y;++i) ++vv1[b2[a[i]]],++vv2[a[i]];</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=num2;++i)</span><br><span class="line">&#123;</span><br><span class="line">tmp+=vv1[i]+v1[q<span class="number">-1</span>][i]-v1[p][i];</span><br><span class="line"><span class="keyword">if</span>(tmp&gt;=k)</span><br><span class="line">&#123;</span><br><span class="line">tmp-=vv1[i]+v1[q<span class="number">-1</span>][i]-v1[p][i];</span><br><span class="line">l=L2[i],r=R2[i];</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=l;i&lt;=r;++i)</span><br><span class="line">&#123;</span><br><span class="line">tmp+=vv2[i]+v2[q<span class="number">-1</span>][i]-v2[p][i];</span><br><span class="line"><span class="keyword">if</span>(tmp&gt;=k)</span><br><span class="line">&#123;</span><br><span class="line">ans=i;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=x;i&lt;=R1[p];++i) vv1[b2[a[i]]]=<span class="number">0</span>,vv2[a[i]]=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=L1[q];i&lt;=y;++i) vv1[b2[a[i]]]=<span class="number">0</span>,vv2[a[i]]=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">cin.<span class="built_in">tie</span>(<span class="number">0</span>);cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">cin&gt;&gt;n&gt;&gt;m;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;++i) cin&gt;&gt;a[i],lsh[++tot]=a[i];</span><br><span class="line"><span class="type">int</span> l,r,k;</span><br><span class="line"><span class="type">char</span> opt;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=m;++i)</span><br><span class="line">&#123;</span><br><span class="line">cin&gt;&gt;opt&gt;&gt;l&gt;&gt;r;</span><br><span class="line"><span class="keyword">if</span>(opt==<span class="string">&#x27;Q&#x27;</span>) cin&gt;&gt;k,q[i]=(query)&#123;l,r,k&#125;;</span><br><span class="line"><span class="keyword">else</span> k=<span class="number">0</span>,q[i]=(query)&#123;l,r,<span class="number">0</span>&#125;,lsh[++tot]=r;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">sort</span>(lsh+<span class="number">1</span>,lsh+tot+<span class="number">1</span>);</span><br><span class="line">tot=<span class="built_in">unique</span>(lsh+<span class="number">1</span>,lsh+tot+<span class="number">1</span>)-lsh<span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;++i) a[i]=<span class="built_in">lower_bound</span>(lsh+<span class="number">1</span>,lsh+tot+<span class="number">1</span>,a[i])-lsh;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=m;++i) <span class="keyword">if</span>(!q[i].k) q[i].r=<span class="built_in">lower_bound</span>(lsh+<span class="number">1</span>,lsh+tot+<span class="number">1</span>,q[i].r)-lsh;</span><br><span class="line">block1=<span class="built_in">sqrt</span>(n),block2=<span class="built_in">sqrt</span>(tot);</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;++i) b1[i]=(i<span class="number">-1</span>)/block1+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=tot;++i) b2[i]=(i<span class="number">-1</span>)/block2+<span class="number">1</span>;</span><br><span class="line">num1=b1[n],num2=b2[tot];</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=num1;++i) L1[i]=R1[i<span class="number">-1</span>]+<span class="number">1</span>,R1[i]=i*block1;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=num2;++i) L2[i]=R2[i<span class="number">-1</span>]+<span class="number">1</span>,R2[i]=i*block2;</span><br><span class="line">R1[num1]=n,R2[num2]=tot;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=num1;++i)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;=num2;++j) v1[i][j]=v1[i<span class="number">-1</span>][j];</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;=tot;++j) v2[i][j]=v2[i<span class="number">-1</span>][j];</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j=L1[i];j&lt;=R1[i];++j) ++v1[i][b2[a[j]]],++v2[i][a[j]];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=m;++i)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(!q[i].k) <span class="built_in">change</span>(q[i].l,q[i].r);</span><br><span class="line"><span class="keyword">else</span> cout&lt;&lt;lsh[<span class="built_in">ask</span>(q[i].l,q[i].r,q[i].k)]&lt;&lt;endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="莫队"><a href="#莫队" class="headerlink" title="莫队"></a>莫队</h3><p>emmm</p><p>放个树上带修第K小</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">2e5</span>+<span class="number">5</span>;</span><br><span class="line"><span class="type">int</span> to[N],f[N],ne[N],tot,l=<span class="number">1</span>,r,ti;</span><br><span class="line"><span class="type">int</span> n,m,res,Q,su,block1,num1,L[N],R[N];</span><br><span class="line"><span class="type">int</span> w[N],c[N];</span><br><span class="line"><span class="type">int</span> ans[N],s[N],v[N],cnt[N],belong[N],block,num,vis[N],b[N],belong1[N];</span><br><span class="line"><span class="type">int</span> sum[N];</span><br><span class="line"><span class="type">int</span> ss[N];</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">add</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">to[++tot]=y,ne[tot]=f[x],f[x]=tot;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> fa[N][<span class="number">21</span>];</span><br><span class="line"><span class="type">int</span> st[N],ed[N],t;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> dad)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">s[++t]=x,st[x]=t;</span><br><span class="line">fa[x][<span class="number">0</span>]=dad;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">20</span>;++i)</span><br><span class="line">&#123;</span><br><span class="line">fa[x][i]=fa[fa[x][i<span class="number">-1</span>]][i<span class="number">-1</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=f[x],y;i;i=ne[i])</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>((y=to[i])!=dad)<span class="built_in">dfs</span>(y,x);</span><br><span class="line">&#125;</span><br><span class="line">s[++t]=x,ed[x]=t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">qq</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> l,r,lca,t,k,id;</span><br><span class="line"><span class="keyword">inline</span> <span class="type">bool</span> <span class="keyword">operator</span>&lt;(<span class="type">const</span> qq &amp;x)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> belong[l]==belong[x.l]?(belong[r]==belong[x.r]?t&lt;x.t:r&lt;x.r):l&lt;x.l;</span><br><span class="line">&#125;</span><br><span class="line">&#125;q[N];</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">xg</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> x,y;</span><br><span class="line">&#125;g[N];</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">int</span> <span class="title">pd</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> y)</span></span>&#123;<span class="keyword">return</span> st[x]&lt;=st[y]&amp;&amp;ed[x]&gt;=ed[y];&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">int</span> <span class="title">lca</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">pd</span>(y,x)) <span class="keyword">return</span> y;</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">pd</span>(x,y)) <span class="keyword">return</span> x;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">20</span>;i&gt;=<span class="number">0</span>;--i)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(!<span class="built_in">pd</span>(fa[x][i],y)&amp;&amp;fa[x][i]!=<span class="number">0</span>)x=fa[x][i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> fa[x][<span class="number">0</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">add1</span><span class="params">(<span class="type">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">x=s[x],vis[x]^=<span class="number">1</span>;</span><br><span class="line"><span class="type">int</span> y=v[x];</span><br><span class="line"><span class="keyword">if</span>(vis[x]) ++cnt[y],++ss[belong1[y]];</span><br><span class="line"><span class="keyword">else</span> --cnt[y],--ss[belong1[y]];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">int</span> <span class="title">ask</span><span class="params">(<span class="type">int</span> k)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> res=num1;</span><br><span class="line"><span class="keyword">for</span>(;res;--res)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(k&gt;ss[res]) k-=ss[res];</span><br><span class="line"><span class="keyword">else</span><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(!res) <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=R[res];i&gt;=L[res];--i)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(k&lt;=cnt[i]) <span class="keyword">return</span> sum[i];</span><br><span class="line"><span class="keyword">else</span> k-=cnt[i];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">up</span><span class="params">(<span class="type">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> x1=st[g[x].x],x2=ed[g[x].x];</span><br><span class="line"><span class="keyword">if</span>(x1&gt;=l&amp;&amp;x1&lt;=r) <span class="built_in">add1</span>(x1);</span><br><span class="line"><span class="keyword">if</span>(x2&gt;=l&amp;&amp;x2&lt;=r) <span class="built_in">add1</span>(x2);</span><br><span class="line"><span class="built_in">swap</span>(v[s[x1]],g[x].y);</span><br><span class="line"><span class="keyword">if</span>(x1&gt;=l&amp;&amp;x1&lt;=r) <span class="built_in">add1</span>(x1);</span><br><span class="line"><span class="keyword">if</span>(x2&gt;=l&amp;&amp;x2&lt;=r) <span class="built_in">add1</span>(x2);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">cin.<span class="built_in">tie</span>(<span class="number">0</span>);cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">cin&gt;&gt;n&gt;&gt;Q;</span><br><span class="line"><span class="type">int</span> QQ=<span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> x,y;</span><br><span class="line">block=<span class="built_in">pow</span>(<span class="number">2</span>*n,<span class="number">2.0</span>/<span class="number">3.0</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">2</span>*n;++i) belong[i]=(i<span class="number">-1</span>)/block+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;++i) cin&gt;&gt;v[i],sum[++su]=v[i];</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;n;++i) cin&gt;&gt;x&gt;&gt;y,<span class="built_in">add</span>(x,y),<span class="built_in">add</span>(y,x);</span><br><span class="line"><span class="built_in">dfs</span>(<span class="number">1</span>,<span class="number">0</span>);</span><br><span class="line"><span class="type">int</span> T=<span class="number">0</span>,ty;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=Q;++i)</span><br><span class="line">&#123;</span><br><span class="line">cin&gt;&gt;ty&gt;&gt;x&gt;&gt;y;</span><br><span class="line"><span class="keyword">if</span>(ty)</span><br><span class="line">&#123;</span><br><span class="line">++QQ;</span><br><span class="line"><span class="keyword">if</span>(st[x]&gt;st[y]) <span class="built_in">swap</span>(x,y);</span><br><span class="line">    <span class="type">int</span> k=<span class="built_in">lca</span>(x,y);</span><br><span class="line"><span class="keyword">if</span>(x==k) q[QQ]=&#123;st[x],st[y],<span class="number">0</span>,T,ty,QQ&#125;;</span><br><span class="line"><span class="keyword">else</span>q[QQ]=&#123;ed[x],st[y],k,T,ty,QQ&#125;;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>g[++T]=&#123;x,y&#125;,sum[++su]=y;</span><br><span class="line">&#125;</span><br><span class="line">block1=<span class="built_in">pow</span>(su,<span class="number">2.0</span>/<span class="number">3.0</span>);</span><br><span class="line">num1=(su<span class="number">-1</span>)/block1+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=num1;++i) L[i]=(i<span class="number">-1</span>)*block1<span class="number">-1</span>,R[i]=i*block1;</span><br><span class="line">R[num1]=su;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=su;++i) belong1[i]=(i<span class="number">-1</span>)/block1+<span class="number">1</span>;</span><br><span class="line"><span class="built_in">sort</span>(q+<span class="number">1</span>,q+QQ+<span class="number">1</span>);</span><br><span class="line"><span class="built_in">sort</span>(sum+<span class="number">1</span>,sum+su+<span class="number">1</span>);</span><br><span class="line"><span class="type">int</span> M=<span class="built_in">unique</span>(sum+<span class="number">1</span>,sum+su+<span class="number">1</span>)-sum<span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;++i) v[i]=<span class="built_in">lower_bound</span>(sum+<span class="number">1</span>,sum+M+<span class="number">1</span>,v[i])-sum;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=T;++i) g[i].y=<span class="built_in">lower_bound</span>(sum+<span class="number">1</span>,sum+M+<span class="number">1</span>,g[i].y)-sum;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=QQ;++i)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">while</span>(l&gt;q[i].l) <span class="built_in">add1</span>(--l);</span><br><span class="line"><span class="keyword">while</span>(l&lt;q[i].l) <span class="built_in">add1</span>(l++);</span><br><span class="line"><span class="keyword">while</span>(r&gt;q[i].r) <span class="built_in">add1</span>(r--);</span><br><span class="line"><span class="keyword">while</span>(r&lt;q[i].r) <span class="built_in">add1</span>(++r);</span><br><span class="line"><span class="keyword">while</span>(ti&lt;q[i].t) <span class="built_in">up</span>(++ti);</span><br><span class="line"><span class="keyword">while</span>(ti&gt;q[i].t) <span class="built_in">up</span>(ti--);</span><br><span class="line"><span class="keyword">if</span>(q[i].lca) <span class="built_in">add1</span>(st[q[i].lca]);</span><br><span class="line">ans[q[i].id]=<span class="built_in">ask</span>(q[i].k);</span><br><span class="line"><span class="keyword">if</span>(q[i].lca) <span class="built_in">add1</span>(st[q[i].lca]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=QQ;++i)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(ans[i]==<span class="number">-1</span>) cout&lt;&lt;<span class="string">&quot;invalid request!&quot;</span>&lt;&lt;endl;</span><br><span class="line"><span class="keyword">else</span> cout&lt;&lt;ans[i]&lt;&lt;endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="重链剖分"><a href="#重链剖分" class="headerlink" title="重链剖分"></a>重链剖分</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> k1 k&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> k2 k&lt;&lt;1|1</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">5e5</span>+<span class="number">5</span>;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">tree</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> l,r,v,add;</span><br><span class="line">&#125;t[N&lt;&lt;<span class="number">2</span>];</span><br><span class="line"><span class="type">int</span> n,m,r,p;</span><br><span class="line"><span class="type">int</span> dfn[N],id[N],son[N],s[N],a[N],dep[N],f[N],top[N],tot;</span><br><span class="line"><span class="type">int</span> idx,head[N],ne[N&lt;&lt;<span class="number">1</span>],to[N&lt;&lt;<span class="number">1</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">add</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">to[++idx]=y,ne[idx]=head[x],head[x]=idx;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dfs1</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> fa)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">dep[x]=dep[fa]+<span class="number">1</span>;</span><br><span class="line">s[x]=<span class="number">1</span>;</span><br><span class="line">f[x]=fa;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=head[x],y;i;i=ne[i])</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>((y=to[i])!=fa)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">dfs1</span>(y,x);</span><br><span class="line">s[x]+=s[y];</span><br><span class="line"><span class="keyword">if</span>(s[y]&gt;s[son[x]]) son[x]=y;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dfs2</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> t)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">top[x]=t;</span><br><span class="line">id[x]=++tot;</span><br><span class="line">dfn[tot]=x;</span><br><span class="line"><span class="keyword">if</span>(!son[x]) <span class="keyword">return</span>;</span><br><span class="line"><span class="built_in">dfs2</span>(son[x],t);</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=head[x],y;i;i=ne[i])</span><br><span class="line">&#123;</span><br><span class="line">y=to[i];</span><br><span class="line"><span class="keyword">if</span>(y==f[x]||y==son[x]) <span class="keyword">continue</span>;</span><br><span class="line"><span class="built_in">dfs2</span>(y,y);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">up</span><span class="params">(<span class="type">int</span> k)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">t[k].v=(t[k1].v+t[k2].v)%p;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">pushdown</span><span class="params">(<span class="type">int</span> k)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> add=t[k].add;</span><br><span class="line"><span class="keyword">if</span>(!add) <span class="keyword">return</span>;</span><br><span class="line">(t[k1].add+=add)%=p;</span><br><span class="line">(t[k2].add+=add)%=p;</span><br><span class="line">(t[k1].v+=(t[k1].r-t[k1].l+<span class="number">1</span>)*add)%=p;</span><br><span class="line">(t[k2].v+=(t[k2].r-t[k2].l+<span class="number">1</span>)*add)%=p;</span><br><span class="line">t[k].add=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">build</span><span class="params">(<span class="type">int</span> k,<span class="type">int</span> l,<span class="type">int</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">t[k].l=l,t[k].r=r;</span><br><span class="line"><span class="keyword">if</span>(l==r)</span><br><span class="line">&#123;</span><br><span class="line">t[k].v=a[dfn[l]]%p;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> mid=l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="built_in">build</span>(k1,l,mid);</span><br><span class="line"><span class="built_in">build</span>(k2,mid+<span class="number">1</span>,r);</span><br><span class="line"><span class="built_in">up</span>(k);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">change</span><span class="params">(<span class="type">int</span> k,<span class="type">int</span> l,<span class="type">int</span> r,<span class="type">int</span> v)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(l&lt;=t[k].l&amp;&amp;r&gt;=t[k].r)</span><br><span class="line">&#123;</span><br><span class="line">t[k].v=(t[k].v+(t[k].r-t[k].l+<span class="number">1</span>)*v)%p;</span><br><span class="line">t[k].add=(t[k].add+v)%p;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">pushdown</span>(k);</span><br><span class="line"><span class="keyword">if</span>(l&lt;=t[k1].r) <span class="built_in">change</span>(k1,l,r,v);</span><br><span class="line"><span class="keyword">if</span>(r&gt;=t[k2].l) <span class="built_in">change</span>(k2,l,r,v);</span><br><span class="line"><span class="built_in">up</span>(k);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">ask</span><span class="params">(<span class="type">int</span> k,<span class="type">int</span> l,<span class="type">int</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(l&lt;=t[k].l&amp;&amp;r&gt;=t[k].r) <span class="keyword">return</span> t[k].v;</span><br><span class="line"><span class="built_in">pushdown</span>(k);</span><br><span class="line"><span class="type">int</span> res=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(l&lt;=t[k1].r) res+=<span class="built_in">ask</span>(k1,l,r);</span><br><span class="line"><span class="keyword">if</span>(r&gt;=t[k2].l) res+=<span class="built_in">ask</span>(k2,l,r);</span><br><span class="line"><span class="keyword">return</span> res%p;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">changes</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> y,<span class="type">int</span> v)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">while</span>(top[x]!=top[y])</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(dep[top[x]]&lt;dep[top[y]]) <span class="built_in">swap</span>(x,y);</span><br><span class="line"><span class="built_in">change</span>(<span class="number">1</span>,id[top[x]],id[x],v);</span><br><span class="line">x=f[top[x]];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(dep[x]&gt;dep[y]) <span class="built_in">swap</span>(x,y);</span><br><span class="line"><span class="built_in">change</span>(<span class="number">1</span>,id[x],id[y],v);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">int</span> <span class="title">query</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> res=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(top[x]!=top[y])</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(dep[top[x]]&lt;dep[top[y]]) <span class="built_in">swap</span>(x,y); </span><br><span class="line">res+=<span class="built_in">ask</span>(<span class="number">1</span>,id[top[x]],id[x]);</span><br><span class="line">res%=p;</span><br><span class="line">x=f[top[x]];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(dep[x]&gt;dep[y]) <span class="built_in">swap</span>(x,y);</span><br><span class="line">res+=<span class="built_in">ask</span>(<span class="number">1</span>,id[x],id[y]);</span><br><span class="line"><span class="keyword">return</span> res%p;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span>  </span></span><br><span class="line"><span class="function"></span>&#123;   </span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">cin.<span class="built_in">tie</span>(<span class="number">0</span>);cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">cin&gt;&gt;n&gt;&gt;m&gt;&gt;r&gt;&gt;p;</span><br><span class="line"><span class="type">int</span> x,y,z,e;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;++i) cin&gt;&gt;a[i];</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;n;++i) cin&gt;&gt;x&gt;&gt;y,<span class="built_in">add</span>(x,y),<span class="built_in">add</span>(y,x);</span><br><span class="line"><span class="built_in">dfs1</span>(r,<span class="number">0</span>);</span><br><span class="line"><span class="built_in">dfs2</span>(r,r);</span><br><span class="line"><span class="built_in">build</span>(<span class="number">1</span>,<span class="number">1</span>,n);</span><br><span class="line"><span class="keyword">while</span>(m--)</span><br><span class="line">&#123;</span><br><span class="line">cin&gt;&gt;x;</span><br><span class="line"><span class="keyword">if</span>(x==<span class="number">1</span>) cin&gt;&gt;x&gt;&gt;y&gt;&gt;z,<span class="built_in">changes</span>(x,y,z);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(x==<span class="number">2</span>) cin&gt;&gt;x&gt;&gt;y,cout&lt;&lt;<span class="built_in">query</span>(x,y)&lt;&lt;endl;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(x==<span class="number">3</span>) cin&gt;&gt;x&gt;&gt;z,<span class="built_in">change</span>(<span class="number">1</span>,id[x],id[x]+s[x]<span class="number">-1</span>,z);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(x==<span class="number">4</span>) cin&gt;&gt;x,cout&lt;&lt;<span class="built_in">ask</span>(<span class="number">1</span>,id[x],id[x]+s[x]<span class="number">-1</span>)&lt;&lt;endl;</span><br><span class="line">&#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Chtholly树（ODT）"><a href="#Chtholly树（ODT）" class="headerlink" title="Chtholly树（ODT）"></a>Chtholly树（ODT）</h3><p>珂朵莉太可爱了,我永远喜欢珂朵莉</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> iter set<span class="string">&lt;node&gt;</span>::iterator</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">1e5</span>+<span class="number">5</span>;</span><br><span class="line"><span class="type">int</span> n,m,seed,vmax;</span><br><span class="line"><span class="type">int</span> a[N];</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">node</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> l,r;</span><br><span class="line"><span class="keyword">mutable</span> <span class="type">int</span> v;</span><br><span class="line"><span class="built_in">node</span>(<span class="type">int</span> a=<span class="number">-1</span>,<span class="type">int</span> b=<span class="number">-1</span>,<span class="type">int</span> c=<span class="number">-1</span>):<span class="built_in">l</span>(a),<span class="built_in">r</span>(b),<span class="built_in">v</span>(c)&#123;&#125;</span><br><span class="line"><span class="keyword">inline</span> <span class="type">bool</span> <span class="keyword">operator</span>&lt;(<span class="type">const</span> node &amp;res)<span class="type">const</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> l&lt;res.l;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line">set&lt;node&gt;s;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> iter <span class="title">split</span><span class="params">(<span class="type">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">iter it=s.<span class="built_in">lower_bound</span>(<span class="built_in">node</span>(x));</span><br><span class="line"><span class="keyword">if</span>(it!=s.<span class="built_in">end</span>()&amp;&amp;it-&gt;l==x) <span class="keyword">return</span> it;</span><br><span class="line">--it;</span><br><span class="line">node t=*it;</span><br><span class="line">s.<span class="built_in">erase</span>(it);</span><br><span class="line">s.<span class="built_in">insert</span>(<span class="built_in">node</span>(t.l,x<span class="number">-1</span>,t.v));</span><br><span class="line"><span class="keyword">return</span> s.<span class="built_in">insert</span>(<span class="built_in">node</span>(x,t.r,t.v)).first;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">assign</span><span class="params">(<span class="type">int</span> l,<span class="type">int</span> r,<span class="type">int</span> v)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">iter it2=<span class="built_in">split</span>(r+<span class="number">1</span>),it1=<span class="built_in">split</span>(l);</span><br><span class="line">s.<span class="built_in">erase</span>(it1,it2);</span><br><span class="line">s.<span class="built_in">insert</span>(<span class="built_in">node</span>(l,r,v));</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">add</span><span class="params">(<span class="type">int</span> l,<span class="type">int</span> r,<span class="type">int</span> v)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">iter it2=<span class="built_in">split</span>(r+<span class="number">1</span>),it1=<span class="built_in">split</span>(l);</span><br><span class="line"><span class="keyword">for</span>(;it1!=it2;++it1) it1-&gt;v+=v;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">int</span> <span class="title">rank1</span><span class="params">(<span class="type">int</span> l,<span class="type">int</span> r,<span class="type">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">vector&lt;pair&lt;<span class="type">int</span>,<span class="type">int</span>&gt; &gt;<span class="built_in">ve</span>(<span class="number">0</span>);</span><br><span class="line">iter it2=<span class="built_in">split</span>(r+<span class="number">1</span>),it1=<span class="built_in">split</span>(l);</span><br><span class="line"><span class="keyword">for</span>(;it1!=it2;it1++) ve.<span class="built_in">push_back</span>(<span class="built_in">make_pair</span>(it1-&gt;v,it1-&gt;r-it1-&gt;l+<span class="number">1</span>));</span><br><span class="line"><span class="built_in">sort</span>(ve.<span class="built_in">begin</span>(),ve.<span class="built_in">end</span>());</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;ve.<span class="built_in">size</span>();++i)<span class="keyword">if</span>((x-=ve[i].second)&lt;=<span class="number">0</span>) <span class="keyword">return</span> ve[i].first;</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">int</span> <span class="title">qpow</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b,<span class="type">int</span> p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> res=<span class="number">1</span>;</span><br><span class="line">a%=p;</span><br><span class="line"><span class="keyword">while</span>(b)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(b&amp;<span class="number">1</span>) res=res*a%p;</span><br><span class="line">a=a*a%p;</span><br><span class="line">b&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">int</span> <span class="title">power</span><span class="params">(<span class="type">int</span> l,<span class="type">int</span> r,<span class="type">int</span> x,<span class="type">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> res=<span class="number">0</span>;</span><br><span class="line">iter it2=<span class="built_in">split</span>(r+<span class="number">1</span>),it1=<span class="built_in">split</span>(l);</span><br><span class="line"><span class="keyword">for</span>(;it1!=it2;it1++) res=(res+(it1-&gt;r-it1-&gt;l+<span class="number">1</span>)*<span class="built_in">qpow</span>(it1-&gt;v,x,y))%y;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">int</span> <span class="title">rnd</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> res=seed;</span><br><span class="line">seed=(seed*<span class="number">7</span>+<span class="number">13</span>)%<span class="number">1000000007</span>;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">cin.<span class="built_in">tie</span>(<span class="number">0</span>);cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">cin&gt;&gt;n&gt;&gt;m&gt;&gt;seed&gt;&gt;vmax;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;++i)</span><br><span class="line">&#123;</span><br><span class="line">a[i]=(<span class="built_in">rnd</span>()%vmax)+<span class="number">1</span>;</span><br><span class="line">s.<span class="built_in">insert</span>(<span class="built_in">node</span>(i,i,a[i]));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=m;++i)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> op,l,r,x,y;</span><br><span class="line">op=(<span class="built_in">rnd</span>()%<span class="number">4</span>)+<span class="number">1</span>;</span><br><span class="line">l=(<span class="built_in">rnd</span>()%n)+<span class="number">1</span>;</span><br><span class="line">r=(<span class="built_in">rnd</span>()%n)+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(l&gt;r) <span class="built_in">swap</span>(l,r);</span><br><span class="line"><span class="keyword">if</span>(op==<span class="number">3</span>) x=(<span class="built_in">rnd</span>()%(r-l+<span class="number">1</span>))+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">else</span> x=(<span class="built_in">rnd</span>()%vmax)+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(op==<span class="number">4</span>) y=(<span class="built_in">rnd</span>()%vmax)+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(op==<span class="number">1</span>) <span class="built_in">add</span>(l,r,x);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(op==<span class="number">2</span>) <span class="built_in">assign</span>(l,r,x);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(op==<span class="number">3</span>) cout&lt;&lt;<span class="built_in">rank1</span>(l,r,x)&lt;&lt;endl;</span><br><span class="line"><span class="keyword">else</span> cout&lt;&lt;<span class="built_in">power</span>(l,r,x,y)&lt;&lt;endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="LCT"><a href="#LCT" class="headerlink" title="LCT"></a>LCT</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">3e5</span>+<span class="number">5</span>;</span><br><span class="line"><span class="type">int</span> n,m,root,tot;</span><br><span class="line"><span class="type">int</span> s[N],ch[N][<span class="number">2</span>],v[N],f[N],flag[N];</span><br><span class="line"><span class="type">int</span> stk[N];</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">up</span><span class="params">(<span class="type">int</span> x)</span></span>&#123;s[x]=s[ch[x][<span class="number">0</span>]]^s[ch[x][<span class="number">1</span>]]^v[x];&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">int</span> <span class="title">isroot</span><span class="params">(<span class="type">int</span> x)</span></span>&#123;<span class="keyword">return</span> ch[f[x]][<span class="number">0</span>]!=x&amp;&amp;ch[f[x]][<span class="number">1</span>]!=x;&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">int</span> <span class="title">get</span><span class="params">(<span class="type">int</span> x)</span></span>&#123;<span class="keyword">return</span> x==ch[f[x]][<span class="number">1</span>];&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">rev</span><span class="params">(<span class="type">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">swap</span>(ch[x][<span class="number">0</span>],ch[x][<span class="number">1</span>]);</span><br><span class="line">flag[x]^=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">push</span><span class="params">(<span class="type">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(flag[x])</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">rev</span>(ch[x][<span class="number">0</span>]),<span class="built_in">rev</span>(ch[x][<span class="number">1</span>]);</span><br><span class="line">flag[x]=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">rotate</span><span class="params">(<span class="type">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> y=f[x],z=f[y],d=<span class="built_in">get</span>(x);</span><br><span class="line"><span class="keyword">if</span>(!<span class="built_in">isroot</span>(y)) ch[z][<span class="built_in">get</span>(y)]=x;</span><br><span class="line">ch[y][d]=ch[x][d^<span class="number">1</span>],f[ch[x][d^<span class="number">1</span>]]=y;</span><br><span class="line">f[x]=z,ch[x][d^<span class="number">1</span>]=y,f[y]=x;</span><br><span class="line"><span class="built_in">up</span>(y),<span class="built_in">up</span>(x);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">splay</span><span class="params">(<span class="type">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> top=<span class="number">0</span>,r=x;</span><br><span class="line">stk[++top]=r;</span><br><span class="line"><span class="keyword">while</span>(!<span class="built_in">isroot</span>(r)) stk[++top]=r=f[r];</span><br><span class="line"><span class="keyword">while</span>(top) <span class="built_in">push</span>(stk[top--]);</span><br><span class="line"><span class="keyword">while</span>(!<span class="built_in">isroot</span>(x))</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> y=f[x],z=f[y];</span><br><span class="line"><span class="keyword">if</span>(!<span class="built_in">isroot</span>(y)) <span class="built_in">rotate</span>(<span class="built_in">get</span>(x)==<span class="built_in">get</span>(y)?y:x);</span><br><span class="line"><span class="built_in">rotate</span>(x);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">access</span><span class="params">(<span class="type">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> z=x;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> y=<span class="number">0</span>;x;y=x,x=f[x]) <span class="built_in">splay</span>(x),ch[x][<span class="number">1</span>]=y,<span class="built_in">up</span>(x);</span><br><span class="line"><span class="built_in">splay</span>(z);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">makeroot</span><span class="params">(<span class="type">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">access</span>(x),<span class="built_in">rev</span>(x);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">int</span> <span class="title">findroot</span><span class="params">(<span class="type">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">access</span>(x);</span><br><span class="line"><span class="keyword">while</span>(ch[x][<span class="number">0</span>]) <span class="built_in">push</span>(x),x=ch[x][<span class="number">0</span>];</span><br><span class="line"><span class="built_in">splay</span>(x);</span><br><span class="line"><span class="keyword">return</span> x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">split</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">makeroot</span>(x),<span class="built_in">access</span>(y);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">link</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">makeroot</span>(x);</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">findroot</span>(y)!=x) f[x]=y;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">cut</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">makeroot</span>(x);</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">findroot</span>(y)==x&amp;&amp;f[y]==x&amp;&amp;!ch[y][<span class="number">0</span>]) ch[x][<span class="number">1</span>]=f[y]=<span class="number">0</span>,<span class="built_in">up</span>(x);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">cin.<span class="built_in">tie</span>(<span class="number">0</span>);cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">cin&gt;&gt;n&gt;&gt;m;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;++i) cin&gt;&gt;v[i];</span><br><span class="line"><span class="type">int</span> opt,x,y;</span><br><span class="line"><span class="keyword">while</span>(m--)</span><br><span class="line">&#123;</span><br><span class="line">cin&gt;&gt;opt&gt;&gt;x&gt;&gt;y;</span><br><span class="line"><span class="keyword">if</span>(opt==<span class="number">0</span>) <span class="built_in">split</span>(x,y),cout&lt;&lt;s[y]&lt;&lt;endl;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(opt==<span class="number">1</span>) <span class="built_in">link</span>(x,y);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(opt==<span class="number">2</span>) <span class="built_in">cut</span>(x,y);</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">splay</span>(x),v[x]=y,<span class="built_in">up</span>(x);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="树套树"><a href="#树套树" class="headerlink" title="树套树"></a>树套树</h3><h4 id="树状数组套权值线段树"><a href="#树状数组套权值线段树" class="headerlink" title="树状数组套权值线段树"></a>树状数组套权值线段树</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">struct</span> <span class="title class_">Tree</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> root[N],v1,v2,idx;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">tree</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> lc,rc,v;</span><br><span class="line">&#125;t[N&lt;&lt;<span class="number">5</span>];</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">change</span><span class="params">(<span class="type">int</span> &amp;k,<span class="type">int</span> l,<span class="type">int</span> r,<span class="type">int</span> x,<span class="type">int</span> v)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(!k) k=++idx;</span><br><span class="line">t[k].v+=v;</span><br><span class="line"><span class="keyword">if</span>(l==r) <span class="keyword">return</span>;</span><br><span class="line"><span class="type">int</span> mid=l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(x&lt;=mid) <span class="built_in">change</span>(t[k].lc,l,mid,x,v);</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">change</span>(t[k].rc,mid+<span class="number">1</span>,r,x,v);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">add</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> y,<span class="type">int</span> v)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(;x&lt;=v1;x+=<span class="built_in">lowbit</span>(x))</span><br><span class="line"><span class="built_in">change</span>(root[x],<span class="number">1</span>,v2,y,v);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">query</span><span class="params">(<span class="type">int</span> k,<span class="type">int</span> l,<span class="type">int</span> r,<span class="type">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(!k) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(l==r) <span class="keyword">return</span> t[k].v;</span><br><span class="line"><span class="type">int</span> mid=l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(x&lt;=mid) <span class="keyword">return</span> <span class="built_in">query</span>(t[k].lc,l,mid,x);</span><br><span class="line"><span class="keyword">return</span> t[t[k].lc].v+<span class="built_in">query</span>(t[k].rc,mid+<span class="number">1</span>,r,x);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">int</span> <span class="title">ask</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> res=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(;x;x-=<span class="built_in">lowbit</span>(x)) res+=<span class="built_in">query</span>(root[x],<span class="number">1</span>,v2,y);</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">init</span><span class="params">(<span class="type">int</span> _v1,<span class="type">int</span> _v2)</span></span>&#123;v1=_v1,v2=_v2,idx=<span class="number">0</span>;&#125;</span><br><span class="line">&#125;T;</span><br></pre></td></tr></table></figure><h4 id="权值线段树套线段树"><a href="#权值线段树套线段树" class="headerlink" title="权值线段树套线段树"></a>权值线段树套线段树</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">struct</span> <span class="title class_">Tree</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> root[N*<span class="number">4</span>],n,idx,tot;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">tree</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> lc,rc,v,tag;</span><br><span class="line">&#125;t[N*<span class="number">300</span>];</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">change</span><span class="params">(<span class="type">int</span> &amp;k,<span class="type">int</span> l,<span class="type">int</span> r,<span class="type">int</span> L,<span class="type">int</span> R)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(!k) k=++idx;</span><br><span class="line">t[k].v+=<span class="built_in">min</span>(R,r)-<span class="built_in">max</span>(l,L)+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(L&lt;=l&amp;&amp;R&gt;=r)<span class="keyword">return</span> (<span class="type">void</span>)++t[k].tag;</span><br><span class="line"><span class="type">int</span> mid=l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(L&lt;=mid) <span class="built_in">change</span>(t[k].lc,l,mid,L,R);</span><br><span class="line"><span class="keyword">if</span>(R&gt;mid) <span class="built_in">change</span>(t[k].rc,mid+<span class="number">1</span>,r,L,R);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">add</span><span class="params">(<span class="type">int</span> k,<span class="type">int</span> l,<span class="type">int</span> r,<span class="type">int</span> L,<span class="type">int</span> R,<span class="type">int</span> v)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">change</span>(root[k],<span class="number">1</span>,n,L,R);</span><br><span class="line"><span class="keyword">if</span>(l==r) <span class="keyword">return</span>;</span><br><span class="line"><span class="type">int</span> mid=l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(v&lt;=mid) <span class="built_in">add</span>(k1,l,mid,L,R,v);</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">add</span>(k2,mid+<span class="number">1</span>,r,L,R,v);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">query</span><span class="params">(<span class="type">int</span> k,<span class="type">int</span> l,<span class="type">int</span> r,<span class="type">int</span> L,<span class="type">int</span> R)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(!k) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(L&lt;=l&amp;&amp;R&gt;=r) <span class="keyword">return</span> t[k].v;</span><br><span class="line"><span class="type">int</span> mid=l+r&gt;&gt;<span class="number">1</span>,res=t[k].tag*(<span class="built_in">min</span>(R,r)-<span class="built_in">max</span>(l,L)+<span class="number">1</span>);</span><br><span class="line"><span class="keyword">if</span>(L&lt;=mid) res+=<span class="built_in">query</span>(t[k].lc,l,mid,L,R);</span><br><span class="line"><span class="keyword">if</span>(R&gt;mid) res+=<span class="built_in">query</span>(t[k].rc,mid+<span class="number">1</span>,r,L,R);</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">ask</span><span class="params">(<span class="type">int</span> k,<span class="type">int</span> l,<span class="type">int</span> r,<span class="type">int</span> L,<span class="type">int</span> R,<span class="type">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(l==r) <span class="keyword">return</span> l;</span><br><span class="line"><span class="type">int</span> mid=l+r&gt;&gt;<span class="number">1</span>,tmp=<span class="built_in">query</span>(root[k2],<span class="number">1</span>,n,L,R);</span><br><span class="line"><span class="keyword">if</span>(x&lt;=tmp) <span class="keyword">return</span> <span class="built_in">ask</span>(k2,mid+<span class="number">1</span>,r,L,R,x);</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">ask</span>(k1,l,mid,L,R,x-tmp);</span><br><span class="line">&#125;</span><br><span class="line">&#125;T;</span><br></pre></td></tr></table></figure><h3 id="整体二分"><a href="#整体二分" class="headerlink" title="整体二分"></a>整体二分</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> lowbit(x) x&amp;-x</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">4e5</span>+<span class="number">5</span>,NN=<span class="number">505</span>;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">node</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> id,x1,y1,x2,y2,k;</span><br><span class="line">&#125;s[N],s1[N],s2[N];</span><br><span class="line"><span class="type">int</span> ans[N];</span><br><span class="line"><span class="type">int</span> c[NN][NN];</span><br><span class="line"><span class="type">int</span> n,q,tot;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">add</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> y,<span class="type">int</span> v)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">++x,++y;</span><br><span class="line"><span class="keyword">for</span>(;x&lt;=n+<span class="number">1</span>;x+=<span class="built_in">lowbit</span>(x))</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=y;i&lt;=n+<span class="number">1</span>;i+=<span class="built_in">lowbit</span>(i)) c[x][i]+=v;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">int</span> <span class="title">ask</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> res=<span class="number">0</span>;</span><br><span class="line">++x,++y;</span><br><span class="line"><span class="keyword">for</span>(;x;x-=<span class="built_in">lowbit</span>(x))</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=y;i;i-=<span class="built_in">lowbit</span>(i)) res+=c[x][i];</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">(<span class="type">int</span> lv,<span class="type">int</span> rv,<span class="type">int</span> l,<span class="type">int</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(l&gt;r) <span class="keyword">return</span>;</span><br><span class="line"><span class="keyword">if</span>(lv==rv)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=l;i&lt;=r;++i) ans[s[i].id]=lv;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> mid=lv+rv&gt;&gt;<span class="number">1</span>,ll=<span class="number">0</span>,rr=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=l;i&lt;=r;++i)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(!s[i].id)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(s[i].k&lt;=mid) <span class="built_in">add</span>(s[i].x1,s[i].y1,<span class="number">1</span>),s1[++ll]=s[i];</span><br><span class="line"><span class="keyword">else</span> s2[++rr]=s[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> k=<span class="built_in">ask</span>(s[i].x2,s[i].y2)+<span class="built_in">ask</span>(s[i].x1<span class="number">-1</span>,s[i].y1<span class="number">-1</span>)-<span class="built_in">ask</span>(s[i].x1<span class="number">-1</span>,s[i].y2)-<span class="built_in">ask</span>(s[i].x2,s[i].y1<span class="number">-1</span>);</span><br><span class="line"><span class="keyword">if</span>(k&gt;=s[i].k) s1[++ll]=s[i];</span><br><span class="line"><span class="keyword">else</span> s[i].k-=k,s2[++rr]=s[i];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=ll;++i) <span class="keyword">if</span>(!s1[i].id) <span class="built_in">add</span>(s1[i].x1,s1[i].y1,<span class="number">-1</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=ll;++i) s[l+i<span class="number">-1</span>]=s1[i];</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=rr;++i) s[ll+l+i<span class="number">-1</span>]=s2[i];</span><br><span class="line"><span class="built_in">solve</span>(lv,mid,l,l+ll<span class="number">-1</span>);</span><br><span class="line"><span class="built_in">solve</span>(mid+<span class="number">1</span>,rv,l+ll,r);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">cin.<span class="built_in">tie</span>(<span class="number">0</span>);cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">cin&gt;&gt;n&gt;&gt;q;</span><br><span class="line"><span class="type">int</span> x1,y1,x2,y3,k,x;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;++i)</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;=n;++j)</span><br><span class="line">cin&gt;&gt;x,s[++tot]=(node)&#123;<span class="number">0</span>,i,j,<span class="number">0</span>,<span class="number">0</span>,x&#125;;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=q;++i) cin&gt;&gt;x1&gt;&gt;y1&gt;&gt;x2&gt;&gt;y3&gt;&gt;k,s[++tot]=(node)&#123;i,x1,y1,x2,y3,k&#125;;</span><br><span class="line"><span class="built_in">solve</span>(<span class="number">0</span>,<span class="number">1e9</span>,<span class="number">1</span>,tot);</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=q;++i) cout&lt;&lt;ans[i]&lt;&lt;endl;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CDQ分治"><a href="#CDQ分治" class="headerlink" title="CDQ分治"></a>CDQ分治</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> lowbit(x) x&amp;-x</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">2e5</span>+<span class="number">5</span>;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">ss</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> x,y,z,v,ans;</span><br><span class="line">&#125;s[N],a[N];</span><br><span class="line"><span class="type">int</span> n,k,c[N],ans[N],d[N];</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">add</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> v)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(;x&lt;=k;x+=<span class="built_in">lowbit</span>(x)) c[x]+=v;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">int</span> <span class="title">ask</span><span class="params">(<span class="type">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> res=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(;x;x-=<span class="built_in">lowbit</span>(x)) res+=c[x];</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">bool</span> <span class="title">cmp</span><span class="params">(ss a,ss b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> a.x&lt;b.x||(a.x==b.x&amp;&amp;a.y&lt;b.y)||(a.x==b.x&amp;&amp;a.y==b.y&amp;&amp;a.z&lt;b.z);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">cdq</span><span class="params">(<span class="type">int</span> l,<span class="type">int</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(l==r) <span class="keyword">return</span>;</span><br><span class="line"><span class="type">int</span> mid=l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="built_in">cdq</span>(l,mid),<span class="built_in">cdq</span>(mid+<span class="number">1</span>,r);</span><br><span class="line"><span class="type">int</span> p=l,q=mid+<span class="number">1</span>,tot=l;</span><br><span class="line"><span class="keyword">while</span>(p&lt;=mid&amp;&amp;q&lt;=r)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(s[p].y&lt;=s[q].y)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">add</span>(s[p].z,s[p].v);</span><br><span class="line">a[tot++]=s[p++];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">s[q].ans+=<span class="built_in">ask</span>(s[q].z);</span><br><span class="line">a[tot++]=s[q++];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(q&lt;=r)</span><br><span class="line">&#123;</span><br><span class="line">s[q].ans+=<span class="built_in">ask</span>(s[q].z);</span><br><span class="line">a[tot++]=s[q++];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=l;i&lt;p;++i) <span class="built_in">add</span>(s[i].z,-s[i].v);</span><br><span class="line"><span class="keyword">while</span>(p&lt;=mid) a[tot++]=s[p++];</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=l;i&lt;=r;++i) s[i]=a[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">cin.<span class="built_in">tie</span>(<span class="number">0</span>);cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">cin&gt;&gt;n&gt;&gt;k;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;++i) cin&gt;&gt;s[i].x&gt;&gt;s[i].y&gt;&gt;s[i].z;</span><br><span class="line"><span class="built_in">sort</span>(s+<span class="number">1</span>,s+n+<span class="number">1</span>,cmp);</span><br><span class="line"><span class="type">int</span> tot=<span class="number">0</span>,res=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;++i)</span><br><span class="line">&#123;</span><br><span class="line">++res;</span><br><span class="line"><span class="keyword">if</span>(s[i].x!=s[i+<span class="number">1</span>].x||s[i].y!=s[i+<span class="number">1</span>].y||s[i].z!=s[i+<span class="number">1</span>].z) a[++tot]=s[i],a[tot].v=res,res=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=tot;++i) s[i]=a[i];</span><br><span class="line"><span class="built_in">cdq</span>(<span class="number">1</span>,tot);</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=tot;++i) d[s[i].ans+s[i].v<span class="number">-1</span>]+=s[i].v;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;++i) cout&lt;&lt;d[i]&lt;&lt;endl;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="可持久化"><a href="#可持久化" class="headerlink" title="可持久化"></a>可持久化</h3><h4 id="主席树"><a href="#主席树" class="headerlink" title="主席树"></a>主席树</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">1e6</span>+<span class="number">5</span>;</span><br><span class="line"><span class="type">int</span> root[N],a[N];</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">tree</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> lc,rc,v;</span><br><span class="line">&#125;t[N*<span class="number">25</span>];</span><br><span class="line"><span class="type">int</span> n,m,tot;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">up</span><span class="params">(<span class="type">int</span> k)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">t[k].v=t[t[k].lc].v+t[t[k].rc].v;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">build</span><span class="params">(<span class="type">int</span> &amp;k,<span class="type">int</span> l,<span class="type">int</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">k=++tot;</span><br><span class="line"><span class="keyword">if</span>(l==r) <span class="keyword">return</span>;</span><br><span class="line"><span class="type">int</span> mid=l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line">(t[k].lc,l,mid);</span><br><span class="line"><span class="built_in">build</span>(t[k].rc,mid+<span class="number">1</span>,r);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">ins</span><span class="params">(<span class="type">int</span> &amp;p,<span class="type">int</span> q,<span class="type">int</span> l,<span class="type">int</span> r,<span class="type">int</span> x,<span class="type">int</span> v)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">t[p=++tot]=t[q];t[p].v++;</span><br><span class="line"><span class="keyword">if</span>(l==r) <span class="keyword">return</span>;</span><br><span class="line"><span class="type">int</span> mid=l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(x&lt;=mid) <span class="built_in">ins</span>(t[p].lc,t[q].lc,l,mid,x,v);</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">ins</span>(t[p].rc,t[q].rc,mid+<span class="number">1</span>,r,x,v);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">ask</span><span class="params">(<span class="type">int</span> k1,<span class="type">int</span> k2,<span class="type">int</span> l,<span class="type">int</span> r,<span class="type">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(l==r) <span class="keyword">return</span> l;</span><br><span class="line"><span class="type">int</span> mid=l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(x&lt;=t[t[k1].lc].v-t[t[k2].lc].v) <span class="keyword">return</span> <span class="built_in">ask</span>(t[k1].lc,t[k2].lc,l,mid,x);</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">ask</span>(t[k1].rc,t[k2].rc,mid+<span class="number">1</span>,r,x-t[t[k1].lc].v+t[t[k2].lc].v);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> b[N];</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">cin.<span class="built_in">tie</span>(<span class="number">0</span>);cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">cin&gt;&gt;n&gt;&gt;m;</span><br><span class="line"><span class="type">int</span> l,r,x;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;++i)cin&gt;&gt;a[i],b[i]=a[i];</span><br><span class="line"><span class="built_in">sort</span>(b+<span class="number">1</span>,b+n+<span class="number">1</span>);</span><br><span class="line"><span class="type">int</span> M=<span class="built_in">unique</span>(b+<span class="number">1</span>,b+n+<span class="number">1</span>)-b<span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;++i) a[i]=<span class="built_in">lower_bound</span>(b+<span class="number">1</span>,b+M+<span class="number">1</span>,a[i])-b;</span><br><span class="line"><span class="built_in">build</span>(root[<span class="number">0</span>],<span class="number">1</span>,M);</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;++i) <span class="built_in">ins</span>(root[i],root[i<span class="number">-1</span>],<span class="number">1</span>,M,a[i],<span class="number">1</span>);</span><br><span class="line"><span class="keyword">while</span>(m--)</span><br><span class="line">&#123;</span><br><span class="line">cin&gt;&gt;l&gt;&gt;r&gt;&gt;x;</span><br><span class="line">cout&lt;&lt;b[<span class="built_in">ask</span>(root[r],root[l<span class="number">-1</span>],<span class="number">1</span>,M,x)]&lt;&lt;endl;</span><br><span class="line">&#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="Tries"><a href="#Tries" class="headerlink" title="Tries"></a>Tries</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">6e5</span>*<span class="number">25</span>+<span class="number">5</span>,NN=<span class="number">6e5</span>+<span class="number">5</span>;;</span><br><span class="line"><span class="type">int</span> s[N][<span class="number">2</span>],tot,root[N],t[N],n,m;</span><br><span class="line"><span class="type">int</span> b[NN];</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">ins</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> y,<span class="type">int</span> v,<span class="type">int</span> tt)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">25</span>;i&gt;=<span class="number">0</span>;--i)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> c=v&gt;&gt;i&amp;<span class="number">1</span>;</span><br><span class="line">        s[x][c^<span class="number">1</span>]=s[y][c^<span class="number">1</span>];</span><br><span class="line">        s[x][c]=++tot,t[s[x][c]]=tt;</span><br><span class="line">        x=s[x][c],y=s[y][c];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">int</span> <span class="title">ask</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> l,<span class="type">int</span> v)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> res=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">25</span>;i&gt;=<span class="number">0</span>;--i)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> c=(v&gt;&gt;i&amp;<span class="number">1</span>)^<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span>(t[s[x][c]]&gt;=l) res+=<span class="number">1</span>&lt;&lt;i,x=s[x][c];</span><br><span class="line">        <span class="keyword">else</span> x=s[x][c^<span class="number">1</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="number">0</span>);cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;m;</span><br><span class="line">    <span class="type">char</span> opt;</span><br><span class="line">    <span class="type">int</span> l,r,x;++n;</span><br><span class="line">    <span class="built_in">ins</span>(root[<span class="number">1</span>]=++tot,root[<span class="number">0</span>],<span class="number">0</span>,<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">2</span>;i&lt;=n;++i) cin&gt;&gt;x,b[i]=x^b[i<span class="number">-1</span>],<span class="built_in">ins</span>(root[i]=++tot,root[i<span class="number">-1</span>],b[i],i);</span><br><span class="line">    <span class="keyword">while</span>(m--)</span><br><span class="line">    &#123;</span><br><span class="line">        cin&gt;&gt;opt;</span><br><span class="line">        <span class="keyword">if</span>(opt==<span class="string">&#x27;A&#x27;</span>) cin&gt;&gt;x,++n,b[n]=b[n<span class="number">-1</span>]^x,<span class="built_in">ins</span>(root[n]=++tot,root[n<span class="number">-1</span>],b[n],n);</span><br><span class="line">        <span class="keyword">else</span> cin&gt;&gt;l&gt;&gt;r&gt;&gt;x,cout&lt;&lt;<span class="built_in">ask</span>(root[r],l,b[n]^x)&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="笛卡尔树"><a href="#笛卡尔树" class="headerlink" title="笛卡尔树"></a>笛卡尔树</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">1e7</span>+<span class="number">5</span>;</span><br><span class="line"><span class="type">int</span> n,p[N];</span><br><span class="line"><span class="type">int</span> st[N],top;</span><br><span class="line"><span class="type">int</span> lc[N],rc[N],f[N];</span><br><span class="line"><span class="type">int</span> ans1,ans2;</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">cin.<span class="built_in">tie</span>(<span class="number">0</span>);cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">cin&gt;&gt;n;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;++i) cin&gt;&gt;p[i];</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;++i)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> k=top;</span><br><span class="line"><span class="keyword">while</span>(k&amp;&amp;p[i]&lt;p[st[k]]) --k;</span><br><span class="line"><span class="keyword">if</span>(k) rc[st[k]]=i,f[i]=st[k];</span><br><span class="line"><span class="keyword">if</span>(k&lt;top) lc[i]=st[k+<span class="number">1</span>],f[st[k+<span class="number">1</span>]]=i;</span><br><span class="line">st[top=++k]=i;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;++i) ans1^=i*(lc[i]+<span class="number">1</span>),ans2^=i*(rc[i]+<span class="number">1</span>);</span><br><span class="line">cout&lt;&lt;ans1&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;ans2;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h2><h3 id="KMP"><a href="#KMP" class="headerlink" title="KMP"></a>KMP</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">pre</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">2</span>,j=<span class="number">0</span>;i&lt;=bb;++i)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">while</span>(j&amp;&amp;b[i+<span class="number">1</span>]!=b[j+<span class="number">1</span>]) j=p[j];</span><br><span class="line"><span class="keyword">if</span>(b[j+<span class="number">1</span>]==b[i+<span class="number">1</span>]) ++j;</span><br><span class="line">p[i+<span class="number">1</span>]=j;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Tries-1"><a href="#Tries-1" class="headerlink" title="Tries"></a>Tries</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">insert</span><span class="params">(<span class="type">char</span> *st)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> p=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;st[i];++i)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> c=st[i]-<span class="string">&#x27;a&#x27;</span>;</span><br><span class="line"><span class="keyword">if</span>(!s[p][c]) s[p][c]=++tot;</span><br><span class="line">p=s[p][c],++e[p];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">int</span> <span class="title">query</span><span class="params">(<span class="type">char</span> *st)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> p=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;st[i];++i)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> c=st[i]-<span class="string">&#x27;a&#x27;</span>;</span><br><span class="line"><span class="keyword">if</span>(!s[p][c]) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">p=s[p][c];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> e[p];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">init</span><span class="params">(<span class="type">int</span> p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=tot;++i)</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;<span class="number">26</span>;++j) s[i][j]=<span class="number">0</span>;</span><br><span class="line">    tot=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="AC自动机"><a href="#AC自动机" class="headerlink" title="AC自动机"></a>AC自动机</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">ins</span><span class="params">(<span class="type">char</span> *s)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> u=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;s[i];++i)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> c=s[i]-<span class="string">&#x27;a&#x27;</span>;</span><br><span class="line"><span class="keyword">if</span>(!ch[u][c]) ch[u][c]=++tot;</span><br><span class="line">u=ch[u][c];</span><br><span class="line">&#125;</span><br><span class="line">p[u]++;</span><br><span class="line">&#125;</span><br><span class="line">queue&lt;<span class="type">int</span>&gt;q;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">pre</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">26</span>;++i)<span class="keyword">if</span>(ch[<span class="number">0</span>][i]) q.<span class="built_in">push</span>(ch[<span class="number">0</span>][i]);</span><br><span class="line"><span class="keyword">while</span>(!q.<span class="built_in">empty</span>())</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> u=q.<span class="built_in">front</span>();q.<span class="built_in">pop</span>();</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">26</span>;++i)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(!ch[u][i]) ch[u][i]=ch[nxt[u]][i];</span><br><span class="line"><span class="keyword">else</span> q.<span class="built_in">push</span>(ch[u][i]),nxt[ch[u][i]]=ch[nxt[u]][i];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">int</span> <span class="title">find</span><span class="params">(<span class="type">char</span> *s)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> u=<span class="number">0</span>,k;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;s[i];++i)</span><br><span class="line">    &#123;</span><br><span class="line"><span class="type">int</span> c=s[i]-<span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">k=u=ch[u][c];</span><br><span class="line"><span class="keyword">while</span>(k&amp;&amp;!t[k])ans+=p[k],t[k]=<span class="number">1</span>,k=nxt[k];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="后缀数组"><a href="#后缀数组" class="headerlink" title="后缀数组"></a>后缀数组</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">sort</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;++i) ++cnt[rk[i]=a[i]];</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=m;++i) cnt[i]+=cnt[i<span class="number">-1</span>];</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;++i) sa[cnt[rk[i]]--]=i;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> k=<span class="number">1</span>;k&lt;=n;k&lt;&lt;=<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> num=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=n-k+<span class="number">1</span>;i&lt;=n;++i) rk1[++num]=i;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;++i) <span class="keyword">if</span>(sa[i]&gt;k) rk1[++num]=sa[i]-k;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=m;++i) cnt[i]=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;++i) ++cnt[rk[i]];</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=m;++i) cnt[i]+=cnt[i<span class="number">-1</span>];</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=n;i;--i) sa[cnt[rk[rk1[i]]]--]=rk1[i],rk1[i]=<span class="number">0</span>;</span><br><span class="line"><span class="built_in">swap</span>(rk,rk1);</span><br><span class="line">rk[sa[<span class="number">1</span>]]=<span class="number">1</span>,num=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">2</span>;i&lt;=n;++i)</span><br><span class="line">rk[sa[i]]=(rk1[sa[i]]==rk1[sa[i<span class="number">-1</span>]]&amp;&amp;rk1[sa[i]+k]==rk1[sa[i<span class="number">-1</span>]+k])?num:++num;</span><br><span class="line"><span class="keyword">if</span>(num==n) <span class="keyword">return</span>;</span><br><span class="line">m=num;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="图论"><a href="#图论" class="headerlink" title="图论"></a>图论</h2><h3 id="邻接表"><a href="#邻接表" class="headerlink" title="邻接表"></a>邻接表</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">add</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    to[++tot]=y,ne[tot]=f[x],f[x]=tot;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">add</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> y,<span class="type">int</span> z)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    to[++tot]=y,e[tot]=z,ne[tot]=f[x],f[x]=tot;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//变量冲突时</span></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">add</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    to[++tot]=y,e[tot]=z,ne[tot]=head[x],head[x]=tot;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//网络流 费用流</span></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">add</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> y,<span class="type">int</span> z)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">to[++tot]=y,ne[tot]=f[x],f[x]=tot,e[tot]=z;</span><br><span class="line">to[++tot]=x,ne[tot]=f[y],f[y]=tot,e[tot]=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">add</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> y,<span class="type">int</span> z,<span class="type">int</span> o)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">to[++tot]=y,ne[tot]=f[x],f[x]=tot,w[tot]=o,e[tot]=z;</span><br><span class="line">to[++tot]=x,ne[tot]=f[y],f[y]=tot,w[tot]=-o,e[tot]=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="最短路"><a href="#最短路" class="headerlink" title="最短路"></a>最短路</h3><h4 id="dijkstra"><a href="#dijkstra" class="headerlink" title="dijkstra"></a>dijkstra</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> mp(a,b) make_pair(a,b)</span></span><br><span class="line">priority_queue&lt;pair&lt;<span class="type">int</span>,<span class="type">int</span>&gt; &gt;q;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">dijkstra</span><span class="params">(<span class="type">int</span> s)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;++i) d[i]=<span class="number">2147483647</span>;</span><br><span class="line">d[s]=<span class="number">0</span>;</span><br><span class="line">q.<span class="built_in">push</span>(<span class="built_in">mp</span>(<span class="number">0</span>,s));</span><br><span class="line"><span class="keyword">while</span>(!q.<span class="built_in">empty</span>())</span><br><span class="line">&#123;</span><br><span class="line">            <span class="type">int</span> x=q.<span class="built_in">top</span>().second;q.<span class="built_in">pop</span>();</span><br><span class="line">            <span class="keyword">if</span>(v[x]) <span class="keyword">continue</span>;</span><br><span class="line">            v[x]=<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> y,i=f[x];i;i=ne[i])</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(d[x]+e[i]&lt;d[y=to[i]])</span><br><span class="line">                &#123;</span><br><span class="line">                    d[y]=d[x]+e[i];</span><br><span class="line">                    q.<span class="built_in">push</span>(<span class="built_in">mp</span>(-d[y],y));</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="spfa"><a href="#spfa" class="headerlink" title="spfa"></a>spfa</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">queue&lt;<span class="type">int</span>&gt;q;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">spfa</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;++i) d[i]=<span class="number">2147483647</span>;</span><br><span class="line">d[s]=<span class="number">0</span>;</span><br><span class="line">q.<span class="built_in">push</span>(s);</span><br><span class="line"><span class="keyword">while</span>(!q.<span class="built_in">empty</span>())</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> x=q.<span class="built_in">front</span>();q.<span class="built_in">pop</span>();</span><br><span class="line">v[x]=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=f[x],y;i;i=ne[i])</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(d[y=to[i]]&gt;d[x]+e[i])</span><br><span class="line">&#123;</span><br><span class="line">d[y]=d[x]+e[i];</span><br><span class="line"><span class="keyword">if</span>(!v[y]) q.<span class="built_in">push</span>(y),v[y]=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="floyd"><a href="#floyd" class="headerlink" title="floyd"></a>floyd</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">floyd</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> k=<span class="number">1</span>;k&lt;=n;++k)</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;++i)</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;=n;++j) d[i][j]=<span class="built_in">min</span>(d[i][k]+d[k][j],d[i][j]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="Johnson"><a href="#Johnson" class="headerlink" title="Johnson"></a>Johnson</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> mp(a,b) make_pair(a,b) </span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">1e5</span>+<span class="number">5</span>;</span><br><span class="line"><span class="type">int</span> to[N],f[N],e[N],ne[N],cnt[N];</span><br><span class="line"><span class="type">int</span> n,m,tot;</span><br><span class="line"><span class="type">bool</span> v[N];</span><br><span class="line"><span class="type">long</span> <span class="type">long</span> d[N],h[N];</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">add</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> y,<span class="type">int</span> z)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">to[++tot]=y,ne[tot]=f[x],e[tot]=z,f[x]=tot;</span><br><span class="line">&#125;</span><br><span class="line">queue&lt;<span class="type">int</span>&gt;q1;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">int</span> <span class="title">spfa</span><span class="params">(<span class="type">int</span> s)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;++i) d[i]=<span class="number">2147483647</span>;</span><br><span class="line">d[s]=<span class="number">0</span>;cnt[s]=<span class="number">1</span>;</span><br><span class="line">q1.<span class="built_in">push</span>(s);</span><br><span class="line"><span class="keyword">while</span>(!q1.<span class="built_in">empty</span>())</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> x=q1.<span class="built_in">front</span>();</span><br><span class="line">q1.<span class="built_in">pop</span>();</span><br><span class="line">v[x]=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=f[x],y;i;i=ne[i])</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(d[y=to[i]]&gt;d[x]+e[i])</span><br><span class="line">&#123;</span><br><span class="line">d[y]=d[x]+e[i];</span><br><span class="line">cnt[y]=cnt[x]+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(cnt[y]==n+<span class="number">2</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(!v[y]) q1.<span class="built_in">push</span>(y),v[y]=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">priority_queue&lt;pair&lt;<span class="type">int</span>,<span class="type">int</span>&gt; &gt;q;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">dijkstra</span><span class="params">(<span class="type">int</span> s)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;++i) d[i]=<span class="number">1e9</span>;</span><br><span class="line">d[s]=<span class="number">0</span>;</span><br><span class="line">q.<span class="built_in">push</span>(<span class="built_in">mp</span>(<span class="number">0</span>,s));</span><br><span class="line"><span class="keyword">while</span>(!q.<span class="built_in">empty</span>())</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> x=q.<span class="built_in">top</span>().second;</span><br><span class="line">q.<span class="built_in">pop</span>();</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> y,i=f[x];i;i=ne[i])</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(d[x]+e[i]&lt;d[y=to[i]])</span><br><span class="line">&#123;</span><br><span class="line">d[y]=d[x]+e[i];</span><br><span class="line">q.<span class="built_in">push</span>(<span class="built_in">mp</span>(-d[y],y));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">cin.<span class="built_in">tie</span>(<span class="number">0</span>);cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line"><span class="type">int</span> x,y,z;</span><br><span class="line">cin&gt;&gt;n&gt;&gt;m;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=m;++i) cin&gt;&gt;x&gt;&gt;y&gt;&gt;z,<span class="built_in">add</span>(x,y,z);</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;++i) <span class="built_in">add</span>(<span class="number">0</span>,i,<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(!<span class="built_in">spfa</span>(<span class="number">0</span>))</span><br><span class="line">&#123;</span><br><span class="line">cout&lt;&lt;<span class="number">-1</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;++i)</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j=f[i];j;j=ne[j]) e[j]+=h[i]-h[to[j]];</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;++i)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">long</span> <span class="type">long</span> ans=<span class="number">0</span>;</span><br><span class="line"><span class="built_in">dijkstra</span>(i);</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;=n;++j)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(d[j]==<span class="number">1e9</span>) ans+=j*<span class="number">1e9</span>;</span><br><span class="line"><span class="keyword">else</span> ans+=j*(d[j]+h[j]-h[i]);</span><br><span class="line">&#125;</span><br><span class="line">cout&lt;&lt;ans&lt;&lt;endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="最小生成树"><a href="#最小生成树" class="headerlink" title="最小生成树"></a>最小生成树</h3><h4 id="Kruskal"><a href="#Kruskal" class="headerlink" title="Kruskal"></a>Kruskal</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">struct</span> <span class="title class_">edge</span>&#123;</span><br><span class="line">    <span class="type">int</span> x,y,z;</span><br><span class="line">    <span class="keyword">inline</span> <span class="type">bool</span> <span class="keyword">operator</span>&lt;(<span class="type">const</span> edge &amp;res)<span class="type">const</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> z&lt;res.z;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;e[N];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">find</span><span class="params">(<span class="type">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> x==f[x]?x:f[x]=<span class="built_in">find</span>(f[x]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">int</span> <span class="title">kruskal</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;++i) f[i]=i;</span><br><span class="line">    <span class="built_in">sort</span>(e+<span class="number">1</span>,e+m+<span class="number">1</span>);</span><br><span class="line">    <span class="type">int</span> tot=<span class="number">1</span>,ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=m;++i)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> x=<span class="built_in">find</span>(e[i].x),y=<span class="built_in">find</span>(e[i].y);</span><br><span class="line">        <span class="keyword">if</span>(x==y) <span class="keyword">continue</span>;</span><br><span class="line">        f[x]=y,ans+=e[i].z;</span><br><span class="line">        <span class="keyword">if</span>(++tot==n) <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="Prim"><a href="#Prim" class="headerlink" title="Prim"></a>Prim</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> mp(a,b) make_pair(a,b)</span></span><br><span class="line">priority_queue&lt;pair&lt;<span class="type">int</span>,<span class="type">int</span>&gt; &gt;q;</span><br><span class="line"><span class="type">int</span> tot,ans;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">int</span> <span class="title">Prim</span><span class="params">(<span class="type">int</span> s)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;++i) d[i]=<span class="number">2147483647</span>;</span><br><span class="line">d[s]=<span class="number">0</span>;</span><br><span class="line">q.<span class="built_in">push</span>(<span class="built_in">mp</span>(<span class="number">0</span>,s));</span><br><span class="line"><span class="keyword">while</span>(!q.<span class="built_in">empty</span>())</span><br><span class="line">&#123;</span><br><span class="line">            <span class="type">int</span> x=q.<span class="built_in">top</span>().second;q.<span class="built_in">pop</span>();</span><br><span class="line">            <span class="keyword">if</span>(v[x]) <span class="keyword">continue</span>;</span><br><span class="line">            v[x]=<span class="number">1</span>;</span><br><span class="line">            ans+=d[x];</span><br><span class="line">            <span class="keyword">if</span>(++tot==n) <span class="keyword">return</span> ans;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> y,i=f[x];i;i=ne[i])</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(e[i]&lt;d[y=to[i]])</span><br><span class="line">                &#123;</span><br><span class="line">                    d[y]=e[i];</span><br><span class="line">                    q.<span class="built_in">push</span>(<span class="built_in">mp</span>(-d[y],y));</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">&#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="Boruvka-Sollin"><a href="#Boruvka-Sollin" class="headerlink" title="Borůvka(Sollin)"></a>Borůvka(Sollin)</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">struct</span> <span class="title class_">edge</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> x,y,z;</span><br><span class="line">&#125;e[N];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">find</span><span class="params">(<span class="type">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> x==f[x]?x:f[x]=<span class="built_in">find</span>(f[x]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> tot=<span class="number">1</span>;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">int</span> <span class="title">Sollin</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;++i) f[i]=i;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">bool</span> fl=<span class="number">1</span>;fl;)</span><br><span class="line">    &#123;</span><br><span class="line">        fl=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;++i) p[i]=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=m;++i)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> x=<span class="built_in">find</span>(e[i].x),y=<span class="built_in">find</span>(e[i].y);</span><br><span class="line">            <span class="keyword">if</span>(x==y||v[i]) <span class="keyword">continue</span>;</span><br><span class="line">            <span class="keyword">if</span>(!p[x]||e[i].z&lt;e[p[x]].z) p[x]=i;</span><br><span class="line">            <span class="keyword">if</span>(!p[y]||e[i].z&lt;e[p[y]].z) p[y]=i;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;++i)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(p[i]&amp;&amp;!v[p[i]])</span><br><span class="line">            &#123;</span><br><span class="line">                v[p[i]]=<span class="number">1</span>;</span><br><span class="line">                fl=<span class="number">1</span>;</span><br><span class="line">                ans+=e[p[i]].z;</span><br><span class="line">                <span class="keyword">if</span>(++tot==n) <span class="keyword">return</span> ans;</span><br><span class="line">                f[<span class="built_in">find</span>(e[p[i]].x)]=<span class="built_in">find</span>(e[p[i]].y);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="附：严格次小生成树"><a href="#附：严格次小生成树" class="headerlink" title="附：严格次小生成树"></a>附：严格次小生成树</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> INF 0x3f3f3f3f</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">5e5</span>+<span class="number">5</span>,NN=<span class="number">20</span>;</span><br><span class="line"><span class="type">int</span> n,m;</span><br><span class="line"><span class="type">int</span> head[N],to[N],ne[N],tot,e[N],v[N];</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">add</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> y,<span class="type">int</span> z)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">to[++tot]=y,e[tot]=z,ne[tot]=head[x],head[x]=tot;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> p[N];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">find</span><span class="params">(<span class="type">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> x==p[x]?x:p[x]=<span class="built_in">find</span>(p[x]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">edge</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> x,y,z;</span><br><span class="line"><span class="keyword">inline</span> <span class="type">bool</span> <span class="keyword">operator</span>&lt;(<span class="type">const</span> edge &amp;res)<span class="type">const</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> z&lt;res.z;</span><br><span class="line">&#125;</span><br><span class="line">&#125;ed[N];</span><br><span class="line"><span class="type">int</span> f[N][NN],g1[N][NN],g2[N][NN];</span><br><span class="line"><span class="type">int</span> d[N];</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> fa)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">d[x]=d[fa]+<span class="number">1</span>,f[x][<span class="number">0</span>]=fa;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;<span class="number">20</span>;i++) f[x][i]=f[f[x][i<span class="number">-1</span>]][i<span class="number">-1</span>];</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;<span class="number">20</span>;++i)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> a[<span class="number">4</span>]=&#123;g1[x][i<span class="number">-1</span>],g2[x][i<span class="number">-1</span>],g1[f[x][i<span class="number">-1</span>]][i<span class="number">-1</span>],g2[f[x][i<span class="number">-1</span>]][i<span class="number">-1</span>]&#125;;</span><br><span class="line"><span class="built_in">sort</span>(a,a+<span class="number">4</span>);</span><br><span class="line">g1[x][i]=a[<span class="number">3</span>];</span><br><span class="line"><span class="type">int</span> id=<span class="number">2</span>;</span><br><span class="line"><span class="keyword">while</span>(a[id]==a[<span class="number">3</span>]&amp;&amp;id&gt;<span class="number">-1</span>) --id;</span><br><span class="line"><span class="keyword">if</span>(id&gt;<span class="number">-1</span>) g2[x][i]=a[id];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> y,i=head[x];i;i=ne[i])</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>((y=to[i])==fa) <span class="keyword">continue</span>;</span><br><span class="line">g1[y][<span class="number">0</span>]=e[i],g2[y][<span class="number">0</span>]=-INF;</span><br><span class="line"><span class="built_in">dfs</span>(y,x);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> cnt=<span class="number">1</span>,ans,res=INF;</span><br><span class="line"><span class="type">int</span> recond;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">int</span> <span class="title">lca</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(d[x]&lt;d[y]) <span class="built_in">swap</span>(x,y);</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">19</span>;i&gt;=<span class="number">0</span>;--i)<span class="keyword">if</span>(d[f[x][i]]&gt;=d[y]) x=f[x][i];</span><br><span class="line"><span class="keyword">if</span>(x==y) <span class="keyword">return</span> x;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">19</span>;i&gt;=<span class="number">0</span>;--i)<span class="keyword">if</span>(f[x][i]!=f[y][i]) x=f[x][i],y=f[y][i];</span><br><span class="line"><span class="keyword">return</span> f[x][<span class="number">0</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">int</span> <span class="title">find</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> mx=-INF;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">19</span>;i&gt;=<span class="number">0</span>;--i)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(d[f[x][i]]&gt;=d[y]) mx=<span class="built_in">max</span>(mx,g1[x][i]==recond?g2[x][i]:g1[x][i]),x=f[x][i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> mx;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">cin.<span class="built_in">tie</span>(<span class="number">0</span>);cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">cin&gt;&gt;n&gt;&gt;m;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=m;++i) cin&gt;&gt;ed[i].x&gt;&gt;ed[i].y&gt;&gt;ed[i].z;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;++i) p[i]=i;</span><br><span class="line"><span class="built_in">sort</span>(ed+<span class="number">1</span>,ed+m+<span class="number">1</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=m;++i)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> x=<span class="built_in">find</span>(ed[i].x),y=<span class="built_in">find</span>(ed[i].y);</span><br><span class="line"><span class="keyword">if</span>(x==y)<span class="keyword">continue</span>;</span><br><span class="line">p[x]=y,ans+=ed[i].z,v[i]=<span class="number">1</span>;</span><br><span class="line"><span class="built_in">add</span>(ed[i].x,ed[i].y,ed[i].z),<span class="built_in">add</span>(ed[i].y,ed[i].x,ed[i].z);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">dfs</span>(<span class="number">1</span>,<span class="number">0</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=m;++i)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(v[i]) <span class="keyword">continue</span>;</span><br><span class="line"><span class="type">int</span> k=<span class="built_in">lca</span>(ed[i].x,ed[i].y);</span><br><span class="line">recond=ed[i].z;</span><br><span class="line"><span class="type">int</span> k1=<span class="built_in">find</span>(ed[i].x,k),k2=<span class="built_in">find</span>(ed[i].y,k);</span><br><span class="line">res=<span class="built_in">min</span>(res,<span class="built_in">min</span>(recond-k1,recond-k2));</span><br><span class="line">&#125;</span><br><span class="line">cout&lt;&lt;ans+res;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="判负环"><a href="#判负环" class="headerlink" title="判负环"></a>判负环</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">bool</span> <span class="title">spfa</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;++i) d[i]=<span class="number">2e9</span>;</span><br><span class="line">d[<span class="number">1</span>]=<span class="number">0</span>;</span><br><span class="line">q.<span class="built_in">push</span>(<span class="number">1</span>);</span><br><span class="line"><span class="keyword">while</span>(!q.<span class="built_in">empty</span>())</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> x=q.<span class="built_in">front</span>();</span><br><span class="line">q.<span class="built_in">pop</span>();</span><br><span class="line">v[x]=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=f[x],y;i;i=ne[i])</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(d[y=to[i]]&gt;d[x]+e[i])</span><br><span class="line">&#123;</span><br><span class="line">d[y]=d[x]+e[i];</span><br><span class="line"><span class="keyword">if</span>(!v[y]) q.<span class="built_in">push</span>(y),v[y]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>((cnt[y]=cnt[x]+<span class="number">1</span>)==n) <span class="keyword">return</span> <span class="number">0</span>; </span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="差分约束"><a href="#差分约束" class="headerlink" title="差分约束"></a>差分约束</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">5e5</span>+<span class="number">5</span>;</span><br><span class="line"><span class="type">int</span> n,m;</span><br><span class="line"><span class="type">int</span> to[N],ne[N],f[N],e[N],tot=<span class="number">1</span>;</span><br><span class="line"><span class="type">int</span> v[N],cnt[N],d[N],q[N],l=<span class="number">1</span>,r;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">add</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> y,<span class="type">int</span> z)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    to[++tot]=y,ne[tot]=f[x],f[x]=tot,e[tot]=z;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">spfa</span><span class="params">(<span class="type">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;++i) d[i]=<span class="number">2147483647</span>;</span><br><span class="line">cnt[x]=<span class="number">1</span>;</span><br><span class="line">q[++r]=x;</span><br><span class="line">    <span class="keyword">while</span>(l&lt;=r)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> x=q[l++];</span><br><span class="line">        <span class="keyword">if</span>(l==N) l=<span class="number">0</span>;</span><br><span class="line">        v[x]=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=f[x],y;i;i=ne[i])</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(d[x]+e[i]&lt;d[y=to[i]])</span><br><span class="line">            &#123;</span><br><span class="line">                d[y]=d[x]+e[i];</span><br><span class="line">                cnt[y]=cnt[x]+<span class="number">1</span>;</span><br><span class="line">                <span class="keyword">if</span>(cnt[y]==n+<span class="number">2</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    cout&lt;&lt;<span class="string">&quot;NO&quot;</span>;</span><br><span class="line">                    <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(!v[y])</span><br><span class="line">                &#123;</span><br><span class="line">                    v[y]=<span class="number">1</span>,q[++r]=y;</span><br><span class="line">                    <span class="keyword">if</span>(r==N) r=<span class="number">0</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="number">0</span>);cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;m;</span><br><span class="line">    <span class="type">int</span> x,a,b;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=m;++i)</span><br><span class="line">    &#123;</span><br><span class="line">        cin&gt;&gt;a&gt;&gt;b&gt;&gt;x;</span><br><span class="line">        <span class="built_in">add</span>(b,a,x);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;++i) <span class="built_in">add</span>(<span class="number">0</span>,i,<span class="number">0</span>);</span><br><span class="line">    <span class="built_in">spfa</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;++i) cout&lt;&lt;d[i]&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// d[a]-d[b]&lt;=x</span></span><br></pre></td></tr></table></figure><h3 id="lca"><a href="#lca" class="headerlink" title="lca"></a>lca</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//倍增法</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> fa)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">d[x]=d[fa]+<span class="number">1</span>,f[x][<span class="number">0</span>]=fa;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;<span class="number">20</span>;i++) f[x][i]=f[f[x][i<span class="number">-1</span>]][i<span class="number">-1</span>];</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> y,i=head[x];i;i=ne[i])</span><br><span class="line"><span class="keyword">if</span>((y=to[i])!=fa) <span class="built_in">dfs</span>(y,x);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">int</span> <span class="title">lca</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(d[x]&lt;d[y]) <span class="built_in">swap</span>(x,y);</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">19</span>;i&gt;=<span class="number">0</span>;--i)<span class="keyword">if</span>(d[f[x][i]]&gt;=d[y]) x=f[x][i];</span><br><span class="line"><span class="keyword">if</span>(x==y) <span class="keyword">return</span> x;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">19</span>;i&gt;=<span class="number">0</span>;--i)<span class="keyword">if</span>(f[x][i]!=f[y][i]) x=f[x][i],y=f[y][i];</span><br><span class="line"><span class="keyword">return</span> f[x][<span class="number">0</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//时间戳</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> fa)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    tin[x]=++t;</span><br><span class="line">d[x]=d[fa]+<span class="number">1</span>,f[x][<span class="number">0</span>]=fa;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;<span class="number">20</span>;i++) f[x][i]=f[f[x][i<span class="number">-1</span>]][i<span class="number">-1</span>];</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> y,i=head[x];i;i=ne[i])</span><br><span class="line"><span class="keyword">if</span>((y=to[i])!=fa) <span class="built_in">dfs</span>(y,x);</span><br><span class="line">    tout[x]=++t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">int</span> <span class="title">pd</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> y)</span></span>&#123;<span class="keyword">return</span> tin[x]&lt;=tin[y]&amp;&amp;tout[x]&gt;=tout[y];&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">int</span> <span class="title">lca</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">pd</span>(y,x)) <span class="keyword">return</span> y;</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">pd</span>(x,y)) <span class="keyword">return</span> x;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">18</span>;i&gt;=<span class="number">0</span>;--i)</span><br><span class="line">        <span class="keyword">if</span>(!<span class="built_in">pd</span>(fa[x][i],y))x=fa[x][i];</span><br><span class="line"><span class="keyword">return</span> fa[x][<span class="number">0</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//树剖</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dfs1</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> fa)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">dep[x]=dep[fa]+<span class="number">1</span>;</span><br><span class="line">s[x]=<span class="number">1</span>;</span><br><span class="line">f[x]=fa;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=head[x],y;i;i=ne[i])</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>((y=to[i])!=fa)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">dfs1</span>(y,x);</span><br><span class="line">s[x]+=s[y];</span><br><span class="line"><span class="keyword">if</span>(s[y]&gt;s[son[x]]) son[x]=y;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dfs2</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> t)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">top[x]=t;</span><br><span class="line"><span class="keyword">if</span>(!son[x]) <span class="keyword">return</span>;</span><br><span class="line"><span class="built_in">dfs2</span>(son[x],t);</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=head[x],y;i;i=ne[i])</span><br><span class="line">&#123;</span><br><span class="line">y=to[i];</span><br><span class="line"><span class="keyword">if</span>(y==f[x]||y==son[x]) <span class="keyword">continue</span>;</span><br><span class="line"><span class="built_in">dfs2</span>(y,y);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">int</span> <span class="title">lca</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">while</span>(top[x]!=top[y])</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(dep[top[x]]&lt;dep[top[y]]) <span class="built_in">swap</span>(x,y);</span><br><span class="line">x=f[top[x]];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(dep[x]&gt;dep[y]) <span class="built_in">swap</span>(x,y);</span><br><span class="line"><span class="keyword">return</span> x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">ST表</span></span><br><span class="line"><span class="comment">略</span></span><br><span class="line"><span class="comment">tarjan</span></span><br><span class="line"><span class="comment">略</span></span><br><span class="line"><span class="comment">四毛子(一半)</span></span><br><span class="line"><span class="comment">略</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h3 id="树的直径"><a href="#树的直径" class="headerlink" title="树的直径"></a>树的直径</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//树形DP</span></span><br><span class="line"><span class="type">int</span> res=<span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">dp</span><span class="params">(<span class="type">int</span> x，<span class="type">int</span> fa)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> d=<span class="number">0</span>,d1=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> y,i=head[x];i;i=ne[i])</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>((y=to[i])==fa) <span class="keyword">continue</span>;</span><br><span class="line"><span class="type">int</span> d2=<span class="built_in">dp</span>(y)+e[i];</span><br><span class="line"><span class="keyword">if</span>(d2&gt;d) d1=d,d=d2;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(d2&gt;d1) d1=d2;</span><br><span class="line">&#125;</span><br><span class="line">res=<span class="built_in">max</span>(d1+d,res);</span><br><span class="line"><span class="keyword">return</span> d;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="有向图tarjan"><a href="#有向图tarjan" class="headerlink" title="有向图tarjan"></a>有向图tarjan</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">tarjan</span><span class="params">(<span class="type">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">dfn[x]=low[x]=++t,st[++top]=x;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> y,i=head[x];i;i=ne[i])</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(!dfn[y=to[i]]) <span class="built_in">tarjan</span>(y),low[x]=<span class="built_in">min</span>(low[x],low[y]);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(!c[y]) low[x]=<span class="built_in">min</span>(low[x],dfn[y]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(low[x]==dfn[x])</span><br><span class="line">&#123;</span><br><span class="line">++cnt;</span><br><span class="line"><span class="keyword">while</span>(st[top+<span class="number">1</span>]!=x) s[cnt].<span class="built_in">push_back</span>(st[top]),c[st[top--]]=cnt,++size[cnt];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="无向图tarjan"><a href="#无向图tarjan" class="headerlink" title="无向图tarjan"></a>无向图tarjan</h3><h4 id="桥"><a href="#桥" class="headerlink" title="桥"></a>桥</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">tarjan</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> ine)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">low[x]=dfn[x]=++t;</span><br><span class="line">st[++top]=x;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> y,i=f[x];i;i=ne[i])</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(!dfn[y=to[i]])</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">tarjan</span>(y,i),low[x]=<span class="built_in">min</span>(low[x],low[y]);</span><br><span class="line"><span class="keyword">if</span>(low[y]&gt;dfn[x]) v[i]=v[i^<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(i!=(ine^<span class="number">1</span>)) low[x]=<span class="built_in">min</span>(low[x],dfn[y]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="边双连通分量"><a href="#边双连通分量" class="headerlink" title="边双连通分量"></a>边双连通分量</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">tarjan</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> ine)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">low[x]=dfn[x]=++t;</span><br><span class="line">st[++top]=x;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> y,i=f[x];i;i=ne[i])</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(!dfn[y=to[i]])</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">tarjan</span>(y,i),low[x]=<span class="built_in">min</span>(low[x],low[y]);</span><br><span class="line"><span class="keyword">if</span>(low[y]&gt;dfn[x])v[i]=v[i^<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(i!=(ine^<span class="number">1</span>)) low[x]=<span class="built_in">min</span>(low[x],dfn[y]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(low[x]==dfn[x])</span><br><span class="line">&#123;</span><br><span class="line">++cnt;</span><br><span class="line"><span class="keyword">while</span>(st[top+<span class="number">1</span>]!=x) s[cnt].<span class="built_in">push_back</span>(st[top]),c[st[top--]]=cnt;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="割点"><a href="#割点" class="headerlink" title="割点"></a>割点</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">tarjan</span><span class="params">(<span class="type">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">dfn[x]=low[x]=++idx;</span><br><span class="line"><span class="type">int</span> res=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> y,i=f[x];i;i=ne[i])</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(!dfn[y=to[i]])</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">tarjan</span>(y),low[x]=<span class="built_in">min</span>(low[x],low[y]);</span><br><span class="line"><span class="keyword">if</span>(low[y]&gt;=dfn[x]) <span class="keyword">if</span>(res++||root!=x) s[++cnt]=x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> low[x]=<span class="built_in">min</span>(low[x],dfn[y]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="点双连通分量"><a href="#点双连通分量" class="headerlink" title="点双连通分量"></a>点双连通分量</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">tarjan</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> fa)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    low[x]=dfn[x]=++t;</span><br><span class="line">    st[++top]=x;</span><br><span class="line">    <span class="keyword">if</span>(!f[x]&amp;&amp;!fa)</span><br><span class="line">    &#123;</span><br><span class="line">        s[++cnt].<span class="built_in">push_back</span>(x);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> y,i=f[x];i;i=ne[i])</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(!dfn[y=to[i]])</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">tarjan</span>(y,i),low[x]=<span class="built_in">min</span>(low[x],low[y]);</span><br><span class="line">            <span class="keyword">if</span>(low[y]&gt;=dfn[x])</span><br><span class="line">            &#123;</span><br><span class="line">                ++cnt;</span><br><span class="line">                <span class="keyword">while</span>(st[top+<span class="number">1</span>]!=y) s[cnt].<span class="built_in">push_back</span>(st[top--]);</span><br><span class="line">                s[cnt].<span class="built_in">push_back</span>(x);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(y!=fa) low[x]=<span class="built_in">min</span>(low[x],dfn[y]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="欧拉回路"><a href="#欧拉回路" class="headerlink" title="欧拉回路"></a>欧拉回路</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">euler</span><span class="params">(<span class="type">int</span> s)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">st[++top]=s;</span><br><span class="line"><span class="keyword">while</span>(top)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> x=st[top],i=f[x];</span><br><span class="line"><span class="keyword">while</span> (i&amp;&amp;vis[i]) i=ne[i];</span><br><span class="line"><span class="keyword">if</span>(i) st[++top]=to[i],vis[i]=vis[i^<span class="number">1</span>]=<span class="number">1</span>,f[x]=ne[i]; </span><br><span class="line"><span class="keyword">else</span> --top,ans[++cnt]=x;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="二分图"><a href="#二分图" class="headerlink" title="二分图"></a>二分图</h3><h4 id="判定"><a href="#判定" class="headerlink" title="判定"></a>判定</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">bool</span> <span class="title">color</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> d)</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    v[x]=d;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> y,i=f[x];i;i=ne[i])</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(!v[y=to[i]]) <span class="built_in">dfs</span>(y,<span class="number">3</span>-x);</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(v[y]==v[x]) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="最大匹配"><a href="#最大匹配" class="headerlink" title="最大匹配"></a>最大匹配</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">bool</span> <span class="title">find</span><span class="params">(<span class="type">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> y,i=f[x];i;i=ne[i])</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(v[y=to[i]]) <span class="keyword">continue</span>;</span><br><span class="line">        v[y]=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span>(!mat[y]||<span class="built_in">find</span>(mat[y]))</span><br><span class="line">        &#123;</span><br><span class="line">            mat[y]=x;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">int</span> <span class="title">match</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;++i)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">memset</span>(v,<span class="number">0</span>,<span class="keyword">sizeof</span> v);</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">find</span>(i)) ++ans;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="最小点覆盖-最大匹配"><a href="#最小点覆盖-最大匹配" class="headerlink" title="最小点覆盖=最大匹配"></a>最小点覆盖=最大匹配</h4><h4 id="最大独立集-总数-最小点覆盖"><a href="#最大独立集-总数-最小点覆盖" class="headerlink" title="最大独立集=总数-最小点覆盖"></a>最大独立集=总数-最小点覆盖</h4><h3 id="网络流"><a href="#网络流" class="headerlink" title="网络流"></a>网络流</h3><h4 id="最大流"><a href="#最大流" class="headerlink" title="最大流"></a>最大流</h4><h5 id="Dinic"><a href="#Dinic" class="headerlink" title="Dinic"></a>Dinic</h5><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">int</span> <span class="title">dinic</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> flow)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(x==t) <span class="keyword">return</span> flow;</span><br><span class="line"><span class="type">int</span> rest=flow;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> y,i=cur[x];i;i=ne[i])</span><br><span class="line">&#123;</span><br><span class="line">cur[x]=i;</span><br><span class="line"><span class="keyword">if</span>(e[i]&amp;&amp;d[y=to[i]]==d[x]+<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> k=<span class="built_in">dinic</span>(y,<span class="built_in">min</span>(rest,e[i]));</span><br><span class="line"><span class="keyword">if</span>(!k) d[y]=<span class="number">0</span>;</span><br><span class="line">e[i]-=k,e[i^<span class="number">1</span>]+=k,rest-=k;</span><br><span class="line"><span class="keyword">if</span>(!rest) <span class="keyword">return</span> flow;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> flow-rest;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">bfs</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;++i) cur[i]=f[i],d[i]=<span class="number">0</span>;</span><br><span class="line">queue&lt;<span class="type">int</span>&gt;q;</span><br><span class="line">q.<span class="built_in">push</span>(s);</span><br><span class="line">d[s]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(!q.<span class="built_in">empty</span>())</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> x=q.<span class="built_in">front</span>();q.<span class="built_in">pop</span>();</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> y,i=f[x];i;i=ne[i])</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(e[i]&amp;&amp;!d[y=to[i]])</span><br><span class="line">&#123;</span><br><span class="line">q.<span class="built_in">push</span>(y);d[y]=d[x]+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(y==t) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">int</span> <span class="title">Dinic</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> res=<span class="number">0</span>,k;</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">bfs</span>())</span><br><span class="line"><span class="keyword">while</span>(k=<span class="built_in">dinic</span>(s,<span class="number">1</span>&lt;&lt;<span class="number">30</span>)) res+=k;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="费用流"><a href="#费用流" class="headerlink" title="费用流"></a>费用流</h4><h5 id="SSP"><a href="#SSP" class="headerlink" title="SSP"></a>SSP</h5><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">int</span> <span class="title">bfs</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;++i) d[i]=<span class="number">0x3f3f3f3f</span>,c[i]=f[i],v[i]=<span class="number">0</span>;</span><br><span class="line">d[s]=<span class="number">0</span>;</span><br><span class="line">queue&lt;<span class="type">int</span>&gt;q;</span><br><span class="line">q.<span class="built_in">push</span>(s);</span><br><span class="line"><span class="keyword">while</span>(!q.<span class="built_in">empty</span>())</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> x=q.<span class="built_in">front</span>();q.<span class="built_in">pop</span>();</span><br><span class="line">v[x]=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=f[x],y;i;i=ne[i])</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(d[y=to[i]]&gt;d[x]+w[i]&amp;&amp;e[i])</span><br><span class="line">&#123;</span><br><span class="line">d[y]=d[x]+w[i];</span><br><span class="line"><span class="keyword">if</span>(!v[y]) q.<span class="built_in">push</span>(y),v[y]=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> d[t]!=<span class="number">0x3f3f3f3f</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">dinic</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> flow)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(x==t)</span><br><span class="line">&#123;</span><br><span class="line">ans+=flow,res+=flow*d[t];</span><br><span class="line">v[t]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">return</span> flow;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> used=<span class="number">0</span>;</span><br><span class="line">v[x]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=c[x],y;i;i=ne[i])</span><br><span class="line">&#123;</span><br><span class="line">y=to[i];</span><br><span class="line"><span class="keyword">if</span>((!v[y]||y==t)&amp;&amp;e[i]&amp;&amp;d[x]+w[i]==d[y])</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> k=<span class="built_in">dinic</span>(y,<span class="built_in">min</span>(flow-used,e[i]));</span><br><span class="line"><span class="keyword">if</span>(!k) <span class="keyword">continue</span>;</span><br><span class="line">e[i]-=k,e[i^<span class="number">1</span>]+=k,used+=k;</span><br><span class="line"><span class="keyword">if</span>(used==flow) <span class="keyword">return</span> flow;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> used;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">SSP</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">bfs</span>())</span><br><span class="line">    &#123;</span><br><span class="line">        v[t]=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span>(v[t])</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">memset</span>(v,<span class="number">0</span>,<span class="keyword">sizeof</span> v);</span><br><span class="line">            <span class="built_in">dinic</span>(s,<span class="number">1</span>&lt;&lt;<span class="number">30</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="数论"><a href="#数论" class="headerlink" title="数论"></a>数论</h2><h3 id="快速幂"><a href="#快速幂" class="headerlink" title="快速幂"></a>快速幂</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">int</span> <span class="title">qpow</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> res=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(b)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(b&amp;<span class="number">1</span>) (res*=a)%=mod;</span><br><span class="line">        b&gt;&gt;=<span class="number">1</span>,(a*=a)%=mod;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//矩阵快速幂</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">node</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> f[N][N],m,n;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">clear</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=m;++i)</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;=n;++j) f[i][j]=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">init</span><span class="params">(<span class="type">int</span> _m,<span class="type">int</span> _n)</span></span>&#123;m=_m,n=_n;&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> node <span class="title">mul</span><span class="params">(node x,node y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">node z;</span><br><span class="line">z.<span class="built_in">init</span>(x.m,y.n);</span><br><span class="line">z.<span class="built_in">clear</span>();</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=x.m;++i)</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> k=<span class="number">1</span>;k&lt;=x.n;++k)</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;=y.n;++j)</span><br><span class="line">                (z.f[i][j]+=x.f[i][k]*y.f[k][j])%=mod;</span><br><span class="line"><span class="keyword">return</span> z;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> node <span class="title">qpow</span><span class="params">(node x,<span class="type">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">node res=x;--y;</span><br><span class="line"><span class="keyword">while</span>(y)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(y&amp;<span class="number">1</span>) res=<span class="built_in">mul</span>(res,x);</span><br><span class="line">y&gt;&gt;=<span class="number">1</span>,x=<span class="built_in">mul</span>(x,x);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="线性筛"><a href="#线性筛" class="headerlink" title="线性筛"></a>线性筛</h3><h4 id="筛质数"><a href="#筛质数" class="headerlink" title="筛质数"></a>筛质数</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">primes</span><span class="params">(<span class="type">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">2</span>;i&lt;=n;++i)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(!v[i]) v[i]=i,prime[++cnt]=i;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;=cnt;++j)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(prime[j]&gt;v[i]||prime[j]&gt;n/i) <span class="keyword">break</span>;</span><br><span class="line">v[i*prime[j]]=prime[j];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="筛欧拉函数"><a href="#筛欧拉函数" class="headerlink" title="筛欧拉函数"></a>筛欧拉函数</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">euler</span><span class="params">(<span class="type">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">2</span>;i&lt;=n;++i)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(!v[i]) v[i]=i,prime[++cnt]=i,phi[i]=i<span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;=cnt;++j)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(prime[j]&gt;v[i]||prime[j]*i&gt;n) <span class="keyword">break</span>;</span><br><span class="line">v[i*prime[j]]=prime[j];</span><br><span class="line">phi[i*prime[j]]=phi[i]*(i%prime[j]?prime[j]<span class="number">-1</span>:prime[j]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="筛莫比乌斯函数"><a href="#筛莫比乌斯函数" class="headerlink" title="筛莫比乌斯函数"></a>筛莫比乌斯函数</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">mobius</span><span class="params">(<span class="type">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    mu[<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">2</span>;i&lt;=n;++i)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(!v[i]) prime[++cnt]=i,mu[i]=<span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;=cnt;++j)</span><br><span class="line">        &#123;</span><br><span class="line">            v[prime[j]*i]=prime[j];</span><br><span class="line">            mu[i*prime[j]]=i%prime[j]?-mu[i]:<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">if</span>(i%prime[j]==<span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Exgcd"><a href="#Exgcd" class="headerlink" title="Exgcd"></a>Exgcd</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">exgcd</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b,<span class="type">int</span> &amp;d,<span class="type">int</span> &amp;x,<span class="type">int</span> &amp;y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(!b)</span><br><span class="line">    &#123;</span><br><span class="line">        d=a,x=<span class="number">1</span>,y=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">exgcd</span>(b,a%b,d,y,x);</span><br><span class="line">    y-=a/b*x;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="BSGS"><a href="#BSGS" class="headerlink" title="BSGS"></a>BSGS</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">int</span> <span class="title">BSGS</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b,<span class="type">int</span> p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (b%p==<span class="number">1</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> k=<span class="built_in">sqrt</span>(p)+<span class="number">1</span>;</span><br><span class="line">    map&lt;<span class="type">int</span>,<span class="type">int</span>&gt;mp;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>,j=b%p;i&lt;k;++i) mp[j]=i,(j*=a)%=p;</span><br><span class="line">    <span class="type">int</span> s=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;k;++i) (s*=a)%=p;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">1</span>,j=s;i&lt;=k;++i)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(mp.<span class="built_in">find</span>(j)!=mp.<span class="built_in">end</span>()) <span class="keyword">return</span> i*k-mp[j];</span><br><span class="line">        (j*=s)%=p;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CRT"><a href="#CRT" class="headerlink" title="CRT"></a>CRT</h3><h4 id="CRT-1"><a href="#CRT-1" class="headerlink" title="CRT"></a>CRT</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">int</span> <span class="title">CRT</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> M=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;++i) cin&gt;&gt;a[i]&gt;&gt;b[i],M*=a[i];</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;++i)</span><br><span class="line">    &#123;</span><br><span class="line">        m[i]=M/a[i];</span><br><span class="line">        <span class="built_in">exgcd</span>(m[i],a[i],d,x,y);</span><br><span class="line">        ans=((ans+m[i]*x*b[i])%M+M)%M;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="EXCRT"><a href="#EXCRT" class="headerlink" title="EXCRT"></a>EXCRT</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">int</span> <span class="title">EXCRT</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin&gt;&gt;lcm&gt;&gt;ans;</span><br><span class="line">    ans=(ans%lcm+lcm)%lcm;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">2</span>;i&lt;=n;++i)</span><br><span class="line">    &#123;</span><br><span class="line">        cin&gt;&gt;a&gt;&gt;b;</span><br><span class="line">        b=(b-ans%a+a)%a;</span><br><span class="line">        <span class="built_in">exgcd</span>(lcm,a,d,x,y);</span><br><span class="line">        <span class="type">int</span> k=x*(b/d)%a;</span><br><span class="line">        ans+=k*lcm;</span><br><span class="line">        lcm=lcm/d*a;</span><br><span class="line">        ans=(ans%lcm+lcm)%lcm;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="逆元递推"><a href="#逆元递推" class="headerlink" title="逆元递推"></a>逆元递推</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">pre</span><span class="params">(<span class="type">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    inv[<span class="number">1</span>]=jcinv[<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">2</span>;i&lt;=n;++i) inv[i]=(mod-mod/i)*inv[mod%i]%mod;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">2</span>;i&lt;=n;++i) jcinv[i]=jcinv[i<span class="number">-1</span>]*inv[i]%mod;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Lucas定理"><a href="#Lucas定理" class="headerlink" title="Lucas定理"></a>Lucas定理</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">int</span> <span class="title">C</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> jc[x]*jcinv[y]*jcinv[x-y]%mod;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">Lucas</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x&lt;y) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(x&lt;mod) <span class="keyword">return</span> <span class="built_in">C</span>(x,y);</span><br><span class="line">    <span class="keyword">return</span>  <span class="built_in">Lucas</span>(x/mod,y/mod)*<span class="built_in">Lucas</span>(x%mod,y%mod)%mod;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="数论分块"><a href="#数论分块" class="headerlink" title="数论分块"></a>数论分块</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">int</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> l=<span class="number">1</span>,r;l&lt;=n;l=r+<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        r=n/(n/l);</span><br><span class="line">        ans+=(k/l)*(r-l+<span class="number">1</span>)*(l+r)/<span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="高斯消元"><a href="#高斯消元" class="headerlink" title="高斯消元"></a>高斯消元</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">int</span> <span class="title">gauss</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> c=<span class="number">1</span>,r=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(;c&lt;=n;++c)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> t=r;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> i=r+<span class="number">1</span>;i&lt;=n;++i)<span class="keyword">if</span>(<span class="built_in">fabs</span>(a[i][c])&gt;<span class="built_in">fabs</span>(a[t][c])) t=i;</span><br><span class="line">            <span class="keyword">if</span>(<span class="built_in">fabs</span>(a[t][c])&lt;eps) <span class="keyword">continue</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> i=c;i&lt;=n+<span class="number">1</span>;++i) <span class="built_in">swap</span>(a[t][i],a[r][i]);</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> i=n+<span class="number">1</span>;i&gt;=c;--i) a[r][i]/=a[r][c];</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> i=r+<span class="number">1</span>;i&lt;=n;++i)</span><br><span class="line">                <span class="keyword">for</span>(<span class="type">int</span> j=n+<span class="number">1</span>;j&gt;=c;--j) a[i][j]-=a[r][j]*a[i][c];</span><br><span class="line">            r++;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="keyword">if</span>(r&lt;=n)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=r;i&lt;=n;++i)<span class="keyword">if</span>(<span class="built_in">fabs</span>(a[i][n+<span class="number">1</span>])&gt;eps) <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=n<span class="number">-1</span>;i;--i)</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> j=i+<span class="number">1</span>;j&lt;=n;++j)a[i][n+<span class="number">1</span>]-=a[i][j]*a[j][n+<span class="number">1</span>];</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><h3 id="快读快写"><a href="#快读快写" class="headerlink" title="快读快写"></a>快读快写</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">int</span> <span class="title">read</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;<span class="type">char</span> c=<span class="built_in">getchar</span>();</span><br><span class="line">    <span class="keyword">while</span>(!<span class="built_in">isdigit</span>(c))&#123;<span class="keyword">if</span>(c==<span class="string">&#x27;-&#x27;</span>) f=<span class="number">-1</span>;c=<span class="built_in">getchar</span>();&#125;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">isdigit</span>(c)) x=(x&lt;&lt;<span class="number">3</span>)+(x&lt;&lt;<span class="number">1</span>)+c<span class="number">-48</span>,c=<span class="built_in">getchar</span>();</span><br><span class="line">    <span class="keyword">return</span> x*f;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">write</span><span class="params">(<span class="type">int</span> x)</span> </span>&#123;</span><br><span class="line">    <span class="type">static</span> <span class="type">int</span> sta[<span class="number">35</span>],top=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(x&lt;<span class="number">0</span>)x=-x,<span class="built_in">putchar</span>(<span class="string">&#x27;-&#x27;</span>);</span><br><span class="line">    <span class="keyword">do</span> &#123;</span><br><span class="line">        sta[top++]=x%<span class="number">10</span>,x/=<span class="number">10</span>;</span><br><span class="line">    &#125;<span class="keyword">while</span>(x);</span><br><span class="line">    <span class="keyword">while</span>(top) <span class="built_in">putchar</span>(sta[--top]+<span class="number">48</span>); </span><br><span class="line">    <span class="built_in">putchar</span>(<span class="string">&#x27;\n&#x27;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="数据生成和对拍"><a href="#数据生成和对拍" class="headerlink" title="数据生成和对拍"></a>数据生成和对拍</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//生成n个1e9以内的数 </span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> mod1=<span class="number">1e6</span><span class="number">-1</span>,mod2=<span class="number">1e9</span><span class="number">-1</span>;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">srand</span>(<span class="built_in">time</span>(<span class="number">0</span>));</span><br><span class="line">    <span class="type">int</span> n=<span class="built_in">rand</span>()%mod1;</span><br><span class="line">    cout&lt;&lt;n&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;++i) cout&lt;&lt;<span class="built_in">pow</span>(<span class="number">-1</span>, <span class="built_in">rand</span>())*(<span class="built_in">rand</span>()*<span class="built_in">rand</span>()%mod2)&lt;&lt; <span class="string">&quot; &quot;</span>;<span class="comment">//负数 </span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;++i) cout&lt;&lt;<span class="built_in">rand</span>()*<span class="built_in">rand</span>()%mod2&lt;&lt; <span class="string">&quot; &quot;</span>;<span class="comment">//正数 </span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;windows.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> t=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(++t) &#123;</span><br><span class="line">        <span class="built_in">system</span>(<span class="string">&quot;data.exe &gt; data.txt&quot;</span>);</span><br><span class="line">        <span class="type">int</span> t1=<span class="built_in">clock</span>();</span><br><span class="line">        <span class="built_in">system</span>(<span class="string">&quot;1.exe &lt; data.txt &gt; 1.txt&quot;</span>);</span><br><span class="line">        <span class="type">int</span> t2=<span class="built_in">clock</span>();</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;测试点%d 用时%dms\n&quot;</span>,t,t2-t1);</span><br><span class="line">        <span class="keyword">if</span>(t2-t1&gt;<span class="number">1000</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;超时！&quot;</span>);</span><br><span class="line">            <span class="type">char</span> c=<span class="built_in">getchar</span>();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">system</span>(<span class="string">&quot;2.exe &lt; data.txt &gt; 2.txt&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">system</span>(<span class="string">&quot;fc 1.txt 2.txt&quot;</span>))    <span class="type">char</span> c=<span class="built_in">getchar</span>();   </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="悬线法"><a href="#悬线法" class="headerlink" title="悬线法"></a>悬线法</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">1e3</span>+<span class="number">5</span>;</span><br><span class="line"><span class="type">int</span> a[N][N];</span><br><span class="line"><span class="type">int</span> n,m,ans;</span><br><span class="line"><span class="type">char</span> c;</span><br><span class="line"><span class="type">int</span> l[N][N],r[N][N],up[N][N];</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">cin.<span class="built_in">tie</span>(<span class="number">0</span>);cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">cin&gt;&gt;n&gt;&gt;m;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;++i)</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;=m;++j)</span><br><span class="line">cin&gt;&gt;c,a[i][j]=c==<span class="string">&#x27;F&#x27;</span>,l[i][j]=r[i][j]=j,up[i][j]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;++i)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">2</span>;j&lt;=m;++j)</span><br><span class="line"><span class="keyword">if</span>(a[i][j]&amp;&amp;a[i][j<span class="number">-1</span>]) l[i][j]=l[i][j<span class="number">-1</span>];</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j=m<span class="number">-1</span>;j;--j)</span><br><span class="line"><span class="keyword">if</span>(a[i][j]&amp;&amp;a[i][j+<span class="number">1</span>]) r[i][j]=r[i][j+<span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;++i)</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;=m;++j)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(i&gt;<span class="number">1</span>&amp;&amp;a[i][j]&amp;&amp;a[i<span class="number">-1</span>][j])</span><br><span class="line">&#123;</span><br><span class="line">l[i][j]=<span class="built_in">max</span>(l[i][j],l[i<span class="number">-1</span>][j]);</span><br><span class="line">r[i][j]=<span class="built_in">min</span>(r[i][j],r[i<span class="number">-1</span>][j]);</span><br><span class="line">up[i][j]=up[i<span class="number">-1</span>][j]+<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(a[i][j]) ans=<span class="built_in">max</span>(ans,(r[i][j]-l[i][j]+<span class="number">1</span>)*up[i][j]);</span><br><span class="line">&#125;</span><br><span class="line">cout&lt;&lt;ans;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="模拟退火"><a href="#模拟退火" class="headerlink" title="模拟退火"></a>模拟退火</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">double</span> ans=<span class="number">1e18</span>,ansx,ansy,x,y,t;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="type">const</span> <span class="type">double</span> bl=<span class="number">0.999</span>;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">node</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> x,y,w;</span><br><span class="line">&#125;a[<span class="number">1005</span>];</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">double</span> <span class="title">energy</span><span class="params">(<span class="type">double</span> x,<span class="type">double</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">double</span> rt=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(re <span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;++i)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">double</span> xx=x-a[i].x,yy=y-a[i].y;</span><br><span class="line">rt+=<span class="built_in">sqrt</span>(xx*xx+yy*yy)*a[i].w;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> rt;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">SA</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">double</span> x=ansx,y=ansy;</span><br><span class="line">t=<span class="number">20000</span>;</span><br><span class="line"><span class="keyword">while</span>(t&gt;<span class="number">1e-15</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">double</span> xx=x+((<span class="built_in">rand</span>()&lt;&lt;<span class="number">1</span>)-RAND_MAX)*t;</span><br><span class="line"><span class="type">double</span> yy=y+((<span class="built_in">rand</span>()&lt;&lt;<span class="number">1</span>)-RAND_MAX)*t;</span><br><span class="line"><span class="type">double</span> now=<span class="built_in">energy</span>(xx,yy);</span><br><span class="line"><span class="type">double</span> k=now-ans;</span><br><span class="line"><span class="keyword">if</span>(k&lt;<span class="number">0</span>)ansx=x=xx,ansy=y=yy,ans=now;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(<span class="built_in">exp</span>(-k/t)*RAND_MAX&gt;<span class="built_in">rand</span>()) x=xx,y=yy;</span><br><span class="line">t*=bl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">srand</span>(<span class="built_in">time</span>(<span class="number">0</span>));</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line"><span class="type">int</span> sumx=<span class="number">0</span>,sumy=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(re <span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;++i)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d %d %d&quot;</span>,&amp;a[i].x,&amp;a[i].y,&amp;a[i].w);</span><br><span class="line">sumx+=a[i].x,sumy+=a[i].y;</span><br><span class="line">&#125;</span><br><span class="line">ansx=(<span class="type">double</span>)sumx/n,ansy=(<span class="type">double</span>)sumy/n;</span><br><span class="line"><span class="built_in">SA</span>();</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%.3f %.3f\n&quot;</span>,ansx,ansy);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> OI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 模板 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>追番记录</title>
      <link href="//%E7%94%9F%E6%B4%BB/%E8%BF%BD%E7%95%AA%E8%AE%B0%E5%BD%95/"/>
      <url>//%E7%94%9F%E6%B4%BB/%E8%BF%BD%E7%95%AA%E8%AE%B0%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="再想想" data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="af794047ade5eb74511d96cab75f9f13dfcae709188160f39909c64767f0e40e">21ed227fb6bfe8caeceaa5bac3b0ca549abab7d9fb0f19fc34ecebffae7c1700ed601d4223202049c68b2a0f04f7ba01a98fc3a7fb4a2c33cfd7636b9fff4e85a9c8f410cdf1f915f223ac58f1b0097a56564bc5e4549e4ce739762b948a2e82537db0229fee6d95a85727fa420f3b67b8e9cef16e8c843a432aeefd1327fe940677ae126bd9dd86b2d248a528787579646a1360b5e920ed5ccc0cb76955da7c914d5b7031ed612c9a29279c9d84bcaea99e6b11e4e8fc0d24ab89d601b4ff62370291cb720f48aa049cda3a127a9e4f146e227df39584d9eb88b4d0303b12bf5cd11f3e5fd9f67eea9a43144f14811d2ca053c1046636cf6c3fd343ababf68a6027b0f8a3d28077b757127eef585b3397434fae36d15ebb5b2f9f778a1b179d534934d250e9175dc8ebd71ef1f1178ddcb2f46b6740f64b1beb198c27900faf57c497612f7366fdcf17a739f51d7a4f2a2492982b5c77ca6a6f595d3df7f1cbf4efb8c7df3d75b346bb58eab7abb5437dfc13e26c2c135b384651bdce6e5ca95325ed9e6456c882684d81e6a7017594cf4cf1bf7781573c029730fa1ec6eee1bd998835b1ce8449f895aae84d1230f48ccdd73b1d98b90c2a177a2aec2e5837979c05f19ccef9737e44828d7545e479e20ae73367fb278cdc7c71f9bf7d5dc80a6dfed9696aefb689e2fa471012ba5e24c49f44be6b3fc6c5431ffd009c9f4838ce282c78b2feee565b485baf82c4de34eef869888a176c7a7c7d296b7baae185fc839a774f599f497fd16da4cdca098f3fac92aaa893baee4404f0a8cfb70181091bfb6b3d784cd04781b92cb9c3bb140c8c25557436b291e61b5f8ab224db0ce6174b81e49ef990a771048c9ad066da60bc943f49b8b88a21e8db83edc2c3d3a855fcc5dbd07188a91f5dc559458106f894f133991c94b30a0ade5ca132d863217aee2e83a97815e2f4b6761c0a03f843321f280238383beefbcfc90014a4c2381f0b61c76b8de1934546e076cb225d322ff4f8a492d2a41a0c61b1027dba29477a77d8040f53236dc5b94135694afdba0fd2f0555ea8ecadb407bbe614ba680b9942f5e54051c94fa4860178e4335d769379a466c3c04309d9bb6a9ddcca16c7aef4e72c1e90ad8d691eddc20e1c4b3b6e972d9323fe64f595ab8df9a531659352a1c76d640c47dbd6f4cc1bfeabef334181825bb77ca7a43e13e92f4621ef463ab9aa5cdc3b0b61d6a5e3497d2f4658d3518d3b45df1333ed660709e22c7b42493617729dcd3d5763f3b3c9bdba36890997894c772b1d3eb18927a2ce058bf2fac527dd7dbf1761d6dc25a6a818b7533af94506c1da1709b08bdd55127f2d3f8cfd098b637ed57ab490dbd691d397589d1aaee6978a56fc6e53111296b26c5a492c6da9bdb1f92ed4ee0a225123f2fe3d39387493d6d769a3dfd3e56d0c80dd0a3feb6a0dd7893061da1e532b42b0f793e68a26b95cf349a82b83d148739824ed194647cd6ed14afec3c6bdb70f0ec095549c4e89d5247e82f70d126acdf0945a1b0dfaaefb3817c07f071ff81b00a54fb17ac709d3f45b1a001bd4165b138e8b568c8bf822ede652ed01979ce5b7b7825be439439b44af759dd622b537029174b40ef4438ba9357e1bb318851a40428f60e150080c84c9fdc33482abd7e2f5d2c0bb41d7444312dc4be513cb08bd2b51e5c6d0363f113a7d9dc3def982bc68f1f40a86ea523b8aff9b45a5175d86db793f92209c873f13e51380c28f32a2ab9e22903d0e1ec5bee649fa8de9ba9cd11c1e858dddd0fc0d65f5698cdd2bff2d461cb9e5370a44205a23da595a2f1a5c5533915e0b6c0a3c2e42f58b25d2b1ebca8e54b3658ca0d18f5ab7bc3734f01080b4f3ed64aa09d4456cc1c498a615ac828e1454e0be2b10baae87d58146878535d5e053918c2b07f9994deebe02d76aac6186f9e564ab87f8be2b703cb7497fe76f7fb48011fcd91b27681738c81d55b9829928fe5e79994f6631f67a98b31b9e33e094d8abdbb9d7b3ba9cb081eb670d0ea98dfd58200d45a6c28d1818572d48f18ea1df11626d3b8855a24465c504daa459b48174bee36701628df035169dc9689026c54da748c8d2230d8b534fb918a4d3b1d6997bcba6b69ff1fbc2019626bea52d57d556bec11fa5b9a708e6ceef10dbd23e16eede69993ae4a20719676cf3b70eb1ad721c1acb6b97ae5debfb4f93adb715b618a82b1eabff567a19e1ff4a40f05925f97215ab6adc0dc8a5418a0f6ef7786be2c6dfd7878a8ceb2da5851805b85516363ec1507e84988b3691f6781d45a2a07b88c99484d46b32988c7244bb21cfc072e0c6982816370f61c4cc49fb5843039a0a997ece267b10a3a970680a9b2827bd6d77cdc723f6ed394359836e7a5cbfa85c7fb11cb605e75ea82b7b2fa359900c8da465248ce9e912b4d885dbe7278a1ee926722637a733436a78ac2ffc83b27bf87366b33c67ebacb5f1ade7bb165cb0cebe3c7ad6406832944a904b7097a2b24d6f4ac01761a24e2e1e7d8c7d5568457df16b529aa54a57b7c7906b7f6ed41cd727c8a99f9e0af5ce10847704a588df4f7146fe3347f43291631e620e30e07724a89eca35beae593c026f5c4e774f5181bc0da4bb006ebb8444248d2a966459d6de3175a32e11c5399c9ac61e16ec389191337ae4af54aed10e026185fdb3e37f65bd05cfc85807cf77ad7f92f66ab37e7e9142f743837984163372e7ad03105c5ccfa3a742762e2f5e6f58f5f91c66b6470ac163119002211ae2ef7ba91576f93e0da32e15717384d7cfeb35bd313dcf2e5c6dd534ddc362d0a565b001ea0311e3a24c801d4762c2f9e7fdf41e28f542bbae83c8f43d7118fb39d6d5b1fb06543cf123ac5dd9712833e8f847fcf8e23d246a3dd17a46640f7ef1126ce6d05a9cc5c5322457f935f340c76b7fbf8346efb4380efba6f5ae931927f2332ae540ee3772afa8894ae298cc2260ceaffaa01169e115815fae367b0249f375c32696f3fef27713fe02fb0f8110ead32a4f9e083fff93ddf50ae7696067d714934a4d3fe81c93335416c2311665e5d33654afa8943831e4883e52f24f9ed1e6a7b29083a7a93a4677e3b00e049a9052f341b0034d1af88348add9cc9c188a4c5fba299c4eb1a94c6f829239a28f9e48c81aad1c1ec845ee2a6fb0c440ee6646c6731dce44504be5ac41e262d445f978d45a3194ed794e2dc613d03043504ef067087fff8bc5eadf90852b199bb7a624a95d19f616581031d89ec6c07588d6e0c7ef098ae23090dc1cf38ceed1b15a70e04b7a37cb042db0cf22dcc7db24258fb90a98c890862345dcc85deaea6f1ac78e9a836c6ec7c0f853209dbd7b7c97f5953fba96477c0dc0c47cfa1008c93c1366ec789e3a57e3aec51f2459b741fc981a049bd1d373b438cadb42323ecd29f8abab9113ead5cf422bb3719eedca0dbf50efaba60c91dc0b681cc938490270f78db7e46e6a5ebe8ca67d7c32b23ac2d6388ba4f58c9b1805665977950a3ac521315cb734885dd36239f5</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">nchの大好きな番</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 生活 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 番 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSP2022游记</title>
      <link href="//%E6%B8%B8%E8%AE%B0/CSP2022%E6%B8%B8%E8%AE%B0/"/>
      <url>//%E6%B8%B8%E8%AE%B0/CSP2022%E6%B8%B8%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h4 id="Day"><a href="#Day" class="headerlink" title="Day -???"></a>Day -???</h4><p>开学了，作业没写完，寄了</p><h4 id="Day-1"><a href="#Day-1" class="headerlink" title="Day -??"></a>Day -??</h4><p>报名了</p><p><code>money-=50,RP++</code></p><p><code>money-=50,RP++</code></p><h4 id="Day-42"><a href="#Day-42" class="headerlink" title="Day-42"></a>Day-42</h4><p>初赛改线上了,寄了</p><h4 id="Day-35"><a href="#Day-35" class="headerlink" title="Day-35"></a>Day-35</h4><p>初赛模拟题炸了</p><p>真题炸了</p><p>AFO</p><h4 id="Day-41"><a href="#Day-41" class="headerlink" title="Day-41"></a>Day-41</h4><p>复赛推迟了，明天初赛不一定能过，直接给大家表演原地退役</p><p><code>AFO</code></p><p>怎么办<code>QwQ</code>怎么办<code>QwQ</code>怎么办<code>QwQ</code>怎么办<code>QwQ</code>怎么办<code>QwQ</code>怎么办<code>QwQ</code>怎么办<code>QwQ</code>怎么办<code>QwQ</code>怎么办<code>QwQ</code>怎么办<code>QwQ</code>怎么办<code>QwQ</code>怎么办<code>QwQ</code>怎么办<code>QwQ</code>怎么办<code>QwQ</code>怎么办<code>QwQ</code>怎么办<code>QwQ</code>怎么办<code>QwQ</code>怎么办<code>QwQ</code>怎么办<code>QwQ</code>怎么办<code>QwQ</code>怎么办<code>QwQ</code>怎么办<code>QwQ</code>怎么办<code>QwQ</code>怎么办<code>QwQ</code>怎么办<code>QwQ</code>怎么办<code>QwQ</code>怎么办<code>QwQ</code>怎么办<code>QwQ</code>怎么办<code>QwQ</code>怎么办<code>QwQ</code></p><p><del>开始魔怔</del></p><h4 id="Day-40"><a href="#Day-40" class="headerlink" title="Day-40"></a>Day-40</h4><p>早上吃了袋泡面，RP++，然后迟到了</p><p>然后看到了<code>DCOI F4---one hui baoling zxh qh</code>，想起了当年的火锅</p><p>在C309候场，感觉回到初一当时什么都不会的时候</p><p>9:30开考pj，旁边坐的是初二的小朋友，tnnd，为什么现在初二这么强</p><p>T1考OOP，直接开蒙</p><p>10分钟做完了选择题</p><p>阅读程序T1弱智位运算，然后我把8的二进制当成了<code>100</code>,手玩半小时没结果，直接转T2</p><p>T2sbDP,(出考场后发现是鸡蛋的硬度，<code>cyq</code>那sb还做了PPT)，直接跳T3</p><p>T3 二分，几分钟水过了</p><p>T4 T5 都很水，但答案足够迷惑<code>ABCDA ABCDA</code></p><p>不管他，继续切T1</p><p>距考试结束还有半小时时，手算的第7遍终于找到问题，把T1切了</p><p>T2开蒙</p><p>脑子里一直循环播放<code>光るなら</code></p><p>雪乃太可爱了</p><p>12:30</p><p>中午干了饭回来看到<code>bao ling</code>哥在和一群信息学老师工作完吃盒饭，%%%</p><p>13:00</p><p>对答案，结果因为不懂<code>double</code>语法，暴扣4.5pts</p><p>估分83pts</p><p>cyq有点悬，估分71pts</p><p>13:40</p><p>一群巨佬到达战场，等被锤爆</p><p>大家看起来都很紧张，寄</p><p>14:20</p><p>在考场练习静坐，旁边腾讯会议里不知哪个学校一直在吵，DC还挺有素质的</p><p>机房除此之外一片死寂</p><p>这么会有一个摄像头怼着我拍啊</p><p>14:30</p><p>开考，</p><p>T1 计算机基础知识，蒙</p><p>T2 继续蒙</p><p>T5 出题人估计受了宇宙射线影响</p><p>T6 又是计算机基础知识</p><p>T7 手算大模拟</p><p>T9 迷惑</p><p>T10 出题人应该重学语文</p><p>T13 <code>j=0,j*=2</code>可海星,<del>大概是变异了吧</del></p><p>阅读程序 T1长得像KMP的Sunday算法（还是长得像Sunday的KMP‘算法）<del>估计是变异了</del></p><p>T2 智慧鸡排，所以计数和桶排有什么区别</p><p>T3 考察负数取模，log负数 <del>似乎确凿是变异了</del></p><p>建议出题人重学<code>O( )</code></p><p>完善程序</p><p>T1 归并第K大，写法挺骚</p><p>T2 送分dfs</p><p>感觉要寄</p><h4 id="Day-39"><a href="#Day-39" class="headerlink" title="Day-39"></a>Day-39</h4><p><code>luogu</code>上估了分，86pts</p><p><code>cyq</code>感觉<del>又</del>寄了，57.5pts</p><p>挺危险的 </p><h4 id="Day-38-Day-32"><a href="#Day-38-Day-32" class="headerlink" title="Day-38~Day-32"></a>Day-38~Day-32</h4><p>whk乱寄</p><h4 id="Day-31"><a href="#Day-31" class="headerlink" title="Day-31"></a>Day-31</h4><p>本来说今天出分，结果网炸了，€€£就不能不能换个好点的服务器吗，氧化钙</p><h4 id="Day-30"><a href="#Day-30" class="headerlink" title="Day-30"></a>Day-30</h4><p>查到分了 JS都83pts</p><p><code>cyq</code>挺危险55pts</p><p>担心了一天</p><p>晚上语文课上完用教室电脑查了下</p><p><code>cyq</code>卡线过，全班就看着几个痴呆发疯</p><h4 id="Day-29"><a href="#Day-29" class="headerlink" title="Day-29"></a>Day-29</h4><p>艹，€€£怎么不去抢，S组报名费480，J组260，tnnd</p><p>不想考了，艹</p><h4 id="Day-15"><a href="#Day-15" class="headerlink" title="Day-15"></a>Day-15</h4><p>md，还是报了名</p><p>money-=740</p><h4 id="Day-6"><a href="#Day-6" class="headerlink" title="Day-6"></a>Day-6</h4><p>月考喜提rank n</p><p>被全班吊打</p><p>被班主任拿退竞威胁</p><p><del>sb dog（班主任外号）</del></p><h4 id="Day0"><a href="#Day0" class="headerlink" title="Day0"></a>Day0</h4><p>在机房里颓，背了背对拍（虽然S组没用上）</p><p>颓废好累啊</p><h4 id="Day0-5"><a href="#Day0-5" class="headerlink" title="Day0.5"></a>Day0.5</h4><p>考J组</p><p><del>为什么不能带零食进考场啊</del></p><p>T1 一眼看出要特判，水题</p><p>写了对拍拍上，心情愉悦</p><p>T2 本想枚举因数，被$n&lt;=10^{18}$的数据范围吓退</p><p>一分钟后发现是韦达定理，切了</p><p>T3 一眼过去字符串 再看*?~&amp;%$#&amp;^</p><p>发现不可做，先开T4</p><p>T4 一眼DP，十五分钟写了个$O(n^{2}k)$的，调调过了大样例</p><p>此时9点40</p><p>回来开T3</p><p>接着就是<del>一顿乱搞</del>，有条理的递归，<del>话说怎么调了一个半小时</del></p><p>感觉T3会挂，不想改了，开始乱搞</p><p>为了锻炼码力写了一遍树剖，<del>虽然后来发现有锅</del></p><p>果断开始睡觉，差点被<code>one hui</code>抓住</p><p>期望得分：100+100+50+100=350pts</p><h4 id="Day-1"><a href="#Day-1" class="headerlink" title="Day 1"></a>Day 1</h4><p>14:00 进考场开始罚坐</p><p>14:26 密码belief2022</p><p>然后看T1，神秘图论，看了5分钟没思路</p><p>顺手写了个快读快写</p><p>又看T2，游戏？博弈论？矩阵？果断放弃</p><p>T3，图论，题目描述有点长，不想看</p><p>T4似乎是一个树上问题，看起来似乎比较可做（后来发现可做个gui）<del>话说怎么又是图论，今年没DP吗</del></p><p>回来继续看T1，想了个$O(n^{4})$的算法，看起来$n=300$的数据都跑不过，不想打</p><p>此时旁边myzx的巨佬在草稿纸上奋笔疾书，害怕ing</p><p>打了个dijkstra<del>为什么不打bfs</del></p><p>此时已经过去40分钟，决定先开T2</p><p>看了题面和$n&lt;=10^{5}$的数据范围之后，觉得是数据结构</p><p>手玩了几个样例，几分钟后想到用时间$O(nlongn)$的数据结构维护一下区间最大，最小，非负最小，非正最大就行了（话说这题为什么暴力分有60pts啊）</p><p>想到8个ST的码量和空间，决定打线段树，二十分钟打完，过了第一个样例</p><p>改改过了第二个样例，第三个样例一拍，错了一车</p><p>接着改改改，半小时发现把v2，v3记反了，一发过了大样例，跑了200+ms</p><p>此时开考一个半小时，去上了个厕所，回来写T3，觉得跟基环树森林有关，但不知道怎么写，写了个$O(qn^{2})$的暴力</p><p>T4不想写lca，把T1的dijkstra复制过来，写了个$O(n^{2}logn)$的暴力</p><p>继续写T1，脑抽加上全排列写了个$O(4!×n^{4})$的暴力 <del>话说这次只会暴力</del></p><p>此时5点钟，估摸着不挂分有200+pts了，准备写部分分</p><p>先看T1，发现$k=0$的情况似乎一样不可做，先弃了</p><p>再看T3，不知道没有2，4操作对暴力有什么用，弃了</p><p>最后看T4，这个k=1时感觉可做，写了个lca，又拆点，<del>但午饭没吃饱好饿啊</del></p><p>运行程序突然发现死循环，手玩一下发现建成图了，艹，果断放弃</p><p>练习罚坐和检查文件（饿的要死）</p><p>期望得分：40pts+100pts+40pts+44pts=224pts</p><p>出来之后看luogu群发现一车人做出T1T2，250+pts</p><p>自闭了</p><h4 id="Day-2"><a href="#Day-2" class="headerlink" title="Day 2"></a>Day 2</h4><p>小图灵上查分，J组AK了</p><p>从luogu群里找到SC代码</p><p>在luogu上测J组AK了，不知道主函数不打<code>return 0</code>会不会RE,S组T3无数据，T4挂了12pts</p><p>T1应该在$n&gt;=90$时输出前4大的和的，应该能骗分，可惜了</p><p>在infoj上测没挂分，感觉数据很温柔</p><p>希望€€￡数据水一点</p><h4 id="Day-3"><a href="#Day-3" class="headerlink" title="Day 3"></a>Day 3</h4><p>回学校机房，因为whk被教练约谈了</p><p>luogu S组T3数据造出来了 没挂分</p><p>期望得分:224-12=212pts</p><p>求老天给个七级勾</p><h4 id="Day-4"><a href="#Day-4" class="headerlink" title="Day 4"></a>Day 4</h4><p>infoj把SC全省代码拿来跑了一下，224pts，rk77</p><p>1= 在180~190pts左右</p><p>本来还觉得考得好，<del>好个鬼</del></p><p>等€€￡出成绩吧</p><p>附：<a href="https://nich666.github.io/files/2022%20CSP-S2.pdf">S组题目</a></p>]]></content>
      
      
      <categories>
          
          <category> 游记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 游记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>此文已隐藏</title>
      <link href="//uncategorized/End/"/>
      <url>//uncategorized/End/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="此文已隐藏" data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="f88c9501b5190ba1eb51615984e1de98ccd93e196cca1d5089dbe55b3287103d"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">此文已隐藏</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>master定理</title>
      <link href="//OI/master%E5%AE%9A%E7%90%86/"/>
      <url>//OI/master%E5%AE%9A%E7%90%86/</url>
      
        <content type="html"><![CDATA[<p>初赛模拟错了个题，就来学一下,<del>以下内容大部分是复制的</del></p><span id="more"></span><h2 id="一-符号"><a href="#一-符号" class="headerlink" title="一.符号"></a>一.符号</h2><p>在介绍master定理前，我们需要介绍几个符号：</p><p>$T(n)$表示时间复杂度，我们可以这么表示时间复杂度：</p><p>$T(n)=$下面的任意一个符号(一个单项式)。</p><p>$Θ$，读音：<code>theta</code>，等于的意思。</p><p>$O$，读音：<code>big-oh</code>，小于等于的意思。</p><p>$o$，读音：<code>small-oh</code>，小于的意思。</p><p>$Ω$，读音：<code>big omega</code>，大于等于的意思。</p><p>$ω$，读音：<code>small omega</code>，大于的意思。</p><h2 id="二-master定理"><a href="#二-master定理" class="headerlink" title="二.master定理"></a>二.master定理</h2><p>现在我们介绍一个定理，它的名字叫<code>master</code>定理，又名主定理，它的内容是这样的：我们将一个规模为$n$的问题，通过分治得到$a$个规模为$\frac{n}{b}$的子问题，每次递归带来的额外计算为$f(n)$，那么我们得到以下关系式：</p><p>$T(n)=aT(\frac{n}{b})+f(n)$</p><p>此外，我们定义一个$c_{crit}$，它是这么计算的：</p><p>$c_{crit}=log_ba$</p><p>那么存在以下关系：</p><h3 id="1"><a href="#1" class="headerlink" title="1."></a>1.</h3><h4 id="当-f-n-O-n-c-，且-c-lt-c-crit-时-T-n-Theta-n-c-crit"><a href="#当-f-n-O-n-c-，且-c-lt-c-crit-时-T-n-Theta-n-c-crit" class="headerlink" title="当$f(n)=O(n^c)$，且$c&lt;c_{crit}$时$   \ \      $$T(n)$=$\Theta(n^{c_{crit}})$"></a>当$f(n)=O(n^c)$，且$c&lt;c_{crit}$时$   \ \      $$T(n)$=$\Theta(n^{c_{crit}})$</h4><h4 id="eg"><a href="#eg" class="headerlink" title="eg."></a>eg.</h4><p>$T(n)=8T(\frac{n}{2})+1000n^{2}$</p><p>此时,</p><p>$a=8,b=2,f(n)=1000n^{2}$</p><p>所以 $c=2，c_{crit}=log_ba=3&gt;c$</p><p>所以 $T(n)=\Theta(n^{log_ba})=\Theta({n^{3}})$</p><h3 id="2"><a href="#2" class="headerlink" title="2."></a>2.</h3><h4 id="若存在一个非负数-k-，使得-f-n-Theta-n-c-crit-log-k-n-时-T-n-Theta-n-e-crit-log-k-1-n"><a href="#若存在一个非负数-k-，使得-f-n-Theta-n-c-crit-log-k-n-时-T-n-Theta-n-e-crit-log-k-1-n" class="headerlink" title="若存在一个非负数$k$，使得$f(n)=\Theta(n^{c_{crit}}\log^{k}n)$时 $T(n)=\Theta(n^{e_{crit}}log^{k+1}n)$"></a>若存在一个非负数$k$，使得$f(n)=\Theta(n^{c_{crit}}\log^{k}n)$时 $T(n)=\Theta(n^{e_{crit}}log^{k+1}n)$</h4><h4 id="eg-1"><a href="#eg-1" class="headerlink" title="eg."></a>eg.</h4><p>$T(n)=2T(\frac{n}{2})+10n$</p><p>此时</p><p>$a=2,b=2,f(n)=10n$</p><p>$c_{crit}=log_ba=1$</p><p>当$k=0$时</p><p>$f(n)=O(n^{c_{crit}}log^{k}n)$</p><p>所以       $T(n)=\Theta(n^{c_{crit}}\log^{k+1}n)=\Theta(n\log n)$</p><h3 id="2-EX"><a href="#2-EX" class="headerlink" title="2.EX"></a>2.EX</h3><p>当存在一个k，使$f(n)=\Theta(n^{c_{crit}}log^{k}n)$时</p><p>$T(n)=\begin{cases}\Theta(n^{c_{crit}}log^{k+1}n)(k&gt;-1)\\ \Theta(n^{c_{crit}}loglogn) (k=-1)\\ \Theta(n^{c_{crit}}) (k&lt;-1)\end{cases}$</p><h3 id="3"><a href="#3" class="headerlink" title="3."></a>3.</h3><h4 id="当-f-n-Omega-n-c-，且-c-gt-c-crit-时-T-n-Theta-f-n"><a href="#当-f-n-Omega-n-c-，且-c-gt-c-crit-时-T-n-Theta-f-n" class="headerlink" title="当$f(n)=\Omega(n^{c})$，且$c&gt;c_{crit}$时 $T(n)=\Theta(f(n))$"></a>当$f(n)=\Omega(n^{c})$，且$c&gt;c_{crit}$时 $T(n)=\Theta(f(n))$</h4><h4 id="eg-2"><a href="#eg-2" class="headerlink" title="eg."></a>eg.</h4><p>$T(n)=2T(\frac{n}{2})+n^{2}$</p><p>此时</p><p>$a=2，b=2，f(n)=n^{2}$</p><p>当$c$=2时，$f(n)=\Omega(n^{c})$</p><p>又因为    $c_{crit}=log_ba=1&lt;c$</p><p>所以     $T(n)=\Theta(f(n))=\Theta(n^{2})$</p><p>参考证明请转<a href="http://www.doc88.com/p-9761826142176.html">这里</a></p><h2 id="三-eg"><a href="#三-eg" class="headerlink" title="三.eg"></a>三.eg</h2><p>好，是时候拿出我的错题了</p><p>$T(n)=9T(\frac{n}{3})+n$</p><p>$T(1)=1$</p><p>$a=9,b=3,f(n)=n,c_{crit}=log_ba=2$</p><p>因为$c=1&lt;c_{crit}$</p><p>所以$T(n)=\Theta(n^{log_ba})=\Theta(n^{2})$</p><h3 id="本文终"><a href="#本文终" class="headerlink" title="本文终"></a>本文终</h3><p>PS:这个$Latex$打死我了，QwQ</p>]]></content>
      
      
      <categories>
          
          <category> OI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 时间复杂度分析 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>日记</title>
      <link href="//%E7%94%9F%E6%B4%BB/%E6%97%A5%E8%AE%B0/"/>
      <url>//%E7%94%9F%E6%B4%BB/%E6%97%A5%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="私の好きなタイプですね" data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="392df24ce34cef6ce36cac174dafd4b98be00ce7d5d00c3f63e78889f1af2dd4">55fc895625cd6e69c527289b6b3cd2b1d9883697b41fde2b0b35c945ecbaaba700da5818082c4bf74fcf446c1196cddfea8725e03589f7e085da3c7193dbdb5caac0ea857c6e1c0d98156c2a682bc87839a292932b7f6fdf80d577e1c232b9bcdec58ab52c9d0682ef1cc1d4697130b48e2ae90842912e982adb6449c4e6b9e9deb98a0f8d320d9338df3cd8660d4b94739fe9bae65576804d2cf949b5f55c6147922cac76dca7709a6816f6100027af7ba032661cd877f4171729a01ab5e4d67b043af04f5ac74cb5e96fb36790c345623d7b4640f151ce4535741e0be24df8c649d7c14d98ca682058e9e20d4b3a366f312419b32df154ad869a10207ecce29e215d183b5b5e77c333476345649e4a20bc6bd1f288544e0e774a2f3cfcd53c96922fec27889534b5a479700cf378a0a289500999c37a17191ad29bc8a1ac4585e722a1322e539d19f6afb7a4671e5851461fc19802bb4874f862dc12c34b4f73e66488bfdeb9ddc2d5fdc8d56944950a37573ecd4f5ec5ae44cc724e5076fc74897ac3a350281623b90d28760c6bfb53c9fc888788a24f18965541945fb78214cef02aef2b721557b1a29ef9d9d83709425edcc7c745953acd61e0f196aef8692ca062d6f4538d131bf8d408122840eadd28e2cf3c6e7bff3fb02dcaea5a1486cba9e7b64d12b6cbe6a70955a917bfeb41d9aee80624e4cf41251adee7c9aedeb5b1256a5a5332412cb4aa7f148e064e80cd9cc52db70cc677d1395f471f0001acbef27fa10a139212e2189e58d946c83757752fb4d8fb7ccaecbfcf6cd548b67d7e51cafa6f1b14f26cdf3a862937368192cbd41f17a203901780cfa642bb1d0d8fae3dae1cdb1c986791b1f9ee99590c331ce7ca5f2f701024bb62e1b21ae60923bb06f99e5161348ed82c6f2d42ae8b587551e84619b0fb64e4d8a3480c359b0b6102dd36a05ce7c6d5b6d1830d0a482c73e4d2d79402bbcdc954f7ab3e95124e2f72281c13b1cc036470b25f0d87933537546067bf4c337fe8aaf6f56a7d2fa510204b37fb7ca46856f587fa9b47a60f3f1a9fd84af921c2e61b4aebadb00f183951a82420173fcbb852ef0ce772cebc7d0932d806d42fbd3f7b496920375060e8b7f42728546505d75ae6ca6eb548e873312e08eb3cec4233e9b114e57ecc9585cb4822bdb77e5eafadbcc412f7facad03f8b056c7fed49cac17b6085f5562ff506015b4cdc742ac052138f13e84a38ea7b0c646461c681565028ae02bb3bac4ac6aaabe0619b87aa39a391d74738e3de092a0833fa0c2e6e69ad2c1886edba9b764e02136bc4656c1a84ba47d1b457fe1f3b3e7c31210fca095f2647620d1f00252303c7c015fc4613b2a3c169a271cd059b1348360ca4af79e4a64f6371a0fe0821570f175eff5593d80af069bd19a34237f56612948f4e70a6a0665c017efaef56633f357f30f347f53e9fdf34f9a7a7dd5e0d07f67aa64d7836926b2ba9c36612cdf1e29008d9ad406797444b511589d8120c3d395cc305152eda48eb9c062c704b4dab448966c409ec84bf989a30de75145e156999cc75330e9227a182d1e6ba8ba87c26eb63cdf0c56396d6d9758d7e7290d0a8cc44b4a67e608d5b139b43167a11e96565c55bbb89e66fe60027327d21fc7f0425eb00f01e9a26b0726065c31ce71c65729a93261a078171c57437914315b4bfa5a46a765f505c531d7d2e9e3817248b204da3ee28827f50d8f840c2ed94f34fec002bbf4626a352394914066a613bf2442cc18746f7b5cf2ba30297380343967334c509eabb4e39d541fb8986a7060b157d830e28c114bba3dc8345457719dc4c70566f8c23cbac8ed8b41387c09c3cdc1cf85ef7b9ce775acd23e78919dce4b8a55c22353128d399dd5a79bfac4e8e0fc45c1874be394f9f7e30e29475f4879cc62c5e360194b49ed78e57ba5619968e8892ed5a9c5c65ad3353d5a3470cbb613f286c60b8b609f505fbe75f89c4510f184da2a009954070566d7742fa65ab9a4e5eaa211e21b9a9f2ec56665be3a261c6349da776b0d195d2347dc38223d99fcdbf6abbdf8015af3bb2843aa10fe28337cd7a507da54acafe322eca388313e72f0ba1c33bafa4de228b7cef74ccc869d3ca5965086cf49961e8dc7afcfe2df7bb4689e201aa68b36f7589c0426694804018acaf9d7ae6ea7d145bfdd39fe88cf73a68fa8f34a80677069ffef212e7df95062ccd2c69185193fa44dc1d110f795d03349b81cd5ec56773bae611cb25d6d3395d408ade4f560fa0b36bf16fa6b3aca38f63da87335754796ed82a85fe21e5036a24e3e3b3a0f63041bddf4ab7aa82271d2252e4ba9ceed961238e1d4887d0128f75b494e62121eea7034a3785999260401cf875021d49addc713e2daa767b3394941ca0c7ccafbbf113a8ca315b18a5797366a3d1c09d928b7284d71f9bb1ad7b3ec7694b73ece323d59ff1b38b4e653a8044abf6e0b3de66c02ea893adb47057282e49fab9552e2ef269fc9e361e47ceab0869aebee30e94f4b7171467401c9db717102999787c7416b41bfcd4eb288b98b796cdaebbcdcd1ce7b5e2eb871bafef8595f2abf78393416e901ed700e3f6705870e9409d92b4b4da924cdaadc1a63c46badbd26b55279aaa1001c15c0f2540e4e733104ae976d729dbd2bb30faf917284b7399d8facdf2556f5da0268816e13eaba96abdb1f9f23f203d073604da742d1eff46494b4067a822fdb83c28a9e89e4d4648f8ceed742a52dfdf8bea9ff6cfb41eb5593e3365d9775ade8772a446468de0253b938bc8f2ecc1799563c145ff9d4b32963a56fb48e464ac0d29b083819997172ce9b6fa16dac8091d4f4fdb09351418d7a34d6e3a8975645f02c1486465ec004d2b7ef788c4e9aa646a6ce2627022a5776443553c966e35d46ab313c3837bff626fda98204ae99de70c74d20f57c36747743eb974fba7a1a70c5fe2710f3912c1ffc20d514a22edf4c34f45157bb4e349fddda5934a58748927b4b384d2a6971762a53d7d50141131876f31114bdb025621cb0c5ee532c45c628cdf4e443fad5f2885e6adb160aa1d89046206a37a1cf32bb0085c0e639ec0e67dbeb45489e4d1ddffcf2ee64addcc35a92cd99a20e26cfe38dd46972f838d91a7fac3c14bcd6eb8dfd8f141c9d4c775d7952627177d1ab5562ccab05b5d68c4a1da184cea5446d59d2a83cfec730ed620250159d4a8c42eafcfa84a3590a8a385ec8cb97f8da743b1112ce5f0af662ebf5f4d3420751ec058e2dc04d245d9dac86e6c28f1a77f0e58a6406a4a9e6658cc0d529d7aecaba25cf58faecc39a2da9e4a73632e545bf0944dda0068ccf6b1c81d03dc63b88a89d0c022714e5d6a553e492bb5b019412816c0a50be4bb132a6e4e2d50bb7774bb178ae8416c42fc0ed76f3db883a9abdfac721049db751c7ada70104ab9ad8615879a7a99c7402f84a0f9f503b0eb04ab3e8bb067ce88789d6101b5cf68eafbd7c3ea4e375674f447fbd0ac9f8257d5acb450c323db4f5087716ca4418120176a707ae85ef45f8a5a8cc0ac190f429b80614e212304cf9daa6202664d6cd26e8f29d54a37e1e6a71b589593b0b4977bf5c1d4a08cfb6e23320d8b82e3bd31d237c4710824d720614f61a3394c56b33ee7db20d9eba98bbf8d90ec4f2d22316f48aaa31721c70cd14642258354a843d2b14d21024f758c6e4ebafe611162dd31abd613cda96a6f7ad91f4151855b40ed2fbcd2810d5579de463aab123dfafac70d6ebd68c4ccab81bfe5ab300a5815141b95d1f8a3b423686ebf7f08765037319d4eaeac6b808f1983dab68c4f1f13714948ae41c7974e7980ef0d5f0a878c7eb707b9b791df7e177362535ab0ac1371d6f82a737df40c9a4da423869e2fbbef7df6cbb441d9f51e4c050e4d4164bb234a13f4d38d58be6a58874b3ea026fb74e3b7922c5bec003587afd20501ade163309c2d798ae1dea4d412ad90478afefe05b40f0e4dc2a25c9930a20f</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">可愛くて、強くて理性的なバカ</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 生活 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据结构(已弃坑)</title>
      <link href="//OI/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
      <url>//OI/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/</url>
      
        <content type="html"><![CDATA[<p>无话可说</p><span id="more"></span><h2 id="1-队列"><a href="#1-队列" class="headerlink" title="1.队列"></a>1.队列</h2><h4 id="1-队列-1"><a href="#1-队列-1" class="headerlink" title="1.队列"></a>1.队列</h4><p><code>队列（queue）</code>是一种具有「先进入队列的元素一定先出队列」性质的表。由于该性质，队列通常也被称为先进先出<code>（first in first out）</code>表，简称<code> FIFO</code> 表。 –<code>OI-wiki</code></p><p>空间比较紧就手写循环队列，不然在$O2$下$STL$大概和手写差不多</p><h3 id="例题1-NOIP2004-提高组-合并果子-加强版"><a href="#例题1-NOIP2004-提高组-合并果子-加强版" class="headerlink" title="例题1.[NOIP2004 提高组] 合并果子 加强版"></a>例题1.<a href="https://www.luogu.com.cn/problem/P6033">[NOIP2004 提高组] 合并果子 加强版</a></h3><p>这道题数据范围相当大，只能用$O(n)$的算法，我们注意到$a_i$$&lt;=$$1e5$,于是可以先桶排，然后我们用贪心策略，每次取出两个最小的值合并，我们用<del>简单的</del>证明可以发现合并的值具有单调性，于是我们可以用一个队列存合并的值</p><details>    <summary>AC Code</summary><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> maxm=<span class="number">1e5</span>+<span class="number">5</span>;</span><br><span class="line"><span class="type">int</span> n,a[maxm];</span><br><span class="line"><span class="type">long</span> <span class="type">long</span> ans;</span><br><span class="line">queue&lt;<span class="type">long</span> <span class="type">long</span>&gt;q1,q2;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">int</span> <span class="title">read</span><span class="params">()</span></span>&#123; </span><br><span class="line"><span class="type">int</span> x=<span class="number">0</span>;<span class="type">char</span> s=<span class="built_in">getchar</span>();</span><br><span class="line"><span class="keyword">while</span>(s&lt;<span class="string">&#x27;0&#x27;</span>||s&gt;<span class="string">&#x27;9&#x27;</span>)&#123;<span class="keyword">if</span>(s==<span class="string">&#x27;-&#x27;</span>)s=<span class="built_in">getchar</span>();&#125;</span><br><span class="line"><span class="keyword">while</span>(s&gt;=<span class="string">&#x27;0&#x27;</span>&amp;&amp;s&lt;=<span class="string">&#x27;9&#x27;</span>)&#123;x=x*<span class="number">10</span>+s-<span class="string">&#x27;0&#x27;</span>;s=<span class="built_in">getchar</span>();&#125;</span><br><span class="line"><span class="keyword">return</span> x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">n=<span class="built_in">read</span>();</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;++i)</span><br><span class="line">&#123;</span><br><span class="line">++a[<span class="built_in">read</span>()];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">1e5</span>;++i)<span class="keyword">while</span>(a[i]) --a[i],q1.<span class="built_in">push</span>(i);</span><br><span class="line"><span class="type">int</span> k,k2;</span><br><span class="line"><span class="keyword">while</span>(--n)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>((!q1.<span class="built_in">empty</span>()&amp;&amp;q1.<span class="built_in">front</span>()&lt;=q2.<span class="built_in">front</span>())||q2.<span class="built_in">empty</span>())</span><br><span class="line">&#123;</span><br><span class="line">k=q1.<span class="built_in">front</span>();</span><br><span class="line">q1.<span class="built_in">pop</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">k=q2.<span class="built_in">front</span>();</span><br><span class="line">q2.<span class="built_in">pop</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>((!q1.<span class="built_in">empty</span>()&amp;&amp;q1.<span class="built_in">front</span>()&lt;=q2.<span class="built_in">front</span>())||q2.<span class="built_in">empty</span>())</span><br><span class="line">&#123;</span><br><span class="line">k2=q1.<span class="built_in">front</span>();</span><br><span class="line">q1.<span class="built_in">pop</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">k2=q2.<span class="built_in">front</span>();</span><br><span class="line">q2.<span class="built_in">pop</span>();</span><br><span class="line">&#125;</span><br><span class="line">ans+=k+k2;</span><br><span class="line">q2.<span class="built_in">push</span>(k+k2);</span><br><span class="line">&#125;</span><br><span class="line">cout&lt;&lt;ans;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></details><h3 id="2-优先队列"><a href="#2-优先队列" class="headerlink" title="2.优先队列"></a>2.优先队列</h3><h3 id="例题2-P2827-NOIP2016-提高组-蚯蚓"><a href="#例题2-P2827-NOIP2016-提高组-蚯蚓" class="headerlink" title="例题2.P2827 [NOIP2016 提高组] 蚯蚓"></a>例题2.<a href="https://www.luogu.com.cn/problem/P2827">P2827 [NOIP2016 提高组] 蚯蚓</a></h3>]]></content>
      
      
      <categories>
          
          <category> OI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据结构 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>随机100题(绿)</title>
      <link href="//OI/%E9%9A%8F%E6%9C%BA100%E9%A2%98/"/>
      <url>//OI/%E9%9A%8F%E6%9C%BA100%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<p>争取CSP前刷完<del>三分之一</del></p><span id="more"></span><p><del>顺便</del>宣传一下我的<a href="https://www.luogu.com.cn/training/216730#information">题单</a></p><h2 id="P2736-USACO3-4-“破锣摇滚”乐队-Raucous-Rockers"><a href="#P2736-USACO3-4-“破锣摇滚”乐队-Raucous-Rockers" class="headerlink" title="P2736 [USACO3.4]“破锣摇滚”乐队 Raucous Rockers"></a><a href="https://www.luogu.com.cn/problem/P2736">P2736 [USACO3.4]“破锣摇滚”乐队 Raucous Rockers</a></h2><p>一道刷过的水题,但因为<del>懒</del>赶时间，我就<del>厚颜无耻</del>地<del>假装·</del>AC了<br>看数据范围<del>和标签</del>，我们可以知道<del>（猜出）</del>这是一道状压DP<del>（搜索）</del>题，然后就几乎是<del>(贺）</del>板子</p><details>    <summary>AC Code</summary><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> k1 k&lt;&lt;1</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> k2 k&lt;&lt;1|1</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> n,t,m,a[<span class="number">25</span>],ans;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> y,<span class="type">int</span> res,<span class="type">int</span> k)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(x==n+<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">ans=<span class="built_in">max</span>(ans,k);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">dfs</span>(x+<span class="number">1</span>,y,res,k);</span><br><span class="line"><span class="keyword">if</span>(res&gt;=a[x])<span class="built_in">dfs</span>(x+<span class="number">1</span>,y,res-a[x],k+<span class="number">1</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(y&lt;m&amp;&amp;t&gt;=a[x]) <span class="built_in">dfs</span>(x+<span class="number">1</span>,y+<span class="number">1</span>,t-a[x],k+<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cin&gt;&gt;n&gt;&gt;t&gt;&gt;m;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;++i) cin&gt;&gt;a[i];</span><br><span class="line"><span class="built_in">dfs</span>(<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">cout&lt;&lt;ans;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></details><h2 id="P4878-USACO05DEC-Layout-G"><a href="#P4878-USACO05DEC-Layout-G" class="headerlink" title="P4878 [USACO05DEC]Layout G"></a><a href="https://www.luogu.com.cn/problem/P4878">P4878 [USACO05DEC]Layout G</a></h2><p>看题<del>和题解</del>，我们可以清楚地知道这是一道差分约束的板子题，然后敲板子<del>（从<a href="https://www.luogu.com.cn/problem/P1993">P1993</a>中拷过来)</del>就结束了<br>注意要加个超级源判断是否联通</p><details>    <summary>AC Code</summary><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> re register</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> n,m;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> maxm=<span class="number">8e4</span>+<span class="number">5</span>;</span><br><span class="line"><span class="type">int</span> to[maxm],ne[maxm],f[maxm],e[maxm],tot=<span class="number">1</span>;</span><br><span class="line"><span class="type">int</span> v[maxm],c[maxm],d[maxm];</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">add</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> y,<span class="type">int</span> z)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    to[++tot]=y,ne[tot]=f[x],f[x]=tot,e[tot]=z;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">int</span> <span class="title">spfa</span><span class="params">(<span class="type">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(c,<span class="number">0</span>,<span class="keyword">sizeof</span> c);</span><br><span class="line">    <span class="built_in">memset</span>(v,<span class="number">0</span>,<span class="keyword">sizeof</span> v);</span><br><span class="line">    <span class="built_in">memset</span>(d,<span class="number">0x3f</span>,<span class="keyword">sizeof</span> d);</span><br><span class="line">    queue&lt;<span class="type">int</span>&gt;q;</span><br><span class="line">    q.<span class="built_in">push</span>(x);</span><br><span class="line">    d[x]=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(!q.<span class="built_in">empty</span>())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> x=q.<span class="built_in">front</span>();</span><br><span class="line">        q.<span class="built_in">pop</span>();</span><br><span class="line">        v[x]=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span>(++c[x]==n+<span class="number">1</span>) <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=f[x],y;i;i=ne[i])</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(d[x]+e[i]&lt;d[y=to[i]])</span><br><span class="line">            &#123;</span><br><span class="line">                d[y]=d[x]+e[i];</span><br><span class="line">                <span class="keyword">if</span>(!v[y]) q.<span class="built_in">push</span>(y),v[y]=<span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(d[n]&gt;<span class="number">1e8</span>) <span class="keyword">return</span> <span class="number">-2</span>;</span><br><span class="line">    <span class="keyword">return</span> d[n];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="number">0</span>);cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="type">int</span> ml,md;</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;ml&gt;&gt;md;</span><br><span class="line">    <span class="type">int</span> x,y,z;</span><br><span class="line">    <span class="keyword">for</span>(re <span class="type">int</span> i=<span class="number">1</span>;i&lt;=ml;++i) cin&gt;&gt;x&gt;&gt;y&gt;&gt;z,<span class="built_in">add</span>(x,y,z);</span><br><span class="line">    <span class="keyword">for</span>(re <span class="type">int</span> i=<span class="number">1</span>;i&lt;=md;++i) cin&gt;&gt;x&gt;&gt;y&gt;&gt;z,<span class="built_in">add</span>(y,x,-z);</span><br><span class="line">    <span class="keyword">for</span>(re <span class="type">int</span> i=<span class="number">1</span>;i&lt;n;++i) <span class="built_in">add</span>(i+<span class="number">1</span>,i,<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">for</span>(re <span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;++i) <span class="built_in">add</span>(<span class="number">0</span>,i,<span class="number">0</span>);</span><br><span class="line">    <span class="type">int</span> sp=<span class="built_in">spfa</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">if</span>(sp&lt;=<span class="number">-1</span>) cout&lt;&lt;sp;</span><br><span class="line">    <span class="keyword">else</span> cout&lt;&lt;<span class="built_in">spfa</span>(<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></details><h2 id="AT2434-JOI-公园-JOI-Park"><a href="#AT2434-JOI-公园-JOI-Park" class="headerlink" title="AT2434 JOI 公园 (JOI Park)"></a><a href="https://www.luogu.com.cn/problem/AT2434">AT2434 JOI 公园 (JOI Park)</a></h2><p>这道题是带有一点模拟性质的最短路，跑<code>dijkstra</code>后将每条边的优先级赋值为更大的点的距离，排序后枚举模拟，注意要换行，不然<code>lj AtCoder</code>会<code>WA</code></p><details>    <summary>AC Code</summary><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> re register</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> mp(a,b) make_pair(a,b)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">int</span> <span class="title">read</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;<span class="type">char</span> c=<span class="built_in">getchar</span>();</span><br><span class="line">    <span class="keyword">while</span>(!<span class="built_in">isdigit</span>(c))&#123;<span class="keyword">if</span>(c==<span class="string">&#x27;-&#x27;</span>) f=<span class="number">-1</span>;c=<span class="built_in">getchar</span>();&#125;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">isdigit</span>(c))&#123;x=(x&lt;&lt;<span class="number">3</span>)+(x&lt;&lt;<span class="number">1</span>)+c<span class="number">-48</span>,c=<span class="built_in">getchar</span>();&#125;</span><br><span class="line">    <span class="keyword">return</span> x*f;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">8e5</span>+<span class="number">5</span>;</span><br><span class="line"><span class="type">int</span> n,m,c;</span><br><span class="line"><span class="type">int</span> head[N],to[N],ne[N],e[N],tot,d[N],v[N],sum;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">edge</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> u,v,e,mx;</span><br><span class="line">    <span class="keyword">inline</span> <span class="type">bool</span> <span class="keyword">operator</span>&lt;(<span class="type">const</span> edge &amp;res)<span class="type">const</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> mx&lt;res.mx;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;ed[N];</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">add</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> y,<span class="type">int</span> z)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    to[++tot]=y,ne[tot]=head[x],e[tot]=z,head[x]=tot;</span><br><span class="line">&#125;</span><br><span class="line">priority_queue&lt;pair&lt;<span class="type">int</span>,<span class="type">int</span>&gt; &gt;q;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">dijkstra</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(re <span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;++i) d[i]=<span class="number">999999999999999</span>;</span><br><span class="line">    d[<span class="number">1</span>]=<span class="number">0</span>;</span><br><span class="line">    q.<span class="built_in">push</span>(<span class="built_in">mp</span>(<span class="number">0</span>,<span class="number">1</span>));</span><br><span class="line">    <span class="keyword">while</span>(!q.<span class="built_in">empty</span>())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> x=q.<span class="built_in">top</span>().second;</span><br><span class="line">        q.<span class="built_in">pop</span>();</span><br><span class="line">        <span class="keyword">if</span>(v[x]) <span class="keyword">continue</span>;</span><br><span class="line">        v[x]=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(re <span class="type">int</span> y,i=head[x];i;i=ne[i])</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(d[y=to[i]]&gt;d[x]+e[i])</span><br><span class="line">            &#123;</span><br><span class="line">                d[y]=d[x]+e[i];</span><br><span class="line">                q.<span class="built_in">push</span>(<span class="built_in">mp</span>(-d[y],y));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    n=<span class="built_in">read</span>(),m=<span class="built_in">read</span>(),c=<span class="built_in">read</span>();</span><br><span class="line">    <span class="keyword">for</span>(re <span class="type">int</span> i=<span class="number">1</span>;i&lt;=m;++i) ed[i]=&#123;<span class="built_in">read</span>(),<span class="built_in">read</span>(),<span class="built_in">read</span>()&#125;,<span class="built_in">add</span>(ed[i].u,ed[i].v,ed[i].e),<span class="built_in">add</span>(ed[i].v,ed[i].u,ed[i].e),sum+=ed[i].e;</span><br><span class="line">    <span class="built_in">dijkstra</span>();</span><br><span class="line">    <span class="keyword">for</span>(re <span class="type">int</span> i=<span class="number">1</span>;i&lt;=m;++i) ed[i].mx=<span class="built_in">max</span>(d[ed[i].u],d[ed[i].v]);</span><br><span class="line">    <span class="built_in">sort</span>(ed+<span class="number">1</span>,ed+m+<span class="number">1</span>);</span><br><span class="line">    <span class="type">int</span> ans=sum;</span><br><span class="line">    <span class="keyword">for</span>(re <span class="type">int</span> i=<span class="number">1</span>;i&lt;=m;++i)</span><br><span class="line">    &#123;</span><br><span class="line">        sum-=ed[i].e;</span><br><span class="line">        ans=<span class="built_in">min</span>(ans,ed[i].mx*c+sum);</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;ans&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></details><h2 id="P3478-POI2008-STA-Station"><a href="#P3478-POI2008-STA-Station" class="headerlink" title="P3478 [POI2008] STA-Station"></a><a href="https://www.luogu.com.cn/problem/P3478">P3478 [POI2008] STA-Station</a></h2><p>换根DP板子题，具体可以看这个<a href="https://violeteternal.github.io/Eternity/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/OI/dp-tree/">树型dp </a>和这个<a href="https://www.luogu.com.cn/blog/sflsrick/note-how-to-change-root#">[学习笔记]换根dp</a></p><details>    <summary>AC Code</summary><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> re register</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">int</span> <span class="title">read</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;<span class="type">char</span> c=<span class="built_in">getchar</span>();</span><br><span class="line">    <span class="keyword">while</span>(!<span class="built_in">isdigit</span>(c))&#123;<span class="keyword">if</span>(c==<span class="string">&#x27;-&#x27;</span>) f=<span class="number">-1</span>;c=<span class="built_in">getchar</span>();&#125;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">isdigit</span>(c))&#123;x=(x&lt;&lt;<span class="number">3</span>)+(x&lt;&lt;<span class="number">1</span>)+c<span class="number">-48</span>,c=<span class="built_in">getchar</span>();&#125;</span><br><span class="line">    <span class="keyword">return</span> x*f;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">write</span><span class="params">(<span class="type">int</span> x)</span> </span>&#123;</span><br><span class="line">    <span class="type">static</span> <span class="type">int</span> sta[<span class="number">35</span>],top=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(x&lt;<span class="number">0</span>)x=-x,<span class="built_in">putchar</span>(<span class="string">&#x27;-&#x27;</span>);</span><br><span class="line">    <span class="keyword">do</span> &#123;</span><br><span class="line">        sta[top++]=x%<span class="number">10</span>,x/=<span class="number">10</span>;</span><br><span class="line">    &#125;<span class="keyword">while</span>(x);</span><br><span class="line">    <span class="keyword">while</span>(top) <span class="built_in">putchar</span>(sta[--top]+<span class="number">48</span>); </span><br><span class="line">    <span class="built_in">putchar</span>(<span class="string">&#x27;\n&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">2e6</span>+<span class="number">5</span>;</span><br><span class="line"><span class="type">int</span> n,m,c;</span><br><span class="line"><span class="type">int</span> head[N],to[N],ne[N],tot,d[N],f[N],dep[N];</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">add</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    to[++tot]=y,ne[tot]=head[x],head[x]=tot;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dfs1</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> fa)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    d[x]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(re <span class="type">int</span> y,i=head[x];i;i=ne[i])</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>((y=to[i])==fa) <span class="keyword">continue</span>;</span><br><span class="line">        dep[y]=dep[x]+<span class="number">1</span>;</span><br><span class="line">        <span class="built_in">dfs1</span>(y,x);</span><br><span class="line">        d[x]+=d[y];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dfs2</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> fa)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    d[x]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(re <span class="type">int</span> y,i=head[x];i;i=ne[i])</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>((y=to[i])==fa) <span class="keyword">continue</span>;</span><br><span class="line">        f[y]=f[x]<span class="number">-2</span>*d[y]+n;</span><br><span class="line">        <span class="built_in">dfs2</span>(y,x);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    n=<span class="built_in">read</span>();</span><br><span class="line">    <span class="type">int</span> x,y,z;</span><br><span class="line">    <span class="keyword">for</span>(re <span class="type">int</span> i=<span class="number">1</span>;i&lt;n;++i) x=<span class="built_in">read</span>(),y=<span class="built_in">read</span>(),<span class="built_in">add</span>(x,y),<span class="built_in">add</span>(y,x);</span><br><span class="line">    <span class="built_in">dfs1</span>(<span class="number">1</span>,<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">for</span>(re <span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;++i) f[<span class="number">1</span>]+=d[i];</span><br><span class="line">    <span class="built_in">dfs2</span>(<span class="number">1</span>,<span class="number">0</span>);</span><br><span class="line">    <span class="type">int</span> ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(re <span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;++i) <span class="keyword">if</span>(f[ans]&lt;f[i]) ans=i;</span><br><span class="line">    cout&lt;&lt;ans;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></details><h2 id="CF149D-Coloring-Brackets"><a href="#CF149D-Coloring-Brackets" class="headerlink" title="CF149D Coloring Brackets"></a><a href="https://www.luogu.com.cn/problem/CF149D">CF149D Coloring Brackets</a></h2><p>不会做，先咕着吧</p><h2 id="P8452-「SWTR-8」15B03"><a href="#P8452-「SWTR-8」15B03" class="headerlink" title="P8452 「SWTR-8」15B03"></a><a href="https://www.luogu.com.cn/problem/P8452">P8452 「SWTR-8」15B03</a></h2><p>神仙构造题，<del>是时候贺题解了</del></p><p>80pts 运用贪心，如样例，隔一个空放一张桌子</p><p>剩下二十分，我已找到一种绝妙的方法，但<del>(我太懒)</del>这里空白太小写不下，所以可以去<a href="https://www.luogu.com.cn/blog/461366/p8452-swtr-815b03-post#">这里</a></p><details>    <summary>AC Code</summary><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> re register</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">int</span> <span class="title">read</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;<span class="type">char</span> c=<span class="built_in">getchar</span>();</span><br><span class="line">    <span class="keyword">while</span>(!<span class="built_in">isdigit</span>(c))&#123;<span class="keyword">if</span>(c==<span class="string">&#x27;-&#x27;</span>) f=<span class="number">-1</span>;c=<span class="built_in">getchar</span>();&#125;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">isdigit</span>(c))&#123;x=(x&lt;&lt;<span class="number">3</span>)+(x&lt;&lt;<span class="number">1</span>)+c<span class="number">-48</span>,c=<span class="built_in">getchar</span>();&#125;</span><br><span class="line">    <span class="keyword">return</span> x*f;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">write</span><span class="params">(<span class="type">int</span> x)</span> </span>&#123;</span><br><span class="line">    <span class="type">static</span> <span class="type">int</span> sta[<span class="number">35</span>],top=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(x&lt;<span class="number">0</span>)x=-x,<span class="built_in">putchar</span>(<span class="string">&#x27;-&#x27;</span>);</span><br><span class="line">    <span class="keyword">do</span> &#123;</span><br><span class="line">        sta[top++]=x%<span class="number">10</span>,x/=<span class="number">10</span>;</span><br><span class="line">    &#125;<span class="keyword">while</span>(x);</span><br><span class="line">    <span class="keyword">while</span>(top) <span class="built_in">putchar</span>(sta[--top]+<span class="number">48</span>); </span><br><span class="line">    <span class="built_in">putchar</span>(<span class="string">&#x27;\n&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> T,n,m,s;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    s=<span class="built_in">read</span>();</span><br><span class="line">    T=<span class="built_in">read</span>();</span><br><span class="line">    <span class="keyword">while</span>(T--)</span><br><span class="line">    &#123;</span><br><span class="line">        n=<span class="built_in">read</span>(),m=<span class="built_in">read</span>();</span><br><span class="line">        cout&lt;&lt;n*m-((n+<span class="number">1</span>)/<span class="number">2</span>)*((m+<span class="number">1</span>)/<span class="number">2</span>)&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line">        <span class="keyword">if</span>(n&lt;<span class="number">3</span>&amp;&amp;m&lt;<span class="number">3</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;0.0\n&quot;</span>);</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">double</span> ans=<span class="number">0.0</span>;</span><br><span class="line">        <span class="keyword">for</span>(re <span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i+=<span class="number">2</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span>(re <span class="type">int</span> j=<span class="number">1</span>;j&lt;=m;j+=<span class="number">2</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="type">int</span> x=i,y=j;</span><br><span class="line">                <span class="keyword">if</span>(n%<span class="number">2</span>==<span class="number">0</span>&amp;&amp;i&gt;n/<span class="number">2</span>) x++;</span><br><span class="line">                <span class="keyword">if</span>(m%<span class="number">2</span>==<span class="number">0</span>&amp;&amp;j&gt;m/<span class="number">2</span>) y++;<span class="comment">//调整坐标</span></span><br><span class="line">                <span class="comment">// hypot(a - b, c - d) = sqrt((a - b) * (a - b) + (c - d) * (c - d)) </span></span><br><span class="line">                <span class="type">double</span> d=<span class="built_in">hypot</span>(x<span class="number">-1</span>,y<span class="number">-1</span>);</span><br><span class="line">                d=<span class="built_in">max</span>(d,<span class="built_in">hypot</span>(x<span class="number">-1</span>,y-m));</span><br><span class="line">                d=<span class="built_in">max</span>(d,<span class="built_in">hypot</span>(x-n,y<span class="number">-1</span>));</span><br><span class="line">                d=<span class="built_in">max</span>(d,<span class="built_in">hypot</span>(x-n,y-m));</span><br><span class="line">                ans+=d;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%.9lf\n&quot;</span>,ans);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></details><h2 id="AT4530-Coins"><a href="#AT4530-Coins" class="headerlink" title="AT4530 Coins"></a><a href="https://www.luogu.com.cn/problem/AT4530">AT4530 Coins</a></h2><p>没错，<del>在看了题解之后</del>我发现这是一道DP</p><p>这题很简单，设dp[i][j]表示前i个元素有j个向上的概率。只需要枚举当 前硬币是向上还是向下即可，与背包类似。</p><p>转移方程为： dp[i][j]=dp[i−1][j−1]×$p_i$+dp[i−1][j]×(1−$p_i$)</p><p>计算完毕后，枚举有多少枚硬币向上就做完了。</p><details>    <summary>AC Code</summary><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> re register</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">3e3</span>+<span class="number">5</span>;</span><br><span class="line"><span class="type">double</span> a[N];</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="type">double</span> f[N][N];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="number">0</span>);cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    f[<span class="number">0</span>][<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(re <span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;++i) cin&gt;&gt;a[i];</span><br><span class="line">    <span class="keyword">for</span>(re <span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;++i)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(re <span class="type">int</span> j=<span class="number">0</span>;j&lt;=i;++j)</span><br><span class="line">        &#123;</span><br><span class="line">            f[i][j]=f[i<span class="number">-1</span>][j]*(<span class="number">1</span>-a[i])+(j&gt;<span class="number">0</span>?f[i<span class="number">-1</span>][j<span class="number">-1</span>]*a[i]:<span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">double</span> ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(re <span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;++i) <span class="keyword">if</span>(i&gt;n-i) ans+=f[n][i];</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%.9lf&quot;</span>,ans);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></details><h2 id="CF1387B1-Village-Minimum"><a href="#CF1387B1-Village-Minimum" class="headerlink" title="CF1387B1 Village (Minimum)"></a><a href="https://www.luogu.com.cn/problem/CF1387B1">CF1387B1 Village (Minimum)</a></h2><p>不会，先咕着</p><h2 id="AT2642-ARC076A-Reconciled"><a href="#AT2642-ARC076A-Reconciled" class="headerlink" title="AT2642 [ARC076A] Reconciled?"></a><a href="https://www.luogu.com.cn/problem/AT2642">AT2642 [ARC076A] Reconciled?</a></h2><p>鉴于猴子和狗必须间隔，所以$abs(m-n)&lt;=1$,然后就是排列</p><details>     <summary>AC code</summary><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> re register</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">1e5</span>+<span class="number">5</span>,mod=<span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="type">int</span> n,m;</span><br><span class="line"><span class="type">int</span> jc[N]=&#123;<span class="number">1</span>&#125;;</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="number">0</span>);cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;m;</span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">abs</span>(n-m)&gt;<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        cout&lt;&lt;<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(re <span class="type">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">1e5</span>;++i) jc[i]=i*jc[i<span class="number">-1</span>]%mod;</span><br><span class="line">    cout&lt;&lt;jc[m]*jc[n]*(n==m?<span class="number">2</span>:<span class="number">1</span>)%mod;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></details><h2 id="SP1684-FREQUENT-Frequent-values"><a href="#SP1684-FREQUENT-Frequent-values" class="headerlink" title="SP1684 FREQUENT - Frequent values"></a><a href="https://www.luogu.com.cn/problem/SP1684">SP1684 FREQUENT - Frequent values</a></h2><p>我们看到这个题就会想到莫队<del>？？？</del>，<del>于是把<a href="https://www.luogu.com.cn/problem/AT1219">[AT1219] 歴史の研究</a>拿过来改一下就A了</del>，但绿题怎么能用回滚莫队呢，<del>用普通莫队就可以了,我们用一个数组记录每个数出现次数的次数</del>，经过审题后，我们发现$a$序列是非降的，所以相同的数必定连续，于是可以预处理每个数字的出现次数，用RMQ合并</p><details>     <summary>AC code（回滚莫队）</summary><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> re register</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> maxm=<span class="number">2e5</span>+<span class="number">5</span>,maxn=<span class="number">2e5</span>+<span class="number">5</span>,N=<span class="number">1e5</span>;</span><br><span class="line"><span class="type">int</span> n,Q,t,t1;</span><br><span class="line"><span class="type">int</span> belong[maxm],a[maxm],b[maxm],R[maxn],cnt[maxm],cnt1[maxm],ans[maxm];</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">query</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> l,r,id;</span><br><span class="line"><span class="keyword">inline</span> <span class="type">bool</span> <span class="keyword">operator</span>&lt;(<span class="type">const</span> query&amp;x)<span class="type">const</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> belong[l]==belong[x.l]?r&lt;x.r:l&lt;x.l;</span><br><span class="line">&#125;</span><br><span class="line">&#125;q[maxm];</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">add</span><span class="params">(<span class="type">const</span> <span class="type">int</span> &amp;x,<span class="type">int</span> &amp;res)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">++cnt[x+N];</span><br><span class="line">res=<span class="built_in">max</span>(res,cnt[x+N]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">del</span><span class="params">(<span class="type">const</span> <span class="type">int</span> &amp;x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">--cnt[x+N];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">add1</span><span class="params">(<span class="type">const</span> <span class="type">int</span> &amp;x,<span class="type">int</span> &amp;res)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">++cnt1[x+N];</span><br><span class="line">res=<span class="built_in">max</span>(res,cnt1[x+N]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">del1</span><span class="params">(<span class="type">const</span> <span class="type">int</span> &amp;x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">--cnt1[x+N];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">cin.<span class="built_in">tie</span>(<span class="number">0</span>);cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">while</span>(cin&gt;&gt;n)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(n==<span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        cin&gt;&gt;Q;</span><br><span class="line">        t=<span class="built_in">sqrt</span>(n*n/Q);</span><br><span class="line">        t1=(n<span class="number">-1</span>)/t+<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(re <span class="type">int</span> i=<span class="number">1</span>;i&lt;=t1;++i) R[i]=i*t;</span><br><span class="line">        R[t1]=n;</span><br><span class="line">        <span class="keyword">for</span>(re <span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;++i) cin&gt;&gt;a[i],b[i]=a[i],belong[i]=(i<span class="number">-1</span>)/t+<span class="number">1</span>;</span><br><span class="line">        <span class="built_in">sort</span>(b+<span class="number">1</span>,b+n+<span class="number">1</span>);</span><br><span class="line">        <span class="type">int</span> M=<span class="built_in">unique</span>(b+<span class="number">1</span>,b+n+<span class="number">1</span>)-b<span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">for</span>(re <span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;++i) a[i]=<span class="built_in">lower_bound</span>(b+<span class="number">1</span>,b+M+<span class="number">1</span>,a[i])-b;</span><br><span class="line">        <span class="keyword">for</span>(re <span class="type">int</span> i=<span class="number">1</span>;i&lt;=Q;++i) cin&gt;&gt;q[i].l&gt;&gt;q[i].r,q[i].id=i;</span><br><span class="line">        <span class="built_in">sort</span>(q+<span class="number">1</span>,q+Q+<span class="number">1</span>);</span><br><span class="line">        <span class="type">int</span> res,res1,last=<span class="number">0</span>,l=<span class="number">1</span>,r=<span class="number">0</span>,ll;</span><br><span class="line">        <span class="keyword">for</span>(re <span class="type">int</span> i=<span class="number">1</span>;i&lt;=Q;++i)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(belong[q[i].l]==belong[q[i].r])</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">for</span>(re <span class="type">int</span> j=q[i].l;j&lt;=q[i].r;++j) <span class="built_in">add1</span>(a[j],ans[q[i].id]);</span><br><span class="line">                <span class="keyword">for</span>(re <span class="type">int</span> j=q[i].l;j&lt;=q[i].r;++j) <span class="built_in">del1</span>(a[j]);</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(belong[q[i].l]!=last)</span><br><span class="line">            &#123;</span><br><span class="line">                last=belong[q[i].l];</span><br><span class="line">                <span class="keyword">for</span>(re <span class="type">int</span> j=l;j&lt;=r;++j) <span class="built_in">del</span>(a[j]);</span><br><span class="line">                l=R[last]+<span class="number">1</span>,r=l<span class="number">-1</span>;</span><br><span class="line">                ll=l;</span><br><span class="line">                res=<span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">while</span>(r&lt;q[i].r) <span class="built_in">add</span>(a[++r],res);</span><br><span class="line">            res1=res;</span><br><span class="line">            <span class="keyword">while</span>(l&gt;q[i].l) <span class="built_in">add</span>(a[--l],res1);</span><br><span class="line">            <span class="keyword">while</span>(l&lt;ll) <span class="built_in">del</span>(a[l++]);</span><br><span class="line">            ans[q[i].id]=res1;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(re <span class="type">int</span> i=<span class="number">1</span>;i&lt;=Q;++i) cout&lt;&lt;ans[i]&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></details><details>     <summary>AC code（RMQ）</summary><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cmath&gt;</span> </span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">100010</span>;</span><br><span class="line"><span class="type">int</span> st[N][<span class="number">20</span>],dp[N],num[N];</span><br><span class="line"><span class="type">int</span> n,q;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">rmq</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">st[i][<span class="number">0</span>]=dp[i];</span><br><span class="line"><span class="type">int</span> k=<span class="built_in">log</span>((<span class="type">double</span>)(n+<span class="number">1</span>))/<span class="built_in">log</span>(<span class="number">2.0</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;=k;j++)</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i+(<span class="number">1</span>&lt;&lt;j)<span class="number">-1</span>&lt;=n;i++)</span><br><span class="line">st[i][j]=<span class="built_in">max</span>(st[i][j<span class="number">-1</span>],st[i+(<span class="number">1</span>&lt;&lt;(j<span class="number">-1</span>))][j<span class="number">-1</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">Query</span><span class="params">(<span class="type">int</span> l,<span class="type">int</span> r)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(l&gt;r) <span class="keyword">return</span> <span class="number">0</span>;    </span><br><span class="line"><span class="type">int</span> k=<span class="built_in">log</span>((<span class="type">double</span>)(r-l+<span class="number">1</span>))/<span class="built_in">log</span>(<span class="number">2.0</span>);    </span><br><span class="line"><span class="keyword">return</span> <span class="built_in">max</span>(st[l][k],st[r-(<span class="number">1</span>&lt;&lt;k)+<span class="number">1</span>][k]);</span><br><span class="line">&#125; </span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">void</span>)</span></span>&#123;    </span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n)!=EOF&amp;&amp;n)&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;q);</span><br><span class="line">dp[<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;num[i]);</span><br><span class="line"><span class="keyword">if</span>(i&gt;<span class="number">1</span>)</span><br><span class="line">dp[i]=(num[i]==num[i<span class="number">-1</span>]?dp[i<span class="number">-1</span>]+<span class="number">1</span>:<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">rmq</span>();</span><br><span class="line"><span class="keyword">while</span>(q--)&#123;</span><br><span class="line"><span class="type">int</span> a,b;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>,&amp;a,&amp;b);</span><br><span class="line"><span class="type">int</span> c=a;</span><br><span class="line"><span class="keyword">while</span>(c&lt;=b&amp;&amp;num[c]==num[c<span class="number">-1</span>]) c++;</span><br><span class="line">cout&lt;&lt;<span class="built_in">max</span>(<span class="built_in">Query</span>(c,b),c-a)&lt;&lt;endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></details><h2 id="AT4319-ABC120D-Decayed-Bridges"><a href="#AT4319-ABC120D-Decayed-Bridges" class="headerlink" title="AT4319 [ABC120D] Decayed Bridges"></a><a href="https://www.luogu.com.cn/problem/AT4319">AT4319 [ABC120D] Decayed Bridges</a></h2><p>一道很水的题，类似于<a href="https://www.luogu.com.cn/problem/P1197">P1197 [JSOI2008] 星球大战</a>，鉴于删边不好操作，我们倒序操作，将其改为加边，对两个联通块而言，减少的贡献是两者大小之积，用并查集维护即可</p><details>    <summary>AC Code</summary><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> re register</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">1e5</span>+<span class="number">5</span>;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">edge</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> x,y;</span><br><span class="line">&#125;e[N];</span><br><span class="line"><span class="type">int</span> f[N],s[N];</span><br><span class="line"><span class="type">int</span> ans[N],res;</span><br><span class="line"><span class="type">int</span> n,m;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">int</span> <span class="title">find</span><span class="params">(<span class="type">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> x==f[x]?x:f[x]=<span class="built_in">find</span>(f[x]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="number">0</span>);cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;m;</span><br><span class="line">    <span class="keyword">for</span>(re <span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;++i) f[i]=i,s[i]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(re <span class="type">int</span> i=<span class="number">1</span>;i&lt;=m;++i) cin&gt;&gt;e[i].x&gt;&gt;e[i].y;</span><br><span class="line">    res=(n<span class="number">-1</span>)*n/<span class="number">2</span>;</span><br><span class="line">    <span class="keyword">for</span>(re <span class="type">int</span> i=m;i;--i)</span><br><span class="line">    &#123;</span><br><span class="line">        ans[i]=res;</span><br><span class="line">        <span class="type">int</span> x=<span class="built_in">find</span>(e[i].x),y=<span class="built_in">find</span>(e[i].y);</span><br><span class="line">        <span class="keyword">if</span>(x!=y)</span><br><span class="line">        &#123;</span><br><span class="line">            res-=s[x]*s[y];</span><br><span class="line">            f[x]=y,s[y]+=s[x];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(re <span class="type">int</span> i=<span class="number">1</span>;i&lt;=m;++i) cout&lt;&lt;ans[i]&lt;&lt;endl;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></details><h2 id="SP18185-GIVEAWAY-Give-Away-https-www-luogu-com-cn-problem-SP18185"><a href="#SP18185-GIVEAWAY-Give-Away-https-www-luogu-com-cn-problem-SP18185" class="headerlink" title="SP18185 GIVEAWAY - Give Away](https://www.luogu.com.cn/problem/SP18185)"></a>SP18185 GIVEAWAY - Give Away](<a href="https://www.luogu.com.cn/problem/SP18185">https://www.luogu.com.cn/problem/SP18185</a>)</h2><p>分块裸题，题解中有用树套树的巨佬，我就<del>无耻地</del>copy过来</p><details>    <summary>AC Code（分块）</summary><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> re register</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> maxm=<span class="number">1e6</span>+<span class="number">5</span>,maxn=<span class="number">1e3</span>+<span class="number">5</span>;</span><br><span class="line"><span class="type">int</span> n,m,a[maxm],b[maxm],L[maxn],R[maxn],belong[maxm];</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">so</span><span class="params">(<span class="type">int</span> k)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">sort</span>(a+L[k],a+R[k]+<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">change</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> v)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> p=belong[x];</span><br><span class="line">    b[x]=v;</span><br><span class="line">    <span class="keyword">for</span>(re <span class="type">int</span> i=L[p];i&lt;=R[p];++i) a[i]=b[i];</span><br><span class="line">    <span class="built_in">so</span>(p);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">int</span> <span class="title">ask</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> y,<span class="type">int</span> v)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> res=<span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> p=belong[x],q=belong[y];</span><br><span class="line"><span class="keyword">if</span>(p==q)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(re <span class="type">int</span> i=x;i&lt;=y;++i) <span class="keyword">if</span>(b[i]&gt;=v) ++res;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(re <span class="type">int</span> i=x;i&lt;=R[p];++i) <span class="keyword">if</span>(b[i]&gt;=v) ++res;</span><br><span class="line"><span class="keyword">for</span>(re <span class="type">int</span> i=L[q];i&lt;=y;++i) <span class="keyword">if</span>(b[i]&gt;=v) ++res;</span><br><span class="line"><span class="keyword">for</span>(re <span class="type">int</span> i=p+<span class="number">1</span>;i&lt;q;++i)</span><br><span class="line">&#123;</span><br><span class="line">res+=R[i]+<span class="number">1</span>-(<span class="built_in">lower_bound</span>(a+L[i],a+R[i]+<span class="number">1</span>,v)-a);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">cin.<span class="built_in">tie</span>(<span class="number">0</span>),cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">cin&gt;&gt;n;</span><br><span class="line"><span class="type">int</span> t1=<span class="built_in">sqrt</span>(n);</span><br><span class="line"><span class="type">int</span> t=(n<span class="number">-1</span>)/t1+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(re <span class="type">int</span> i=<span class="number">1</span>;i&lt;=t;++i)L[i]=(i<span class="number">-1</span>)*t1+<span class="number">1</span>,R[i]=i*t1;</span><br><span class="line">R[t]=n;</span><br><span class="line"><span class="keyword">for</span>(re <span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;++i) cin&gt;&gt;a[i],b[i]=a[i],belong[i]=(i<span class="number">-1</span>)/t1+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(re <span class="type">int</span> i=<span class="number">1</span>;i&lt;=t;++i) <span class="built_in">so</span>(i);</span><br><span class="line"><span class="type">int</span> opt,x,y,z;</span><br><span class="line">    cin&gt;&gt;m;</span><br><span class="line"><span class="keyword">while</span>(m--)</span><br><span class="line">&#123;</span><br><span class="line">cin&gt;&gt;opt&gt;&gt;x&gt;&gt;y;</span><br><span class="line"><span class="keyword">if</span>(opt==<span class="number">0</span>) cin&gt;&gt;z,cout&lt;&lt;<span class="built_in">ask</span>(x,y,z)&lt;&lt;endl;</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">change</span>(x,y);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></details><details>    <summary>AC Code（树套树）</summary><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> MAX_N = <span class="number">500010</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">double</span> alpha = <span class="number">0.75</span>;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">scapeGoat</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="keyword">class</span> <span class="title class_">node</span> &#123;</span><br><span class="line">    <span class="keyword">public</span>:</span><br><span class="line">        node *parent; <span class="comment">// 父节点指针</span></span><br><span class="line">        node *child[<span class="number">2</span>]; <span class="comment">// child[0]为左子结点的指针，child[1]为右子结点的指针。</span></span><br><span class="line">        <span class="type">int</span> value, count, size, cover; <span class="comment">// 数据，结点个数，size为有效结点的数量（记录count），cover为总结点的数量（全视为1）</span></span><br><span class="line"></span><br><span class="line">```c++</span><br><span class="line">    <span class="built_in">node</span>(<span class="type">int</span> _value) &#123;</span><br><span class="line">        value = _value;</span><br><span class="line">        parent = child[<span class="number">0</span>] = child[<span class="number">1</span>] = <span class="literal">NULL</span>;</span><br><span class="line">        size = cover = count = <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line">node *root;</span><br><span class="line"><span class="type">int</span> deletedCount;</span><br><span class="line"><span class="built_in">scapeGoat</span>() &#123;</span><br><span class="line">    root = <span class="literal">NULL</span>;</span><br><span class="line">    deletedCount = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">~<span class="built_in">scapeGoat</span>() &#123;</span><br><span class="line">    <span class="built_in">destroy</span>(root);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">void</span> <span class="title">destroy</span><span class="params">(node *current)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (current) &#123;</span><br><span class="line">        <span class="built_in">destroy</span>(current-&gt;child[<span class="number">0</span>]);</span><br><span class="line">        <span class="built_in">destroy</span>(current-&gt;child[<span class="number">1</span>]);</span><br><span class="line">        <span class="keyword">delete</span> current;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">void</span> <span class="title">maintain</span><span class="params">(node *current)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (current == <span class="literal">NULL</span>) &#123; <span class="comment">// 可能传入的是一个空指针</span></span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    current-&gt;size = current-&gt;count;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">2</span>; ++i) &#123;</span><br><span class="line">        <span class="keyword">if</span> (current-&gt;child[i]) &#123;</span><br><span class="line">            current-&gt;size += current-&gt;child[i]-&gt;size; <span class="comment">// 加上左右子树的size</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    current-&gt;cover = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">2</span>; ++i) &#123;</span><br><span class="line">        <span class="keyword">if</span> (current-&gt;child[i]) &#123;</span><br><span class="line">            current-&gt;cover += current-&gt;child[i]-&gt;cover; <span class="comment">// 加上左右子树的cover</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">int</span> <span class="title">getType</span><span class="params">(node *current)</span> </span>&#123; <span class="comment">// 获得结点是左结点还是右结点，0左1右</span></span><br><span class="line">    <span class="keyword">if</span> (current == <span class="literal">NULL</span> || current-&gt;parent == <span class="literal">NULL</span>) &#123; <span class="comment">// 传入空指针；根结点没有父亲，特判一下</span></span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>; <span class="comment">// 下标放-1会报错，放个0就好了</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> current-&gt;parent-&gt;child[<span class="number">1</span>] == current; <span class="comment">// 父亲的右子结点 是不是 自己</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">void</span> <span class="title">connect</span><span class="params">(node *parent, node *current, <span class="type">int</span> type)</span> </span>&#123; <span class="comment">// 父结点指针，当前结点指针，类型（0左1右）</span></span><br><span class="line">    <span class="keyword">if</span> (parent) &#123; <span class="comment">// parent 可能为NULL</span></span><br><span class="line">        parent-&gt;child[type] = current;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (current) &#123; <span class="comment">// current 也可能为NULL</span></span><br><span class="line">        current-&gt;parent = parent;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">bool</span> <span class="title">isBad</span><span class="params">(node *current)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (current == <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">2</span>; ++i) &#123;</span><br><span class="line">        <span class="keyword">if</span> (current-&gt;child[i]) &#123;</span><br><span class="line">            <span class="keyword">if</span> (current-&gt;child[i]-&gt;cover &gt; current-&gt;cover * alpha) &#123; <span class="comment">// 对后面的current-&gt;cover * alpha加5可以避免小规模的重构，在O0中能快几ms</span></span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">travel</span><span class="params">(node *current, vector&lt;node *&gt; &amp;v)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (current == <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">travel</span>(current-&gt;child[<span class="number">0</span>], v);</span><br><span class="line">    <span class="keyword">if</span> (current-&gt;count) &#123; <span class="comment">// 结点存在，没被删</span></span><br><span class="line">        v.<span class="built_in">push_back</span>(current);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">travel</span>(current-&gt;child[<span class="number">1</span>], v);</span><br><span class="line">    <span class="keyword">if</span> (!current-&gt;count) &#123; <span class="comment">// 被删了，物理上删除</span></span><br><span class="line">        deletedCount --; <span class="comment">// 标记删除的结点少了一个</span></span><br><span class="line">        <span class="keyword">delete</span> current;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">node * <span class="title">divide</span><span class="params">(vector&lt;node *&gt; &amp;v, <span class="type">int</span> left, <span class="type">int</span> right)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (left &gt;= right) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> middle = (left + right) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">    node *current = v[middle];</span><br><span class="line">    <span class="built_in">connect</span>(current, <span class="built_in">divide</span>(v, left, middle), <span class="number">0</span>);</span><br><span class="line">    <span class="built_in">connect</span>(current, <span class="built_in">divide</span>(v, middle + <span class="number">1</span>, right), <span class="number">1</span>);</span><br><span class="line">    <span class="built_in">maintain</span>(current);</span><br><span class="line">    <span class="keyword">return</span> current;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">reBuild</span><span class="params">(node *current)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (current == <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> type = <span class="built_in">getType</span>(current);</span><br><span class="line">    node *parent = current-&gt;parent;</span><br><span class="line">    <span class="type">static</span> vector&lt;node *&gt; v; <span class="comment">// 避免反复申请、释放内存，快了30ms</span></span><br><span class="line">    v.<span class="built_in">clear</span>();</span><br><span class="line">    <span class="built_in">travel</span>(current, v);</span><br><span class="line">    node *newTree = <span class="built_in">divide</span>(v, <span class="number">0</span>, v.<span class="built_in">size</span>());</span><br><span class="line">    <span class="built_in">connect</span>(parent, newTree, type);</span><br><span class="line">    <span class="keyword">if</span> (root == current) &#123; <span class="comment">// 根节点更新</span></span><br><span class="line">        root = newTree;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">balance</span><span class="params">(node *current)</span> </span>&#123; <span class="comment">// 一路更新，暴力重构最顶端的坏结点</span></span><br><span class="line">    <span class="keyword">if</span> (current == <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (deletedCount &gt; root-&gt;cover / <span class="number">2</span>) &#123; <span class="comment">// 懒更新结点太多了，整棵树重构</span></span><br><span class="line">        <span class="built_in">reBuild</span>(root);</span><br><span class="line">        deletedCount = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    node *badNode = <span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">        <span class="built_in">maintain</span>(current);</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">isBad</span>(current)) &#123;</span><br><span class="line">            badNode = current;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (current-&gt;parent) &#123;</span><br><span class="line">            current = current-&gt;parent;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (badNode) &#123;</span><br><span class="line">        <span class="built_in">reBuild</span>(badNode);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">node* <span class="title">insert</span><span class="params">(<span class="type">int</span> value)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (root == <span class="literal">NULL</span>) &#123;</span><br><span class="line">        root = <span class="keyword">new</span> <span class="built_in">node</span>(value);</span><br><span class="line">        <span class="keyword">return</span> root;</span><br><span class="line">    &#125;</span><br><span class="line">    node *current = root;</span><br><span class="line">    node *parent = current-&gt;parent;</span><br><span class="line">    <span class="type">int</span> type; <span class="comment">// 类型</span></span><br><span class="line">    <span class="keyword">while</span> (current) &#123; <span class="comment">// 和查找一模一样</span></span><br><span class="line">        <span class="keyword">if</span> (current-&gt;value &lt; value) &#123;</span><br><span class="line">            parent = current;</span><br><span class="line">            current = current-&gt;child[<span class="number">1</span>];</span><br><span class="line">            type = <span class="number">1</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (current-&gt;value &gt; value) &#123;</span><br><span class="line">            parent = current;</span><br><span class="line">            current = current-&gt;child[<span class="number">0</span>];</span><br><span class="line">            type = <span class="number">0</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123; <span class="comment">// 已经有相同结点了，将其count++即可。</span></span><br><span class="line">            <span class="keyword">if</span> (!current-&gt;count) &#123; <span class="comment">// 被删除的结点在没有重构之前回来了</span></span><br><span class="line">                deletedCount --;</span><br><span class="line">            &#125;</span><br><span class="line">            current-&gt;count ++;</span><br><span class="line">            <span class="built_in">balance</span>(current);</span><br><span class="line">            <span class="keyword">return</span> current;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    current = <span class="keyword">new</span> <span class="built_in">node</span>(value);</span><br><span class="line">    <span class="built_in">connect</span>(parent, current, type);</span><br><span class="line">    <span class="built_in">balance</span>(current);</span><br><span class="line">    <span class="keyword">return</span> current;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">remove</span><span class="params">(node *current)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (current == <span class="literal">NULL</span> || !current-&gt;count) &#123; <span class="comment">// 已经被删除了就不要再删了</span></span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    current-&gt;count --;</span><br><span class="line">    <span class="keyword">if</span> (!current-&gt;count) &#123;</span><br><span class="line">        deletedCount ++; <span class="comment">// 删没了一个结点，懒更新</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">balance</span>(current); <span class="comment">// 更新size等信息 + 平衡</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function">node* <span class="title">find</span><span class="params">(<span class="type">int</span> value)</span> </span>&#123;</span><br><span class="line">    node *current = root; <span class="comment">// 从根结点开始搜索</span></span><br><span class="line">    <span class="keyword">while</span> (current) &#123;</span><br><span class="line">        <span class="keyword">if</span> (current-&gt;value &lt; value) &#123;</span><br><span class="line">            current = current-&gt;child[<span class="number">1</span>]; <span class="comment">// 小了，往大了走</span></span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (current-&gt;value &gt; value) &#123;</span><br><span class="line">            current = current-&gt;child[<span class="number">0</span>]; <span class="comment">// 大了，往小了走</span></span><br><span class="line">        &#125; <span class="keyword">else</span> &#123; <span class="comment">// 不大也不小不就是找到了吗？</span></span><br><span class="line">            <span class="keyword">return</span> current;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">NULL</span>; <span class="comment">// 找不到结点，退出。（找到得到结点的话会在while循环就退出）</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">rankOfNode</span><span class="params">(<span class="type">int</span> value)</span> </span>&#123; <span class="comment">// 即使查询的值不在树中，也能查。</span></span><br><span class="line">    <span class="comment">// 这里传入的value为被查询排名的结点的value</span></span><br><span class="line">    node *current = root; <span class="comment">// 从根结点开始搜索</span></span><br><span class="line">    <span class="type">int</span> leftSize = <span class="number">1</span>; <span class="comment">// 左面的结点个数。提前将自己的大小1加上，你就想最左侧结点左面啥也没有但是排名为1</span></span><br><span class="line">    <span class="keyword">while</span> (current) &#123;</span><br><span class="line">        <span class="keyword">if</span> (current-&gt;value &gt;= value) &#123; <span class="comment">// 玄学。即使找到了结点， 也还是会往左走到NULL结点后退出，走左子树不加，不影响结果。</span></span><br><span class="line">            current = current-&gt;child[<span class="number">0</span>];</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (current-&gt;child[<span class="number">0</span>]) &#123;</span><br><span class="line">                leftSize += current-&gt;child[<span class="number">0</span>]-&gt;size;</span><br><span class="line">            &#125;</span><br><span class="line">            leftSize += current-&gt;count;</span><br><span class="line">            current = current-&gt;child[<span class="number">1</span>];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> leftSize;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="type">int</span> a[MAX_N];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">lowbit</span><span class="params">(<span class="type">int</span> x)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> x &amp; -x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">BIT</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    scapeGoat node[MAX_N];</span><br><span class="line">    <span class="built_in">BIT</span>(<span class="type">int</span> _n) &#123;</span><br><span class="line">        n = _n;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">sum</span><span class="params">(<span class="type">int</span> index, <span class="type">int</span> c)</span> </span>&#123; <span class="comment">// 大于等于c的有多少</span></span><br><span class="line">        <span class="type">int</span> oriIndex = index; <span class="comment">// 原先的index</span></span><br><span class="line">        <span class="type">int</span> lessThanC = <span class="number">0</span>; <span class="comment">// 比c小的有多少</span></span><br><span class="line">        <span class="keyword">while</span> (index &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            lessThanC += node[index].<span class="built_in">rankOfNode</span>(c) - <span class="number">1</span>;</span><br><span class="line">            index -= <span class="built_in">lowbit</span>(index);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> oriIndex - lessThanC;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">insert</span><span class="params">(<span class="type">int</span> index, <span class="type">int</span> value)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">while</span> (index &lt;= n) &#123;</span><br><span class="line">            node[index].<span class="built_in">insert</span>(value);</span><br><span class="line">            index += <span class="built_in">lowbit</span>(index);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">change</span><span class="params">(<span class="type">int</span> index, <span class="type">int</span> value)</span> </span>&#123;</span><br><span class="line">        <span class="type">int</span> p = index; <span class="comment">// 记录原来的位置</span></span><br><span class="line">        <span class="keyword">while</span> (index &lt;= n) &#123;</span><br><span class="line">            node[index].<span class="built_in">remove</span>(node[index].<span class="built_in">find</span>(a[p])); <span class="comment">// 删掉老的</span></span><br><span class="line">            node[index].<span class="built_in">insert</span>(value); <span class="comment">// 插入新的</span></span><br><span class="line">            index += <span class="built_in">lowbit</span>(index);</span><br><span class="line">        &#125;</span><br><span class="line">        a[p] = value; <span class="comment">// 在存放所有数据的a中同样进行更改</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n, q, temp, op, l, r, c, p, b;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="function">BIT <span class="title">tree</span><span class="params">(n)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">        cin &gt;&gt; temp;</span><br><span class="line">        a[i] = temp;</span><br><span class="line">        tree.<span class="built_in">insert</span>(i, temp);</span><br><span class="line">    &#125;</span><br><span class="line">    cin &gt;&gt; q;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= q; ++i) &#123;</span><br><span class="line">        cin &gt;&gt; op;</span><br><span class="line">        <span class="keyword">switch</span> (op) &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">                cin &gt;&gt; l &gt;&gt; r &gt;&gt; c;</span><br><span class="line">                cout &lt;&lt; tree.<span class="built_in">sum</span>(r, c) - tree.<span class="built_in">sum</span>(l - <span class="number">1</span>, c) &lt;&lt; endl;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                cin &gt;&gt; p &gt;&gt; b;</span><br><span class="line">                tree.<span class="built_in">change</span>(p, b);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></details><h2 id="P2002-消息扩散-https-www-luogu-com-cn-problem-P2002"><a href="#P2002-消息扩散-https-www-luogu-com-cn-problem-P2002" class="headerlink" title="P2002 消息扩散](https://www.luogu.com.cn/problem/P2002)"></a>P2002 消息扩散](<a href="https://www.luogu.com.cn/problem/P2002">https://www.luogu.com.cn/problem/P2002</a>)</h2><p>跟tarjan有关，先咕着</p><h2 id="SP28305-ADAINDEX-Ada-and-Indexing"><a href="#SP28305-ADAINDEX-Ada-and-Indexing" class="headerlink" title="SP28305 ADAINDEX - Ada and Indexing"></a><a href="https://www.luogu.com.cn/problem/SP28305">SP28305 ADAINDEX - Ada and Indexing</a></h2><p>Trie 板子题</p><details>    <summary>AC Code</summary><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> re register</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">1e6</span>+<span class="number">5</span>;</span><br><span class="line"><span class="type">int</span> son[N][<span class="number">26</span>],v[N],n,q,tot=<span class="number">1</span>;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">ins</span><span class="params">(<span class="type">char</span> *s)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> p=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(re <span class="type">int</span> i=<span class="number">0</span>;s[i];++i)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> c=s[i]-<span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">        <span class="keyword">if</span>(!son[p][c]) son[p][c]=++tot;</span><br><span class="line">        p=son[p][c];</span><br><span class="line">        ++v[p];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">int</span> <span class="title">ask</span><span class="params">(<span class="type">char</span> *s)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> p=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(re <span class="type">int</span> i=<span class="number">0</span>;s[i];++i)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> c=s[i]-<span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">        <span class="keyword">if</span>(!son[p][c]) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        p=son[p][c];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> v[p];</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">char</span> s[N];</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="number">0</span>);cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;q;</span><br><span class="line">    <span class="keyword">for</span>(re <span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;++i) cin&gt;&gt;s,<span class="built_in">ins</span>(s);</span><br><span class="line">    <span class="keyword">for</span>(re <span class="type">int</span> i=<span class="number">1</span>;i&lt;=q;++i) cin&gt;&gt;s,cout&lt;&lt;<span class="built_in">ask</span>(s)&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></details><h2 id="SP1026-FAVDICE-Favorite-Dice"><a href="#SP1026-FAVDICE-Favorite-Dice" class="headerlink" title="SP1026 FAVDICE - Favorite Dice"></a><a href="https://www.luogu.com.cn/problem/SP1026">SP1026 FAVDICE - Favorite Dice</a></h2><p>简单的期望题</p><details>    <summary>AC Code</summary><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> T;</span><br><span class="line">    cin&gt;&gt;T;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="keyword">while</span>(T--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">double</span> ans=<span class="number">0</span>;</span><br><span class="line">        cin&gt;&gt;n;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;++i) ans+=(<span class="type">double</span>)<span class="number">1</span>/i;</span><br><span class="line">        ans*=n;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%.2lf\n&quot;</span>,ans);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></details><h2 id="P7715-「EZEC-10」Shape"><a href="#P7715-「EZEC-10」Shape" class="headerlink" title="P7715 「EZEC-10」Shape"></a><a href="https://www.luogu.com.cn/problem/P7715">P7715 「EZEC-10」Shape</a></h2><p>一道见过多遍的题，不会，先咕着</p><h2 id="SP1805-HISTOGRA-Largest-Rectangle-in-a-Histogram"><a href="#SP1805-HISTOGRA-Largest-Rectangle-in-a-Histogram" class="headerlink" title="SP1805 HISTOGRA - Largest Rectangle in a Histogram"></a><a href="https://www.luogu.com.cn/problem/SP1805">SP1805 HISTOGRA - Largest Rectangle in a Histogram</a></h2><p>单调栈板子题</p><details>    <summary>AC Code</summary><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> re register</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">1e5</span>+<span class="number">5</span>;</span><br><span class="line"><span class="type">int</span> n,w[N],cnt,x,ans,h[N],a[N];</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(cin&gt;&gt;n)</span><br><span class="line">    &#123;</span><br><span class="line">        cnt=ans=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span>(!n) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(re <span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;++i)    cin&gt;&gt;a[i];</span><br><span class="line">        a[n+<span class="number">1</span>]=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(re <span class="type">int</span> i=<span class="number">1</span>;i&lt;=n+<span class="number">1</span>;++i)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> res=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">while</span>(h[cnt]&gt;a[i]) res+=w[cnt],ans=<span class="built_in">max</span>(ans,res*h[cnt]),--cnt;</span><br><span class="line">            w[++cnt]=<span class="number">1</span>+res,h[cnt]=a[i];</span><br><span class="line">        &#125;</span><br><span class="line">        cout&lt;&lt;ans&lt;&lt;endl;</span><br><span class="line">     &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></details><h2 id="CF61D-Eternal-Victory"><a href="#CF61D-Eternal-Victory" class="headerlink" title="CF61D Eternal Victory"></a><a href="https://www.luogu.com.cn/problem/CF61D">CF61D Eternal Victory</a></h2><p>一道比较有意思的题，读题可知这n座城市构成一棵树，而每个城市都要走到和任意确定终点说明每条链要经过两遍，只有一条含1号点的只经过一遍，所以dfs就行了</p><details>    <summary>AC Code</summary><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> re register</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">1e5</span>+<span class="number">5</span>;</span><br><span class="line"><span class="type">int</span> n,head[N],to[N&lt;&lt;<span class="number">1</span>],ne[N&lt;&lt;<span class="number">1</span>],e[N&lt;&lt;<span class="number">1</span>],tot,sum,ans;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">add</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> y,<span class="type">int</span> z)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    to[++tot]=y,ne[tot]=head[x],e[tot]=z,head[x]=tot;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> y,<span class="type">int</span> z)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ans=<span class="built_in">max</span>(ans,z);</span><br><span class="line">    <span class="keyword">for</span>(re <span class="type">int</span> i=head[x];i;i=ne[i])</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> u=to[i];</span><br><span class="line">        <span class="keyword">if</span>(u==y) <span class="keyword">continue</span>;</span><br><span class="line">        <span class="built_in">dfs</span>(u,x,z+e[i]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="number">0</span>);cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    <span class="type">int</span> x,y,z;</span><br><span class="line">    <span class="keyword">for</span>(re <span class="type">int</span> i=<span class="number">1</span>;i&lt;n;++i) cin&gt;&gt;x&gt;&gt;y&gt;&gt;z,<span class="built_in">add</span>(x,y,z),<span class="built_in">add</span>(y,x,z),sum+=z;</span><br><span class="line">    <span class="built_in">dfs</span>(<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">    cout&lt;&lt;sum*<span class="number">2</span>-ans;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></details><h2 id="P1613-跑路"><a href="#P1613-跑路" class="headerlink" title="P1613 跑路"></a><a href="https://www.luogu.com.cn/problem/P1613">P1613 跑路</a></h2><p>一道好题，我们用倍增的思想，用$f[i][j][k]表示i到j$之间是否有一条长度为$2^{k}$的边</p><p>再跑最短路就行了</p><details>    <summary>AC Code</summary><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> re register</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> f[<span class="number">55</span>][<span class="number">55</span>][<span class="number">65</span>],n,m;</span><br><span class="line"><span class="type">int</span> d[<span class="number">55</span>][<span class="number">55</span>];</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="number">0</span>);cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;m;</span><br><span class="line">    <span class="type">int</span> x,y;</span><br><span class="line">    <span class="built_in">memset</span>(d,<span class="number">0x3f</span>,<span class="keyword">sizeof</span> d);</span><br><span class="line">    <span class="keyword">for</span>(re <span class="type">int</span> i=<span class="number">1</span>;i&lt;=m;++i) cin&gt;&gt;x&gt;&gt;y,f[x][y][<span class="number">0</span>]=d[x][y]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(re <span class="type">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">64</span>;++i)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(re <span class="type">int</span> j=<span class="number">1</span>;j&lt;=n;++j)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span>(re <span class="type">int</span> k=<span class="number">1</span>;k&lt;=n;++k)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">for</span>(re <span class="type">int</span> p=<span class="number">1</span>;p&lt;=n;++p)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">if</span>(f[j][k][i<span class="number">-1</span>]&amp;&amp;f[k][p][i<span class="number">-1</span>]) f[j][p][i]=d[j][p]=<span class="number">1</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(re <span class="type">int</span> k=<span class="number">1</span>;k&lt;=n;++k)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(re <span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;++i)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span>(re <span class="type">int</span> j=<span class="number">1</span>;j&lt;=n;++j) d[i][j]=<span class="built_in">min</span>(d[i][k]+d[k][j],d[i][j]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;d[<span class="number">1</span>][n];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></details><h2 id="AT2665-AGC017B-Moderate-Differences"><a href="#AT2665-AGC017B-Moderate-Differences" class="headerlink" title="AT2665 [AGC017B] Moderate Differences"></a><a href="https://www.luogu.com.cn/problem/AT2665">AT2665 [AGC017B] Moderate Differences</a></h2><p>不会，先咕着,QwQ</p><h2 id="P1284-三角形牧场"><a href="#P1284-三角形牧场" class="headerlink" title="P1284 三角形牧场"></a><a href="https://www.luogu.com.cn/problem/P1284">P1284 三角形牧场</a></h2><p>做不起的DP，用$f[i][j][k]$表示前$i$块木板拼成的三角形两边长分别为$j，k$,</p><details>    <summary>AC Code</summary><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> re register</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">45</span>,L=<span class="number">805</span>;</span><br><span class="line"><span class="type">int</span> n,m,a[N];</span><br><span class="line"><span class="type">int</span> dp[L][L],s;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">int</span> <span class="title">check</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> y,<span class="type">int</span> z)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> (x+y&gt;z&amp;&amp;x+z&gt;y&amp;&amp;y+z&gt;x)?<span class="number">1</span>:<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">double</span> <span class="title">mj</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> y,<span class="type">int</span> z)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">double</span> xx=x,yy=y,zz=z;</span><br><span class="line">    <span class="type">double</span> p=(xx+yy+zz)/<span class="number">2</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">sqrt</span>(p*(p-xx)*(p-yy)*(p-zz));</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="number">0</span>);cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    <span class="keyword">for</span>(re <span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;++i) cin&gt;&gt;a[i],s+=a[i];</span><br><span class="line">    dp[<span class="number">0</span>][<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(re <span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;++i)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(re <span class="type">int</span> j=s&gt;&gt;<span class="number">1</span>;j&gt;=<span class="number">0</span>;--j)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span>(re <span class="type">int</span> k=s&gt;&gt;<span class="number">1</span>;k&gt;=<span class="number">0</span>;--k)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(j-a[i]&gt;=<span class="number">0</span>) dp[j][k]|=dp[j-a[i]][k];</span><br><span class="line">                <span class="keyword">if</span>(k-a[i]&gt;=<span class="number">0</span>) dp[j][k]|=dp[j][k-a[i]];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">double</span> ans=<span class="number">-0.01</span>;</span><br><span class="line">    <span class="keyword">for</span>(re <span class="type">int</span> i=<span class="number">1</span>;i&lt;=s/<span class="number">2</span>;++i)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(re <span class="type">int</span> j=<span class="number">1</span>;j&lt;=s/<span class="number">2</span>;++j)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(!dp[i][j])<span class="keyword">continue</span>;</span><br><span class="line">            <span class="keyword">if</span>(!<span class="built_in">check</span>(i,j,s-i-j)) <span class="keyword">continue</span>;</span><br><span class="line">            ans=<span class="built_in">max</span>(ans,<span class="built_in">mj</span>(i,j,s-i-j));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;(<span class="type">int</span>)(ans*<span class="number">100</span>)&lt;&lt;endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></details><h2 id="CF1475F-Unusual-Matrix"><a href="#CF1475F-Unusual-Matrix" class="headerlink" title="CF1475F Unusual Matrix"></a><a href="https://www.luogu.com.cn/problem/CF1475F">CF1475F Unusual Matrix</a></h2><p>一道贪心题，我们将题目中的两个矩阵中的元素分别异或，题目就转化为能否使这个矩阵全为0，对每一行单独判断是否和第一行相同或相反</p><details>    <summary>AC Code</summary><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> re register</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">1e3</span>+<span class="number">5</span>;</span><br><span class="line"><span class="type">char</span> s[N];</span><br><span class="line"><span class="type">int</span> n,a[N][N];</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="number">0</span>);cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="type">int</span> T;</span><br><span class="line">    cin&gt;&gt;T;</span><br><span class="line">    <span class="keyword">while</span>(T--)</span><br><span class="line">    &#123;</span><br><span class="line">        cin&gt;&gt;n;</span><br><span class="line">        <span class="type">int</span> flag=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(re <span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;++i)</span><br><span class="line">        &#123;</span><br><span class="line">            cin&gt;&gt;s+<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">for</span>(re <span class="type">int</span> j=<span class="number">1</span>;j&lt;=n;++j) a[i][j]=s[j]-<span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(re <span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;++i)</span><br><span class="line">        &#123;</span><br><span class="line">            cin&gt;&gt;s+<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">for</span>(re <span class="type">int</span> j=<span class="number">1</span>;j&lt;=n;++j) a[i][j]^=s[j]-<span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(re <span class="type">int</span> i=<span class="number">2</span>;i&lt;=n;++i)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> k=a[i][<span class="number">1</span>]^a[<span class="number">1</span>][<span class="number">1</span>];</span><br><span class="line">            <span class="keyword">for</span>(re <span class="type">int</span> j=<span class="number">2</span>;j&lt;=n;++j)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(a[i][j]^a[<span class="number">1</span>][j]^k)</span><br><span class="line">                &#123;</span><br><span class="line">                    flag=<span class="number">0</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(flag) cout&lt;&lt;<span class="string">&quot;YES\n&quot;</span>;</span><br><span class="line">        <span class="keyword">else</span> cout&lt;&lt;<span class="string">&quot;NO\n&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></details><h2 id="P1687-机器人小Q"><a href="#P1687-机器人小Q" class="headerlink" title="P1687 机器人小Q"></a><a href="https://www.luogu.com.cn/problem/P1687">P1687 机器人小Q</a></h2><p>与<a href="https://www.luogu.com.cn/problem/P3052">P3052</a>相似，相较之下比较好想的DP</p><p>ps:我可能用了假内存，MLE，改成滚动数组了</p><details>    <summary>AC Code</summary><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> re register</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">3e3</span>+<span class="number">5</span>;</span><br><span class="line"><span class="type">int</span> f[<span class="number">2</span>][N],g[<span class="number">2</span>][N];</span><br><span class="line"><span class="type">int</span> n,k,a[N],nn;</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="number">0</span>);cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    cin&gt;&gt;nn&gt;&gt;k;</span><br><span class="line">    <span class="type">int</span> x;</span><br><span class="line">    <span class="keyword">for</span>(re <span class="type">int</span> i=<span class="number">1</span>;i&lt;=nn;++i)</span><br><span class="line">    &#123;</span><br><span class="line">        cin&gt;&gt;x;</span><br><span class="line">        <span class="keyword">if</span>(x&lt;=<span class="number">119</span>) a[++n]=x;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(n&lt;k)</span><br><span class="line">    &#123;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;You can&#x27;t do it.&quot;</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(re <span class="type">int</span> i=<span class="number">1</span>;i&lt;=k;++i) f[<span class="number">0</span>][i]=f[<span class="number">1</span>][i]=<span class="number">1e9</span>;</span><br><span class="line">    <span class="keyword">for</span>(re <span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;++i)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(re <span class="type">int</span> j=<span class="number">1</span>;j&lt;=k;++j) f[i&amp;<span class="number">1</span>][j]=<span class="number">1e9</span>;</span><br><span class="line">        <span class="keyword">for</span>(re <span class="type">int</span> j=<span class="number">1</span>;j&lt;=k;++j)</span><br><span class="line">        &#123;</span><br><span class="line">            f[i&amp;<span class="number">1</span>][j]=f[i+<span class="number">1</span>&amp;<span class="number">1</span>][j],g[i&amp;<span class="number">1</span>][j]=g[i+<span class="number">1</span>&amp;<span class="number">1</span>][j];</span><br><span class="line">            <span class="keyword">if</span>(g[i+<span class="number">1</span>&amp;<span class="number">1</span>][j<span class="number">-1</span>]&gt;=a[i])</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(f[i&amp;<span class="number">1</span>][j]&gt;f[i+<span class="number">1</span>&amp;<span class="number">1</span>][j<span class="number">-1</span>]) f[i&amp;<span class="number">1</span>][j]=f[i+<span class="number">1</span>&amp;<span class="number">1</span>][j<span class="number">-1</span>],g[i&amp;<span class="number">1</span>][j]=g[i+<span class="number">1</span>&amp;<span class="number">1</span>][j<span class="number">-1</span>]-a[i];</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span>(f[i&amp;<span class="number">1</span>][j]==f[i+<span class="number">1</span>&amp;<span class="number">1</span>][j<span class="number">-1</span>]) g[i&amp;<span class="number">1</span>][j]=<span class="built_in">max</span>(g[i&amp;<span class="number">1</span>][j],g[i+<span class="number">1</span>&amp;<span class="number">1</span>][j<span class="number">-1</span>]-a[i]);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(f[i&amp;<span class="number">1</span>][j]&gt;f[i+<span class="number">1</span>&amp;<span class="number">1</span>][j<span class="number">-1</span>]+<span class="number">1</span>) f[i&amp;<span class="number">1</span>][j]=f[i+<span class="number">1</span>&amp;<span class="number">1</span>][j<span class="number">-1</span>]+<span class="number">1</span>,g[i&amp;<span class="number">1</span>][j]=<span class="number">119</span>-a[i];</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span>(f[i&amp;<span class="number">1</span>][j]==f[i+<span class="number">1</span>&amp;<span class="number">1</span>][j<span class="number">-1</span>]+<span class="number">1</span>) g[i&amp;<span class="number">1</span>][j]=<span class="built_in">max</span>(g[i&amp;<span class="number">1</span>][j],<span class="number">119</span>-a[i]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;f[n&amp;<span class="number">1</span>][k];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></details><h2 id="UVA12467-Secret-Word"><a href="#UVA12467-Secret-Word" class="headerlink" title="UVA12467 Secret Word"></a><a href="https://www.luogu.com.cn/problem/UVA12467">UVA12467 Secret Word</a></h2><p>将S倒过来kmp匹配就行了，记录匹配最大长度</p><details>    <summary>AC COde</summary><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> re register</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">1e6</span>+<span class="number">5</span>;</span><br><span class="line"><span class="type">char</span> s[N],s1[N];</span><br><span class="line"><span class="type">int</span> ne[N],n,res;</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="number">0</span>);cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="type">int</span> T;</span><br><span class="line">    cin&gt;&gt;T;</span><br><span class="line">    <span class="keyword">while</span>(T--)</span><br><span class="line">    &#123;</span><br><span class="line">        cin&gt;&gt;s+<span class="number">1</span>;</span><br><span class="line">        n=<span class="built_in">strlen</span>(s+<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">for</span>(re <span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;++i) s1[i]=s[n-i+<span class="number">1</span>];</span><br><span class="line">        <span class="type">int</span> j=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(re <span class="type">int</span> i=<span class="number">2</span>;i&lt;=n;++i)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">while</span>(s[j+<span class="number">1</span>]!=s[i]&amp;&amp;j) j=ne[j];</span><br><span class="line">            <span class="keyword">if</span>(s[j+<span class="number">1</span>]==s[i]) ++j;</span><br><span class="line">            ne[i]=j;</span><br><span class="line">        &#125;</span><br><span class="line">        res=j=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(re <span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;++i)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">while</span>(s[j+<span class="number">1</span>]!=s1[i]&amp;&amp;j) j=ne[j];</span><br><span class="line">            <span class="keyword">if</span>(s[j+<span class="number">1</span>]==s1[i]) ++j;</span><br><span class="line">            res=<span class="built_in">max</span>(res,j);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(re <span class="type">int</span> i=res;i;--i) cout&lt;&lt;s[i];</span><br><span class="line">        cout&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></details><h2 id="AT4756-ABC126E-1-or-2"><a href="#AT4756-ABC126E-1-or-2" class="headerlink" title="AT4756 [ABC126E] 1 or 2"></a><a href="https://www.luogu.com.cn/problem/AT4756">AT4756 [ABC126E] 1 or 2</a></h2><p>并查集维护关系</p><details>    <summary>AC Code</summary><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> re register</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">1e6</span>+<span class="number">5</span>;</span><br><span class="line"><span class="type">int</span> n,m;</span><br><span class="line"><span class="type">int</span> f[N],res;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">int</span> <span class="title">find</span><span class="params">(<span class="type">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> x==f[x]?x:f[x]=<span class="built_in">find</span>(f[x]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="number">0</span>);cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;m;</span><br><span class="line">    <span class="keyword">for</span>(re <span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;++i) f[i]=i;</span><br><span class="line">    <span class="type">int</span> x,y,z;</span><br><span class="line">    <span class="keyword">while</span>(m--)</span><br><span class="line">    &#123;</span><br><span class="line">        cin&gt;&gt;x&gt;&gt;y&gt;&gt;z;</span><br><span class="line">        x=<span class="built_in">find</span>(x),y=<span class="built_in">find</span>(y);</span><br><span class="line">        <span class="keyword">if</span>(x==y) <span class="keyword">continue</span>;</span><br><span class="line">        f[x]=y;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(re <span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;++i) <span class="keyword">if</span>(f[i]==i) ++res;</span><br><span class="line">    cout&lt;&lt;res;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></details><h2 id="SP39-PIGBANK-Piggy-Bank"><a href="#SP39-PIGBANK-Piggy-Bank" class="headerlink" title="SP39 PIGBANK - Piggy-Bank"></a><a href="https://www.luogu.com.cn/problem/SP39">SP39 PIGBANK - Piggy-Bank</a></h2><p>完全背包裸题</p><details>    <summary>AC Code</summary><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> re register</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">505</span>;</span><br><span class="line"><span class="type">int</span> T,n,m;</span><br><span class="line"><span class="type">int</span> f[<span class="number">10005</span>],w[N],v[N];</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">cin.<span class="built_in">tie</span>(<span class="number">0</span>);cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">cin&gt;&gt;T;</span><br><span class="line"><span class="keyword">while</span>(T--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> x,y;</span><br><span class="line">cin&gt;&gt;x&gt;&gt;y&gt;&gt;n;</span><br><span class="line">m=y-x,f[<span class="number">0</span>]=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(re <span class="type">int</span> j=<span class="number">1</span>;j&lt;=m;++j) f[j]=<span class="number">1e9</span>;</span><br><span class="line"><span class="keyword">for</span>(re <span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;++i)cin&gt;&gt;v[i]&gt;&gt;w[i];</span><br><span class="line"><span class="keyword">for</span>(re <span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;++i)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(re <span class="type">int</span> j=w[i];j&lt;=m;++j)</span><br><span class="line">&#123;</span><br><span class="line">f[j]=<span class="built_in">min</span>(f[j],f[j-w[i]]+v[i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(f[m]==<span class="number">1e9</span>) cout&lt;&lt;<span class="string">&quot;This is impossible.&quot;</span>&lt;&lt;endl;</span><br><span class="line"><span class="keyword">else</span> cout&lt;&lt;<span class="string">&quot;The minimum amount of money in the piggy-bank is &quot;</span>&lt;&lt;f[m]&lt;&lt;<span class="string">&quot;.&quot;</span>&lt;&lt;endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></details><h2 id="AT3947-AGC022B-GCD-Sequence"><a href="#AT3947-AGC022B-GCD-Sequence" class="headerlink" title="AT3947 [AGC022B] GCD Sequence"></a><a href="https://www.luogu.com.cn/problem/AT3947">AT3947 [AGC022B] GCD Sequence</a></h2><p>又是神(du)仙(liu)构造题，先咕着吧</p><h2 id="P5026-Lycanthropy"><a href="#P5026-Lycanthropy" class="headerlink" title="P5026 Lycanthropy"></a><a href="https://www.luogu.com.cn/problem/P5026">P5026 Lycanthropy</a></h2><p>差分好题</p><p>由于只查询一次，先差分，最后做前缀和就好了</p><details>    <summary>AC Code</summary><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> n,m;</span><br><span class="line"><span class="type">int</span> aa[<span class="number">2100000</span>],bb[<span class="number">2100000</span>];</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> isdigit(x) ((x)&gt;=<span class="string">&#x27;0&#x27;</span>&amp;&amp;(x)&lt;=<span class="string">&#x27;9&#x27;</span>)</span></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> a=<span class="number">0</span>,flag=<span class="number">1</span>;</span><br><span class="line">    <span class="type">char</span> c=<span class="built_in">getchar</span>();</span><br><span class="line">    <span class="keyword">while</span>(!<span class="built_in">isdigit</span>(c))&#123;</span><br><span class="line">        <span class="keyword">if</span>(c==<span class="string">&#x27;-&#x27;</span>)flag=<span class="number">-1</span>;</span><br><span class="line">        c=<span class="built_in">getchar</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">isdigit</span>(c))&#123;</span><br><span class="line">        a=(a&lt;&lt;<span class="number">1</span>)+(a&lt;&lt;<span class="number">3</span>)+c<span class="number">-48</span>;</span><br><span class="line">        c=<span class="built_in">getchar</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> a*flag;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    n=<span class="built_in">read</span>(),m=<span class="built_in">read</span>();</span><br><span class="line">    <span class="type">int</span> *a=aa+<span class="number">1000000</span>,*b=bb+<span class="number">1000000</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;++i)&#123;</span><br><span class="line">        <span class="type">int</span> v=<span class="built_in">read</span>(),x=<span class="built_in">read</span>();</span><br><span class="line">        a[x<span class="number">-3</span>*v+<span class="number">1</span>]++;</span><br><span class="line">        a[x<span class="number">-2</span>*v+<span class="number">1</span>]-=<span class="number">2</span>;</span><br><span class="line">        a[x+<span class="number">1</span>]+=<span class="number">2</span>;</span><br><span class="line">        a[x+<span class="number">2</span>*v+<span class="number">1</span>]-=<span class="number">2</span>;</span><br><span class="line">        a[x+<span class="number">3</span>*v+<span class="number">1</span>]++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">-40000</span>;i&lt;=m+<span class="number">40000</span>;++i)a[i]+=a[i<span class="number">-1</span>],b[i]+=b[i<span class="number">-1</span>]+a[i];</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=m;++i)<span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,b[i]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></details><h2 id="P4868-Preprefix-sum"><a href="#P4868-Preprefix-sum" class="headerlink" title="P4868 Preprefix sum"></a><a href="https://www.luogu.com.cn/problem/P4868">P4868 Preprefix sum</a></h2><p>又到了<code>OIer</code>优良传统，<del>丧心病狂</del>的推柿子时间</p><p>$S_i= {\textstyle \sum_{k=1}^{i}}a_k$</p><p>$SS_i$=$ {\textstyle \sum_{i=1}^{n}}S_i$=$(n+1){\textstyle \sum_{i=1}^{n}}a_i$-${\textstyle \sum_{i=1}^{n}}i*a_i$</p><p>$ps:LaTex真sb$</p><p>接着拿两个树状数组，一个维护${\textstyle \sum_{i=1}^{n}}a_i$,另一个维护${\textstyle \sum_{i=1}^{n}}i*a_i$就行了</p><details>    <summary>AC Code</summary><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> n,m,x,y;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">100010</span>;</span><br><span class="line"><span class="type">int</span> ans,len;</span><br><span class="line"><span class="type">int</span> a[N],c1[N&lt;&lt;<span class="number">1</span>],c2[N&lt;&lt;<span class="number">1</span>];</span><br><span class="line"><span class="type">char</span> s[<span class="number">101</span>];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">read</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">char</span> ch;<span class="type">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch=<span class="built_in">getchar</span>()))</span><br><span class="line">&#123;(ch==<span class="string">&#x27;-&#x27;</span>)&amp;&amp;(f=-f);&#125;</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))</span><br><span class="line">&#123;x=(x&lt;&lt;<span class="number">1</span>)+(x&lt;&lt;<span class="number">3</span>)+(ch^<span class="number">48</span>);ch=<span class="built_in">getchar</span>();&#125;</span><br><span class="line">    <span class="keyword">return</span> x*f;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">lowbit</span><span class="params">(<span class="type">int</span> x)</span></span>&#123;<span class="keyword">return</span> x&amp;(-x);&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">add1</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> v)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=x;i&lt;=(N&lt;&lt;<span class="number">1</span>);i+=<span class="built_in">lowbit</span>(i))c1[i]+=v;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">add2</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> v)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=x;i&lt;=(N&lt;&lt;<span class="number">1</span>);i+=<span class="built_in">lowbit</span>(i))c2[i]+=v;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">ask1</span><span class="params">(<span class="type">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> res=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=x;i;i-=<span class="built_in">lowbit</span>(i))res+=c1[i];</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">ask2</span><span class="params">(<span class="type">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> res=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=x;i;i-=<span class="built_in">lowbit</span>(i))res+=c2[i];</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">cin.<span class="built_in">tie</span>(<span class="number">0</span>);cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">cin&gt;&gt;n&gt;&gt;m;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;++i)cin&gt;&gt;a[i],<span class="built_in">add1</span>(i,a[i]),<span class="built_in">add2</span>(i,a[i]*i);</span><br><span class="line"><span class="keyword">while</span>(m--)</span><br><span class="line">&#123;</span><br><span class="line">cin&gt;&gt;s&gt;&gt;x;</span><br><span class="line"><span class="keyword">if</span>(s[<span class="number">0</span>]==<span class="string">&#x27;Q&#x27;</span>)cout&lt;&lt;((x+<span class="number">1</span>)*<span class="built_in">ask1</span>(x)-<span class="built_in">ask2</span>(x))&lt;&lt;endl;</span><br><span class="line"><span class="keyword">else</span> cin&gt;&gt;y,<span class="built_in">add1</span>(x,y-a[x]),<span class="built_in">add2</span>(x,(y-a[x])*x),a[x]=y;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></details>]]></content>
      
      
      <categories>
          
          <category> OI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 做题记录 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>做题反思2022.8.16 ~ 8.19</title>
      <link href="//OI/%E5%81%9A%E9%A2%98%E5%8F%8D%E6%80%9D2022-8-16-8-19/"/>
      <url>//OI/%E5%81%9A%E9%A2%98%E5%8F%8D%E6%80%9D2022-8-16-8-19/</url>
      
        <content type="html"><![CDATA[<p>被吊打了</p><span id="more"></span><h2 id="CSP2021-95pts-0pts-0pts-40pts-135pts-rk-n"><a href="#CSP2021-95pts-0pts-0pts-40pts-135pts-rk-n" class="headerlink" title="CSP2021(95pts+0pts+0pts+40pts=135pts)($rk$  $n$)"></a>CSP2021(95pts+0pts+0pts+40pts=135pts)($rk$  $n$)</h2><p>T1 水题 线段树上二分(求前缀和时注意上限是n)或贪心(使用优先队列)</p><p>T2 状态较多的区间DP</p><p><code>f[l][r][0~5]</code>为<code>l~r</code>不同形式的数量</p><p>1代表S 2代表A 3代表SA 4代表AS 5代表ASA</p><p>T3 四指针扫描法,从$a[1]$对应数的位置前后扫,如果和外围指针对应就移动</p><p>T4 用dinic跑最大流（最小割）可得60pts,正解还不会,似乎是在对偶图上跑最短路并区间DP</p><p>贺题解后得分:100pts+100pts+100pts+0pts=300pts</p><h2 id="NOIP2021-100pts-0pts-12pts-0pts-112pts-rk-n"><a href="#NOIP2021-100pts-0pts-12pts-0pts-112pts-rk-n" class="headerlink" title="NOIP2021(100pts+0pts+12pts+0pts=112pts)($rk$  $n$)"></a>NOIP2021(100pts+0pts+12pts+0pts=112pts)($rk$  $n$)</h2><p>T1 预处理/埃氏筛</p><p>T2 DP $f$[$i$][$j$][$k$][$p$] 表示前$i$个数中选了$j$个,有$k$个1,此时进位了$p$个1的方案数,刷表法,组合计数预处理,预处理$n$次幂</p><p>T3 推出答案公式为$n$*(∑$a_i$)^2-∑($a_i$^2)交换差分数组,推(猜)出单谷性质(可以打暴力验证),DP,将差分数组排序,$f[i][j]$表示前i个数中和的平方为j时平方和的最大值,从第i个数插入前面和后面中取最大值,填表法,并要使用滚动数组优化空间</p><p>T4 骗不到分</p><p>贺题解后得分:100pts+100pts+100pts+0pts=300pts</p><h2 id="NOIP2020-64pts-4pts-0pts-0pts-68pts-rk-n"><a href="#NOIP2020-64pts-4pts-0pts-0pts-68pts-rk-n" class="headerlink" title="NOIP2020(64pts+4pts+0pts+0pts=68pts)($rk$  $n$)"></a>NOIP2020(64pts+4pts+0pts+0pts=68pts)($rk$  $n$)</h2><p>T1 $a$/$b$+$c$/$d$=(a<em>d+b</em>c)/(b*d),注意约分和高精,或者__$int128$</p><p>T2 $kmp预处理ne数组$,求每个AB的循环,预处理前缀和后缀出现为奇数的数量,用数组记录A数量的数量,类似于某些莫队题的记录,对每个可能的C累加</p><p>T3 很妙的构造题,虽然我只看懂了一篇题解,Dzhao写的分治,个人觉得较为详细</p><p>T4 dfs+cout&lt;&lt;-1 骗分</p><p>贺题解后得分:100pts+100pts+0pts+0pts=200pts</p><h2 id="最近看的DP"><a href="#最近看的DP" class="headerlink" title="最近看的DP"></a>最近看的DP</h2><p>1.关路灯 蓝题中的基础题,比合唱队形还简单一点,只要想到数组开三维和DP就很容易,适合初学者</p><p>2.CSP-2019 Emiya家今天的饭(我绝对不会告诉你我贺了题解)<br>我这种蒟蒻觉得比较难,此题是套容斥原理的计数DP,直接求合法方案有难度,于是我们将其转化成总方案数-不合法方案数,</p><p>$f[i][j]$表示前$i$列中选了$j$个数的方案数(总方案),枚举超过一半的列,$g[i][j][k]$表示前$i$行中此列选了$j$个数,其他列选了$k$个数,最后记录$j&gt;k$的方案数,空间可以用滚动数组优化至($n^2$),但时间是($mn^3$)的</p><p>我们考虑优化,然后我们发现我们只关心$j和k$的大小关系,并不在乎其具体大小,我们可以仿照lyd的算法进阶中的Jury Compromise(陪审团)此题,将第三维删去,用$j-k$作为第二维,不过要将第二维下标平移$n$,时间复杂度为($mn^2$)</p><p>总结:CSP,NOIP反正全是DP,像我这种根本想不出方程的人就只能去世,准备爆零-&gt;退役-&gt;去世一条龙</p>]]></content>
      
      
      <categories>
          
          <category> OI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 做题记录 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>新博客</title>
      <link href="//uncategorized/%E6%96%B0%E5%8D%9A%E5%AE%A2/"/>
      <url>//uncategorized/%E6%96%B0%E5%8D%9A%E5%AE%A2/</url>
      
        <content type="html"><![CDATA[<p>Hello,World</p><span id="more"></span><p>在经历多次尝试，并在<code>_Eternal_</code>和<code>_Live_</code>巨佬的帮助下，我<del>成功地</del>建起了这个<code>blog</code>，以后估计会在这儿更一些<del>奇奇怪怪</del>的东西吧</p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
